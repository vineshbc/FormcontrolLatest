{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDContainer/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDContainer/index.vue","mtime":1611592520000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDContainer","sourcesContent":["<template>\r\n  <div @mouseup=\"onMouseUp\">\r\n    <drag-selector\r\n      ref=\"dragSelector\"\r\n      :style=\"dragSelectorStyle\"\r\n      :class=\"getDragSelector\"\r\n    >\r\n      <GroupControl\r\n        :containerId=\"containerId\"\r\n        :userFormId=\"userFormId\"\r\n        ref=\"groupRef\"\r\n        class=\"group\"\r\n        :controlRef=\"$refs\"\r\n        :currentSelectedGroup=\"filterSelected\"\r\n        @openMenu=\"(e, parentID, controlID, type) => openContextMenu(e, parentID, controlID, type)\"\r\n      />\r\n      <div\r\n        v-for=\"control in propControlData.controls\"\r\n        :key=\"control\"\r\n        class=\"resize\"\r\n      >\r\n        <ResizeControl\r\n          ref=\"resizeControl\"\r\n          :name=\"control\"\r\n          :controlId=\"control\"\r\n          :containerId=\"controlId\"\r\n          :userFormId=\"userFormId\"\r\n          :currentSelectedGroup.sync=\"currentSelectedGroup\"\r\n          @createGroup=\"createGroup\"\r\n          @dragControl=\"dragControl\"\r\n          @muldragControl=\"muldragControl\"\r\n        >\r\n        </ResizeControl>\r\n      </div>\r\n    </drag-selector>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Emit, Prop, Vue, Ref, Watch } from 'vue-property-decorator'\r\nimport { State, Action } from 'vuex-class'\r\nimport ResizeControl from '@/FormDesigner/components/organisms/FDResizeControl/index.vue'\r\nimport ContextMenu from '@/FormDesigner/components/atoms/FDContextMenu/index.vue'\r\nimport { controlContextMenu } from '@/FormDesigner/models/controlContextMenuData'\r\nimport { userformContextMenu } from '../../../models/userformContextMenuData'\r\nimport GroupControl from '@/FormDesigner/components/organisms/FDGroupControl/index.vue'\r\nimport {\r\n  IsetChildControls,\r\n  IaddChildControls,\r\n  IselectControl,\r\n  IupdateControl,\r\n  IupdateGroup,\r\n  IupdateControlExtraData\r\n} from '@/storeModules/fd/actions'\r\nimport { EventBus } from '../../../event-bus'\r\nimport FDCommonMethod from '@/api/abstract/FormDesigner/FDCommonMethod'\r\n@Component({\r\n  name: 'Container',\r\n  components: {\r\n    ContextMenu,\r\n    GroupControl,\r\n    ResizeControl\r\n  }\r\n})\r\nexport default class Container extends FDCommonMethod {\r\n  $el!: HTMLDivElement;\r\n  currentSelectedGroup: string = '';\r\n\r\n  @Prop({ required: true, type: String }) public controlId!: string;\r\n  @Prop({ required: true, type: String }) userFormId!: string;\r\n  @Prop({ required: true, type: String }) containerId!: string;\r\n  @Prop() mouseCursorData: string;\r\n  @Prop() getSampleDotPattern: { backgroundImage: string; backgroundSize: string; backgroundPosition: string }\r\n\r\n  @State((state) => state.fd.selectedControls)\r\n  selectedControls!: fdState['selectedControls'];\r\n  @State((state) => state.fd.userformData) userformData!: userformData;\r\n  @State((state) => state.fd.groupedControls)\r\n  groupedControls!: fdState['groupedControls'];\r\n\r\n  @Action('fd/updateGroup') updateGroup!: (payload: IupdateGroup) => void;\r\n  @Action('fd/updateControlExtraData') updateControlExtraData!: (payload: IupdateControlExtraData) => void;\r\n  @Action('fd/updateControl') updateControl!: (payload: IupdateControl) => void;\r\n  @Action('fd/setChildControls') setChildControls!: (\r\n    payload: IsetChildControls\r\n  ) => void;\r\n  @Action('fd/addChildControls') addChildControls!: (\r\n    payload: IaddChildControls\r\n  ) => void;\r\n  @Action('fd/selectControl') selectControl!: (payload: IselectControl) => void;\r\n\r\n  @Prop() isEditMode: boolean;\r\n  @Prop() width: number\r\n  @Prop() height: number\r\n\r\n  @Ref('groupRef') readonly groupRef!: GroupControl;\r\n  @Ref('refContextMenu') readonly refContextMenu!: ContextMenu;\r\n  @Ref('dragSelector') readonly dragSelector: dragselector;\r\n  @Ref('contextmenu') readonly contextmenu: HTMLDivElement;\r\n\r\n  controlContextMenu: Array<IcontextMenu> = controlContextMenu;\r\n  userformContextMenu: Array<IcontextMenu> = userformContextMenu;\r\n  handler: string = '';\r\n  grouphandler: string = '';\r\n  mainSelectData: controlData\r\n  containerPosition: IMousePosition = { clientX: 0, clientY: 0, movementX: 0, movementY: 0 }\r\n  selectedGroup: string[] = []\r\n  groupStyleArray: Array<IGroupStyle> = []\r\n\r\n  /**\r\n   * @description To get the selected container  from controls are dragged\r\n   * @function selectedContainer\r\n   */\r\n  get selectedContainer () {\r\n    return [...this.selectedControls[this.userFormId].container][0]\r\n  }\r\n\r\n  /**\r\n   * @description To get the selected controls to be dropped\r\n   * @function selectedSelect\r\n   */\r\n  get selectedSelect () {\r\n    if (this.grouphandler === 'groupdrag') {\r\n      const selectedSelect = []\r\n      for (let k = 0; k < this.selectedGroup.length; k++) {\r\n        if (this.selectedGroup[k].startsWith('group')) {\r\n          for (const i in this.userformData[this.userFormId]) {\r\n            if (!i.startsWith('ID_USERFORM')) {\r\n              const userdata = this.userformData[this.userFormId]\r\n              if (userdata[i].properties.GroupID === this.selectedGroup[k]) {\r\n                selectedSelect.push(i)\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          selectedSelect.push(this.selectedGroup[k])\r\n        }\r\n      }\r\n      return selectedSelect\r\n    } else {\r\n      return this.selectedControls[this.userFormId].selected\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description To get the controls to be removed from the  selected container\r\n   * @function fromContainerControls\r\n   */\r\n  get fromContainerControls () {\r\n    const fromContainerControls = [...this.userformData[this.userFormId][this.selectedContainer].controls]\r\n    for (let i = 0; i < this.selectedSelect.length; i++) {\r\n      let tragetId: undefined | string = this.selectedSelect[i]\r\n      let targetIndex = fromContainerControls.findIndex((id) => id === tragetId)\r\n      if (targetIndex !== -1) {\r\n        fromContainerControls.splice(targetIndex, 1)\r\n      }\r\n    }\r\n    return fromContainerControls\r\n  }\r\n\r\n  /**\r\n   * @description To remove chilControls of selected Container\r\n   * @function removeChildControl\r\n   * @param selectedSelect  - control array to be deleted\r\n   */\r\n  removeChildControl (id: string, controls: string[]) {\r\n    const userData = this.userformData[this.userFormId]\r\n    const beforeControls = userData[id].controls\r\n    const deleteControls = beforeControls.filter(x => !controls.includes(x))\r\n    for (const key of deleteControls) {\r\n      this.deleteZIndex(key)\r\n      this.deleteTabIndex(key)\r\n    }\r\n\r\n    this.setChildControls({\r\n      userFormId: this.userFormId,\r\n      containerId: id,\r\n      targetControls: controls\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description To add chilControls of selected Container\r\n   * @function addChildControl\r\n   * @param selectedSelect  - control array to be added\r\n   */\r\n  addChildControl (selectedSelect: string[]) {\r\n    const userData = this.userformData[this.userFormId]\r\n    for (const control of selectedSelect) {\r\n      if (!userData[this.containerId].controls.includes(control)) {\r\n        this.addChildControls({\r\n          userFormId: this.userFormId,\r\n          containerId: this.containerId,\r\n          targetControls: selectedSelect\r\n        })\r\n      }\r\n    }\r\n\r\n    for (const id of selectedSelect) {\r\n      this.updateTabIndexValue(id)\r\n      this.updateZIndexValue(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description To update Properties of Control\r\n   * @function updateControlProp\r\n   * @param id  - selcted controlId\r\n   * @param propName  -  selected control property Name\r\n   * @param propName  -  selected control property Value\r\n   */\r\n  updateControlProp (id: string, propName: keyof controlProperties, propValue: number| string) {\r\n    this.updateControl({\r\n      userFormId: this.userFormId,\r\n      controlId: id,\r\n      propertyName: propName,\r\n      value: propValue\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description To update the selectedControls in main data\r\n   * @function updatedSelect\r\n   * @param updatedSelect  - selcted ContainerId\r\n   * @param selArry  - selcted controlList\r\n   */\r\n  updatedSelect (conatiner: string[], selArry: string[]) {\r\n    this.selectControl({\r\n      userFormId: this.userFormId,\r\n      select: {\r\n        container: conatiner,\r\n        selected: selArry\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @description If control inside the group is selected dropped into other container\r\n   * @function updateGroupControl\r\n   * @param mainSelectGroup  - selected group\r\n   */\r\n  updateGroupControl (mainSelectGroup: string) {\r\n    const presenetControl: string[] = []\r\n    if (mainSelectGroup && mainSelectGroup !== '') {\r\n      for (let control in this.userformData[this.userFormId]) {\r\n        const controlGroupId = this.userformData[this.userFormId][control].properties.GroupID!\r\n        if (controlGroupId && controlGroupId === mainSelectGroup) {\r\n          presenetControl.push(control)\r\n        }\r\n      }\r\n    }\r\n    if (presenetControl.length === 1) {\r\n      const groupArray: string[] = [...this.groupedControls[this.userFormId]!.groupArray!]\r\n      const index = groupArray.findIndex((val) => val === mainSelectGroup)\r\n      groupArray.splice(index, 1)\r\n      this.updateGroup({\r\n        userFormId: this.userFormId,\r\n        groupArray: groupArray\r\n      })\r\n      this.updateControlProp(presenetControl[0], 'GroupID', '')\r\n    }\r\n  }\r\n  /**\r\n   * @description to drag and drop the control and group into respective container\r\n   * @function onMouseUp\r\n   * @param event  - it is of type MouseEvent\r\n   * @event mouseup\r\n   */\r\n  onMouseUp (event: MouseEvent) {\r\n    if (document.onmousemove && document.onmouseup && (this.handler === 'drag' || this.handler === 'frameDrag' || this.grouphandler === 'groupdrag')) {\r\n      const userData = this.userformData[this.userFormId]\r\n      const containerType = userData[this.containerId].type === 'Page' && userData[this.getContainerList(this.containerId)[0]].properties.Value === -1\r\n      if (!containerType) {\r\n        let moveValueX: number = 0\r\n        let moveValueY: number = 0\r\n        let mainSelect: string = ''\r\n        let parentConatiner = ''\r\n        let count = 0\r\n        let tempEvent = {}\r\n        this.selectedGroup = this.selectedControls[this.userFormId].selected\r\n        if (this.grouphandler === 'groupdrag') {\r\n          EventBus.$emit(\r\n            'getGroupMoveValue',\r\n            (offsetX: number, offsetY: number, id: string, tempEventObj: MouseEvent) => {\r\n              moveValueX = offsetX\r\n              moveValueY = offsetY\r\n              tempEvent = Object.keys(tempEventObj).length === 0 ? tempEvent : tempEventObj\r\n            }\r\n          )\r\n          mainSelect = this.getSelectedControlsDatas![0]\r\n        } else if (this.handler === 'drag') {\r\n          EventBus.$emit(\r\n            'getMoveValue',\r\n            (offsetX: number, offsetY: number, id: string) => {\r\n              moveValueX = offsetX\r\n              moveValueY = offsetY\r\n              mainSelect = id\r\n            }\r\n          )\r\n        } else if (this.handler === 'frameDrag') {\r\n          EventBus.$emit(\r\n            'getMoveValue',\r\n            (offsetX: number, offsetY: number, id: string, parentControl: string) => {\r\n              moveValueX = offsetX\r\n              moveValueY = offsetY\r\n              mainSelect = id\r\n              parentConatiner = parentControl\r\n            }\r\n          )\r\n        }\r\n        if (mainSelect && !this.getSelectedControlsDatas!.includes(this.containerId)) {\r\n          count = count + 1\r\n          let frameCondition: boolean = false\r\n          if (this.handler === 'frameDrag') {\r\n            const isChild = this.getChildControl(mainSelect).includes(this.containerId) || this.containerId === mainSelect\r\n            frameCondition = (isChild === false && parentConatiner === this.containerId) ||\r\n          (isChild === false && this.selectedControls[this.userFormId].selected.includes(mainSelect)) ||\r\n          (isChild === false && count === 1)\r\n          }\r\n          if ((this.handler === 'frameDrag' && frameCondition) || this.handler === 'drag' || this.grouphandler === 'groupdrag') {\r\n            const currentControlsData = this.userformData[this.userFormId]\r\n            const mainSelectData = currentControlsData[mainSelect]\r\n            const mainSelectX = mainSelectData.properties.Left\r\n            const mainSelectY = mainSelectData.properties.Top\r\n            const containerX = event.clientX - this.$el.getClientRects()[0].x\r\n            const containerY = event.clientY - this.$el.getClientRects()[0].y\r\n            const mainSelectGroup: string = mainSelectData.properties.GroupID!\r\n            const selectedSelect = this.handler === 'frameDrag' ? (this.selectedSelect.includes(mainSelect) ? this.selectedSelect : [mainSelect]) : this.selectedSelect\r\n            if (typeof mainSelectX === 'number' && typeof mainSelectY === 'number') {\r\n              if ((this.handler === 'frameDrag' || this.handler === 'drag')) {\r\n                selectedSelect.forEach((id) => {\r\n                  const targetData = currentControlsData[id].properties\r\n                  const targetLeft = targetData.Left\r\n                  const targetTop = targetData.Top\r\n                  if (typeof targetTop === 'number' && typeof targetLeft === 'number') {\r\n                    this.updateControlProp(id, 'Left', containerX + targetLeft - mainSelectX - moveValueX)\r\n                    this.updateControlProp(id, 'Top', containerY + targetTop - mainSelectY - moveValueY)\r\n                    if (this.handler === 'drag') {\r\n                      if (mainSelectGroup !== '' && this.selectedContainer !== this.containerId) {\r\n                        this.updateControlProp(id, 'GroupID', '')\r\n                        this.updateGroupControl(mainSelectGroup)\r\n                      }\r\n                    }\r\n                  }\r\n                })\r\n              } else if (this.grouphandler === 'groupdrag' && this.selectedContainer === this.containerId) {\r\n                EventBus.$emit('getClientValue', 'same')\r\n              }\r\n            }\r\n            if (this.handler === 'frameDrag' && this.userformData[this.userFormId][this.containerId].controls.includes(mainSelect)) {\r\n              event.stopPropagation()\r\n              document.onmouseup(event)\r\n            } else {\r\n              if (this.selectedContainer !== this.containerId) {\r\n                const mainSelContainer = this.getContainerList(mainSelect)[0]\r\n                if (this.selectedControls[this.userFormId].selected.includes(mainSelect) || this.grouphandler === 'groupdrag') {\r\n                  this.removeChildControl(this.selectedContainer, this.fromContainerControls)\r\n                  this.addChildControl(selectedSelect)\r\n                } else {\r\n                  const controls = this.userformData[this.userFormId][mainSelContainer].controls\r\n                  const removeControl = controls.filter(e => e !== mainSelect)\r\n                  this.removeChildControl(mainSelContainer, removeControl)\r\n                  this.addChildControl([mainSelect])\r\n                }\r\n                if (this.grouphandler === 'groupdrag') {\r\n                  for (let k = 0; k < this.selectedGroup.length; k++) {\r\n                    if (this.selectedGroup[k].startsWith('group')) {\r\n                      this.createGroup(this.selectedGroup[k])\r\n                    }\r\n                  }\r\n                }\r\n\r\n                if (this.grouphandler === 'groupdrag') {\r\n                  if (this.grouphandler === 'groupdrag' && this.selectedContainer !== this.containerId) {\r\n                    EventBus.$emit('getClientValue', 'different', containerX, containerY, event, this.containerId, tempEvent)\r\n                  }\r\n                  const selected = this.selectedControls[this.userFormId].selected\r\n                  this.updatedSelect(this.getContainerList(selected[0]), selected)\r\n                } else {\r\n                  this.updatedSelect(this.getContainerList(this.selectedSelect[0]), this.selectedControls[this.userFormId].selected)\r\n                }\r\n              }\r\n              event.stopPropagation()\r\n              document.onmouseup(event)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        event.stopPropagation()\r\n        document.onmouseup(event)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description style object to dynamically changing the styles of  the contextMenu component based on propControlData\r\n   * @function styleObject\r\n   *\r\n   */\r\n  get filterSelected () {\r\n    const result =\r\n      this.currentSelectedGroup === ''\r\n        ? this.selectedControls[this.userFormId].selected.filter((Id) => {\r\n          if (typeof Id === 'string') {\r\n            return Id.startsWith('group')\r\n          }\r\n        })\r\n        : [this.currentSelectedGroup]\r\n    return result\r\n  }\r\n  createGroup (groupId: string) {\r\n    this.groupRef.groupStyle(groupId)\r\n  }\r\n  muldragControl (val: IDragResizeGroup) {\r\n    this.groupRef.handleMouseDown(val.event, val.handler)\r\n  }\r\n  dragControl (event: MouseEvent) {\r\n    this.groupRef.handleMouseDown(event, 'drag')\r\n  }\r\n  /**\r\n   * @description style object to dynamically changing the styles of  the darg-selctor component based on propControlData\r\n   * @function dragSelectorStyle\r\n   *\r\n   */\r\n  get dragSelectorStyle () {\r\n    const controlProp = this.propControlData.properties\r\n    const type = this.propControlData.type\r\n    const ph = type && type === 'Page' ? this.height! : this.propControlData.properties.Height!\r\n    const pw = type && type === 'Page' ? this.width! : this.propControlData.properties.Width!\r\n    const sh = this.propControlData.properties.ScrollHeight!\r\n    const sw = this.propControlData.properties.ScrollWidth!\r\n    let backgroundStyle = {}\r\n    if (controlProp.Picture !== '' && controlProp.ScrollBars! > 0) {\r\n      backgroundStyle = {}\r\n    } else {\r\n      backgroundStyle = {\r\n        backgroundImage: this.getSampleDotPattern.backgroundImage,\r\n        backgroundSize: this.getSampleDotPattern.backgroundSize,\r\n        backgroundRepeat: 'repeat',\r\n        backgroundPosition: this.getSampleDotPattern.backgroundPosition\r\n      }\r\n    }\r\n    return {\r\n      ...backgroundStyle,\r\n      height: '100%',\r\n      width: '100%',\r\n      position: 'absolute',\r\n      cursor: type && type === 'Page' ? 'default !important'\r\n        : this.propControlData.properties.MousePointer !== 0 ||\r\n        this.propControlData.properties.MouseIcon !== ''\r\n          ? `${this.mouseCursorData} !important`\r\n          : 'default !important'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description propControlData is abstract class providing implementation in FDContainer by passing\r\n   * userFormId and controlId which is taken as props from parent Component\r\n   * @function propControlData\r\n   *\r\n   */\r\n  get propControlData (): controlData {\r\n    return this.userformData[this.userFormId][this.controlId]\r\n  }\r\n\r\n  get getDragSelector () {\r\n    if (this.isEditMode === false && this.selectedControls[this.userFormId].selected.length > 1) {\r\n      return 'dragSelector'\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description To display contextmenu of control\r\n   * @function openContextMenu\r\n   * @param e it is type of mouseEvent\r\n   * @param parentID is the UserFormId in which the control resides\r\n   * @param controlId is the selected control of which context has to be displayed\r\n   */\r\n  openContextMenu (e: MouseEvent, parentID: string, controlID: string, type: string, mode: boolean) {\r\n    EventBus.$emit('contextMenuDisplay', event, parentID, controlID, type, mode)\r\n  }\r\n  created () {\r\n    EventBus.$on('handleName', (handler: string) => {\r\n      this.handler = handler\r\n    })\r\n    EventBus.$on('groupDrag', (handler: string) => {\r\n      this.grouphandler = handler\r\n    })\r\n    EventBus.$on('createGroup', (groupId: string) => {\r\n      this.createGroup(groupId)\r\n    })\r\n  }\r\n  // destroyed () {\r\n  //   EventBus.$off('handleName')\r\n  //   EventBus.$off('groupDrag')\r\n  // }\r\n  @Watch('selectedControls', { deep: true })\r\n  updateGroupStyle () {\r\n    if (this.selectedContainer === this.containerId) {\r\n      EventBus.$emit('groupArray', this.groupRef.divStyleArray)\r\n      this.groupStyleArray = [...this.groupRef.divStyleArray]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n:focus {\r\n  outline: none;\r\n}\r\n.dragSelector {\r\n  visibility: hidden;\r\n}\r\n.dragSelector > .resize {\r\n  visibility: visible;\r\n}\r\n.dragSelector > .group {\r\n  visibility: visible;\r\n}\r\n</style>\r\n"]}]}