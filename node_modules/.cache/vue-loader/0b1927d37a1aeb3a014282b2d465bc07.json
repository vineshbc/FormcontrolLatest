{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDPropertyList/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDPropertyList/index.vue","mtime":1612197584000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQppbXBvcnQgeyBDb21wb25lbnQsIFByb3AsIFJlZiwgVnVlLCBXYXRjaCB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InDQppbXBvcnQgeyBBY3Rpb24sIFN0YXRlIH0gZnJvbSAndnVleC1jbGFzcycNCmltcG9ydCBGRFRhYmxlIGZyb20gJ0AvRm9ybURlc2lnbmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0ZEVGFibGUvaW5kZXgudnVlJw0KaW1wb3J0IHsgUHJvcGVydHlMaXN0RGVmaW5lIH0gZnJvbSAnQC9Gb3JtRGVzaWduZXIvbW9kZWxzL0NvbnRyb2xzVGFibGVQcm9wZXJ0aWVzL3Byb3BlcnR5TGlzdCcNCmltcG9ydCB7IElzZWxlY3RDb250cm9sIH0gZnJvbSAnQC9zdG9yZU1vZHVsZXMvZmQvYWN0aW9ucycNCmltcG9ydCBGRENvbW1vbk1ldGhvZCBmcm9tICdAL2FwaS9hYnN0cmFjdC9Gb3JtRGVzaWduZXIvRkRDb21tb25NZXRob2QnDQppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJ0AvRm9ybURlc2lnbmVyL2V2ZW50LWJ1cycNCg0KQENvbXBvbmVudCh7DQogIG5hbWU6ICdQcm9wZXJ0aWVzTGlzdCcsDQogIGNvbXBvbmVudHM6IHsNCiAgICBGRFRhYmxlDQogIH0NCn0pDQpleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9wZXJ0aWVzTGlzdCBleHRlbmRzIEZEQ29tbW9uTWV0aG9kIHsNCiAgQFN0YXRlKHN0YXRlID0+IHN0YXRlLmZkLnVzZXJmb3JtRGF0YSkgdXNlcmZvcm1EYXRhITogdXNlcmZvcm1EYXRhDQogIEBTdGF0ZSgoc3RhdGUpID0+IHN0YXRlLmZkLnNlbGVjdGVkQ29udHJvbHMpIHNlbGVjdGVkQ29udHJvbHMhOiBmZFN0YXRlWydzZWxlY3RlZENvbnRyb2xzJ107DQogIEBQcm9wKHsgcmVxdWlyZWQ6IHRydWUsIHR5cGU6IFN0cmluZyB9KSBwdWJsaWMgcmVhZG9ubHkgdXNlckZvcm1JZCEgOiBzdHJpbmcNCiAgQEFjdGlvbignZmQvc2VsZWN0Q29udHJvbCcpIHNlbGVjdENvbnRyb2whOiAocGF5bG9hZDogSXNlbGVjdENvbnRyb2wpID0+IHZvaWQ7DQoNCiAgcHJvcExpc3QgPSBuZXcgUHJvcGVydHlMaXN0RGVmaW5lKCk7DQogIHNlbGVjdGVkOiBzdHJpbmcgfCBudW1iZXIgfCBmb250IHwgbnVsbCB8IHVuZGVmaW5lZCA9IG51bGwNCiAgcmVzdWx0QXJyYXk6IGJvb2xlYW5bXSA9IFtdDQoNCiAgaXNUYWJsZVZpc2libGUgPSBmYWxzZTsNCiAgaGlkZVNob3dUYWJsZSAoKSB7DQogICAgdGhpcy5pc1RhYmxlVmlzaWJsZSA9IHRydWUNCiAgfQ0KDQogIHNlbGVjdGVkT3B0aW9uOiBPYmplY3Q9IHt9DQoNCiAgc2VsZWN0T3B0aW9uICgpIHsNCiAgICBpZiAodGhpcy5kaXNwbGF5TmFtZSkgew0KICAgICAgdGhpcy5zZWxlY3RlZCA9IHRoaXMuc2VsZWN0ZWRTZWxlY3RbMF0NCiAgICB9DQogIH0NCiAgZ2V0IGdldFNlbGVjdGVkQ29udHJvbHNEYXRhcyAoKSB7DQogICAgaWYgKHRoaXMuc2VsZWN0ZWRTZWxlY3QubGVuZ3RoID4gMCAmJiB0aGlzLnNlbGVjdGVkQ29udGFpbmVyLmxlbmd0aCA+IDApIHsNCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkQ29udHJvbHNbdGhpcy51c2VyRm9ybUlkXS5zZWxlY3RlZC5sZW5ndGggPT09IDEgJiYgIXRoaXMuc2VsZWN0ZWRDb250cm9sc1t0aGlzLnVzZXJGb3JtSWRdLnNlbGVjdGVkWzBdLnN0YXJ0c1dpdGgoJ2dyb3VwJykpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRDb250cm9sc1t0aGlzLnVzZXJGb3JtSWRdLnNlbGVjdGVkDQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zdCBmaWx0ZXJlZFNlbGVjdGVkQ29udHJvbHMgPSBbXQ0KICAgICAgICBjb25zdCBjb250cm9scyA9IHRoaXMudXNlcmZvcm1EYXRhW3RoaXMudXNlckZvcm1JZF1bdGhpcy5zZWxlY3RlZENvbnRyb2xzW3RoaXMudXNlckZvcm1JZF0uY29udGFpbmVyWzBdXS5jb250cm9scw0KICAgICAgICBjb25zdCBzZWxDb250cm9scyA9IHRoaXMuc2VsZWN0ZWRDb250cm9sc1t0aGlzLnVzZXJGb3JtSWRdLnNlbGVjdGVkDQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsQ29udHJvbHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICBpZiAoc2VsQ29udHJvbHNbaV0uc3RhcnRzV2l0aCgnZ3JvdXAnKSkgew0KICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBjb250cm9scy5sZW5ndGg7IGorKykgew0KICAgICAgICAgICAgICBpZiAodGhpcy51c2VyZm9ybURhdGFbdGhpcy51c2VyRm9ybUlkXVtjb250cm9sc1tqXV0ucHJvcGVydGllcy5Hcm91cElEID09PSBzZWxDb250cm9sc1tpXSkgew0KICAgICAgICAgICAgICAgIGZpbHRlcmVkU2VsZWN0ZWRDb250cm9scy5wdXNoKGNvbnRyb2xzW2pdKQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGZpbHRlcmVkU2VsZWN0ZWRDb250cm9scy5wdXNoKHNlbENvbnRyb2xzW2ldKQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gZmlsdGVyZWRTZWxlY3RlZENvbnRyb2xzDQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgZ2V0IHByb3BlcnR5VGFibGVEYXRhICgpIHsNCiAgICBsZXQgcmVzdWx0IDogdGFibGVEYXRhcyA9IHt9DQogICAgaWYgKHRoaXMuc2VsZWN0ZWRTZWxlY3QubGVuZ3RoID4gMCAmJiB0aGlzLnNlbGVjdGVkQ29udGFpbmVyLmxlbmd0aCA+IDApIHsNCiAgICAgIGlmICh0aGlzLmdldFNlbGVjdGVkQ29udHJvbHNEYXRhcyEubGVuZ3RoID09PSAxKSB7DQogICAgICAgIGNvbnN0IGNvbnRyb2xEYXRhOiBjb250cm9sRGF0YSA9IHRoaXMudXNlcmZvcm1EYXRhW3RoaXMudXNlckZvcm1JZF1bdGhpcy5nZXRTZWxlY3RlZENvbnRyb2xzRGF0YXMhWzBdXQ0KICAgICAgICByZXN1bHQgPSB0aGlzLnVwZGF0ZVJlc3VsdChjb250cm9sRGF0YS5wcm9wZXJ0aWVzKQ0KICAgICAgfSBlbHNlIGlmICh0aGlzLmdldFNlbGVjdGVkQ29udHJvbHNEYXRhcyEubGVuZ3RoID4gMSkgew0KICAgICAgICBsZXQgY3RybEtleXMgPSBbXQ0KICAgICAgICBsZXQgc2VsQ250cmxUeXBlID0gW10NCiAgICAgICAgY29uc3QgY2hlY2tWYWxBcnIgPSBbWydDaGVja0JveCcsICdPcHRpb25CdXR0b24nLCAnVG9nZ2xlQnV0dG9uJ10sDQogICAgICAgICAgWydUZXh0Qm94JywgJ0xpc3RCb3gnLCAnQ29tYm9Cb3gnXSwNCiAgICAgICAgICBbJ1RhYlN0cmlwJywgJ011bHRpUGFnZScsICdTcGluQnV0dG9uJywgJ1Njcm9sbEJhciddXQ0KDQogICAgICAgIGNvbnN0IHVuaXF1ZUtleSA9IFsnTmFtZScsICdUYWJJbmRleCcsICdJbmRleCcsICdNb3VzZUljb24nLCAnUGljdHVyZScsICdDYW5jZWwnLCAnRGVmYXVsdCcsICdTdHlsZSddDQogICAgICAgIGNvbnN0IGNvbWJpbmVkT2JqOiBJQ29tbW9uUHJvcCA9IHt9DQogICAgICAgIGNvbnN0IGNvbW1vblByb3BWYWx1ZTogSUNvbW1vblByb3BWYWwgPSB7fQ0KICAgICAgICB0aGlzLnJlc3VsdEFycmF5ID0gW10NCg0KICAgICAgICAvLyBnZXQgYXJyYXkgb2YgT2JqZWN0IHdoaWNoIHByb3BlcnR5IE9iamVjdCBvZiBzZWxlY3RlZCBDb250cm9scw0KICAgICAgICBmb3IgKGNvbnN0IGNvbnRyb2xJbmRleCBpbiB0aGlzLmdldFNlbGVjdGVkQ29udHJvbHNEYXRhcyEpIHsNCiAgICAgICAgICBjb25zdCBjb250cm9sRGF0YSA9IHRoaXMudXNlcmZvcm1EYXRhW3RoaXMudXNlckZvcm1JZF1bdGhpcy5nZXRTZWxlY3RlZENvbnRyb2xzRGF0YXMhW2NvbnRyb2xJbmRleF1dDQogICAgICAgICAgY29uc3QgZGVmaW5lTGlzdCA9IHRoaXMucHJvcExpc3QuZGF0YVtjb250cm9sRGF0YS50eXBlXQ0KICAgICAgICAgIHNlbENudHJsVHlwZS5wdXNoKHRoaXMudXNlcmZvcm1EYXRhW3RoaXMudXNlckZvcm1JZF1bdGhpcy5nZXRTZWxlY3RlZENvbnRyb2xzRGF0YXMhW2NvbnRyb2xJbmRleF1dLnR5cGUpDQogICAgICAgICAgY3RybEtleXMucHVzaChPYmplY3Qua2V5cyhkZWZpbmVMaXN0KSkNCiAgICAgICAgfQ0KICAgICAgICBjb25zdCB1bmlxdWVTZWxUeXBlID0gc2VsQ250cmxUeXBlLmZpbHRlcigodiwgaSwgYSkgPT4gYS5pbmRleE9mKHYpID09PSBpKQ0KDQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hlY2tWYWxBcnIubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICB0aGlzLnJlc3VsdEFycmF5W2ldID0gY2hlY2tWYWxBcnJbaV0uc29tZShpdGVtID0+IHVuaXF1ZVNlbFR5cGUuaW5jbHVkZXMoaXRlbSkpDQogICAgICAgIH0NCiAgICAgICAgaWYgKHRoaXMucmVzdWx0QXJyYXkuZmlsdGVyKCh4OiBib29sZWFuKSA9PiB7IHJldHVybiB4ID09PSB0cnVlIH0pLmxlbmd0aCA+IDEpIHsNCiAgICAgICAgICB1bmlxdWVLZXkucHVzaCgnVmFsdWUnKQ0KICAgICAgICB9DQoNCiAgICAgICAgLy8gZ2V0IHRoZSBhcnJheSB3aGljaCBpbmNsdWRlIGNvbW1vbiBrZXkgb2Ygc2VsZWN0ZWQgY29udHJvbHMNCiAgICAgICAgbGV0IGNvbW1vblByb3AgPSBjdHJsS2V5cy5yZWR1Y2UoKGEsIGIpID0+IGEuZmlsdGVyKChjOiBzdHJpbmcpID0+IGIuaW5jbHVkZXMoYykpKQ0KDQogICAgICAgIC8vIGV4Y2x1ZGluZyB0aGUgVW5pcXVlIGtleQ0KICAgICAgICBjb21tb25Qcm9wID0gY29tbW9uUHJvcC5maWx0ZXIoKHg6IHN0cmluZykgPT4gIXVuaXF1ZUtleS5pbmNsdWRlcyh4KSkNCg0KICAgICAgICAvLyBHZW5lcmF0aW5nIHRoZSBPYmplY3Qgb2YgY29tbW9uIGtleSA6IHZhbHVlIHBhaXIgYW5kIEludGlhbGl6aW5nIHZhbHVlIGFzIG51bGwNCiAgICAgICAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiBjb21tb25Qcm9wKSB7DQogICAgICAgICAgVnVlLnNldChjb21iaW5lZE9iaiwgY29tbW9uUHJvcFtwcm9wTmFtZV0sICcnKQ0KICAgICAgICB9DQoNCiAgICAgICAgLy8gZ2V0IHRoZSBPYmplY3Qgd2hpY2ggaW5jbHVkZSBjb21tb24ga2V5Olt2YWx1ZV0gcGFpciBvZiBzZWxlY3RlZCBjb250cm9sDQogICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMuZ2V0U2VsZWN0ZWRDb250cm9sc0RhdGFzISkgew0KICAgICAgICAgIGNvbnN0IGNvbnRvbFByb3A6IGNvbnRyb2xQcm9wZXJ0aWVzID0gdGhpcy51c2VyZm9ybURhdGFbdGhpcy51c2VyRm9ybUlkXVtrZXldLnByb3BlcnRpZXMNCiAgICAgICAgICBmb3IgKGNvbnN0IHByb3BOYW1lIGluIGNvbnRvbFByb3ApIHsNCiAgICAgICAgICAgIGlmIChjb21tb25Qcm9wLmluZGV4T2YocHJvcE5hbWUpID4gLTEpIHsNCiAgICAgICAgICAgICAgY29tYmluZWRPYmpbcHJvcE5hbWVdID0gWy4uLmNvbWJpbmVkT2JqW3Byb3BOYW1lXSwgY29udG9sUHJvcFtwcm9wTmFtZSBhcyBrZXlvZiBjb250cm9sUHJvcGVydGllc11dDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGNvbnN0IGFsbEVxdWFsID0gKGFycjogc3RyaW5nW10pOiBib29sZWFuID0+IHsgcmV0dXJuIGFyci5ldmVyeSgodjogc3RyaW5nKSA9PiB2ID09PSBhcnJbMF0pIH0NCg0KICAgICAgICAvLyBnZXQgdGhlIGNvbW1vbiB2YWx1ZQ0KICAgICAgICBmb3IgKGNvbnN0IHByb3BOYW1lIGluIGNvbWJpbmVkT2JqKSB7DQogICAgICAgICAgY29uc3QgaXNTYW1lOiBib29sZWFuID0gYWxsRXF1YWwoY29tYmluZWRPYmpbcHJvcE5hbWVdKQ0KICAgICAgICAgIGNvbW1vblByb3BWYWx1ZVtwcm9wTmFtZV0gPSBpc1NhbWUgPyBjb21iaW5lZE9ialtwcm9wTmFtZV1bMF0gOiAnJw0KICAgICAgICB9DQoNCiAgICAgICAgY29uc3QgY29udHJvbERhdGE6IGNvbnRyb2xEYXRhID0gdGhpcy51c2VyZm9ybURhdGFbdGhpcy51c2VyRm9ybUlkXVt0aGlzLmdldFNlbGVjdGVkQ29udHJvbHNEYXRhcyFbMF1dDQogICAgICAgIGNvbnN0IGRlZmluZUxpc3QgPSB0aGlzLnByb3BMaXN0LmRhdGFbY29udHJvbERhdGEudHlwZV0NCiAgICAgICAgcmVzdWx0ID0gdGhpcy51cGRhdGVSZXN1bHQoY29tbW9uUHJvcFZhbHVlKQ0KICAgICAgfQ0KICAgICAgcmV0dXJuIHJlc3VsdA0KICAgIH0NCiAgfQ0KICB1cGRhdGVSZXN1bHQgKGNvbW1vblByb3BWYWx1ZTogSUNvbW1vblByb3BWYWx8Y29udHJvbFByb3BlcnRpZXMpIHsNCiAgICBjb25zdCByZXN1bHQgOiB0YWJsZURhdGFzID0ge30NCiAgICBjb25zdCBjb250cm9sRGF0YTogY29udHJvbERhdGEgPSB0aGlzLnVzZXJmb3JtRGF0YVt0aGlzLnVzZXJGb3JtSWRdW3RoaXMuZ2V0U2VsZWN0ZWRDb250cm9sc0RhdGFzIVswXV0NCiAgICBjb25zdCBkZWZpbmVMaXN0ID0gdGhpcy5wcm9wTGlzdC5kYXRhW2NvbnRyb2xEYXRhLnR5cGVdDQogICAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiBkZWZpbmVMaXN0KSB7DQogICAgICBjb25zdCBwcm9wVmFsdWUgPSBjb21tb25Qcm9wVmFsdWVbcHJvcE5hbWUgYXMga2V5b2YgY29udHJvbFByb3BlcnRpZXNdDQogICAgICBpZiAocHJvcFZhbHVlICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgcmVzdWx0W3Byb3BOYW1lXSA9IHsNCiAgICAgICAgICAuLi5kZWZpbmVMaXN0W3Byb3BOYW1lXSwNCiAgICAgICAgICB2YWx1ZTogcHJvcFZhbHVlDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIHJlc3VsdA0KICB9DQogIHVwZGF0ZVNlbGVjdGVkIChlOiBNb3VzZUV2ZW50KSB7DQogICAgaWYgKGUudGFyZ2V0IGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpIHsNCiAgICAgIGlmIChlLnRhcmdldC5vcHRpb25zLnNlbGVjdGVkSW5kZXggPiAtMSkgew0KICAgICAgICBjb25zdCBjb250cm9sTmFtZSA9IGUudGFyZ2V0Lm9wdGlvbnNbZS50YXJnZXQub3B0aW9ucy5zZWxlY3RlZEluZGV4XS50ZXh0LnNwbGl0KCcgJylbMF0NCiAgICAgICAgY29uc3QgY29udHJvbHNBcnJheSA9IHRoaXMudXNlcmZvcm1EYXRhW3RoaXMudXNlckZvcm1JZF1bdGhpcy5zZWxlY3RlZENvbnRhaW5lclswXV0uY29udHJvbHMNCiAgICAgICAgY29uc3QgdmFsdWUgPSBPYmplY3Qua2V5cyh0aGlzLnVzZXJmb3JtRGF0YVt0aGlzLnVzZXJGb3JtSWRdKS5maWx0ZXIodmFsID0+IHsNCiAgICAgICAgICByZXR1cm4gdGhpcy51c2VyZm9ybURhdGFbdGhpcy51c2VyRm9ybUlkXVt2YWxdLnByb3BlcnRpZXMuTmFtZSA9PT0gY29udHJvbE5hbWUNCiAgICAgICAgfSkNCiAgICAgICAgdGhpcy5zZWxlY3RDb250cm9sKHsNCiAgICAgICAgICB1c2VyRm9ybUlkOiB0aGlzLnVzZXJGb3JtSWQsDQogICAgICAgICAgc2VsZWN0OiB7DQogICAgICAgICAgICBjb250YWluZXI6IHRoaXMuZ2V0Q29udGFpbmVyTGlzdCh2YWx1ZVswXSksDQogICAgICAgICAgICBzZWxlY3RlZDogW3ZhbHVlWzBdXQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgIH0NCiAgICB9DQogIH0NCiAgZ2V0IHNlbGVjdGVkU2VsZWN0ICgpIHsNCiAgICByZXR1cm4gdGhpcy5zZWxlY3RlZENvbnRyb2xzW3RoaXMudXNlckZvcm1JZF0uc2VsZWN0ZWQNCiAgfQ0KICBnZXQgc2VsZWN0ZWRDb250YWluZXIgKCkgew0KICAgIHJldHVybiB0aGlzLnNlbGVjdGVkQ29udHJvbHNbdGhpcy51c2VyRm9ybUlkXS5jb250YWluZXINCiAgfQ0KICBnZXQgY29udGFpbmVyRGF0YSAoKSB7DQogICAgY29uc3QgdHlwZSA9IHRoaXMudXNlckRhdGFbdGhpcy5zZWxlY3RlZENvbnRhaW5lclswXV0udHlwZQ0KICAgIHJldHVybiB0eXBlID09PSAnUGFnZScgPyB0aGlzLnVzZXJEYXRhW3RoaXMuc2VsZWN0ZWRDb250YWluZXJbMV1dIDogdGhpcy51c2VyRGF0YVt0aGlzLnNlbGVjdGVkQ29udGFpbmVyWzBdXQ0KICB9DQogIGdldCBjb250YWluZXJEYXRhQ29udHJvbCAoKSB7DQogICAgY29uc3QgdHlwZSA9IHRoaXMudXNlckRhdGFbdGhpcy5zZWxlY3RlZENvbnRhaW5lclswXV0udHlwZQ0KICAgIHJldHVybiB0eXBlID09PSAnUGFnZScgPyB0aGlzLmdldENoaWxkQ29udHJvbCh0aGlzLnNlbGVjdGVkQ29udGFpbmVyWzFdKSA6IHRoaXMudXNlckRhdGFbdGhpcy5zZWxlY3RlZENvbnRhaW5lclswXV0uY29udHJvbHMNCiAgfQ0KICBnZXQgdXNlckRhdGEgKCkgew0KICAgIHJldHVybiB0aGlzLnVzZXJmb3JtRGF0YVt0aGlzLnVzZXJGb3JtSWRdDQogIH0NCiAgZ2V0IGRpc3BsYXlOYW1lICgpIHsNCiAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFNlbGVjdC5sZW5ndGggPT09IDEgJiYgIXRoaXMuc2VsZWN0ZWRTZWxlY3RbMF0uc3RhcnRzV2l0aCgnZ3JvdXAnKQ0KICB9DQogIEBXYXRjaCgnc2VsZWN0ZWRDb250cm9scycsIHsgZGVlcDogdHJ1ZSB9KQ0KICB1cGRhdGVPcHRpb24gKCkgew0KICAgIHRoaXMuc2VsZWN0T3B0aW9uKCkNCiAgfQ0KICBjcmVhdGVkICgpIHsNCiAgICBFdmVudEJ1cy4kb24oJ2Rpc3BQcm9wJywgKHZhbDogYm9vbGVhbikgPT4gew0KICAgICAgdGhpcy5pc1RhYmxlVmlzaWJsZSA9IHZhbA0KICAgIH0pDQogIH0NCiAgZGVzdHJveWVkICgpIHsNCiAgICBFdmVudEJ1cy4kb2ZmKCdkaXNwUHJvcCcpDQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDPropertyList","sourcesContent":["<template>\r\n  <div v-if=\"isTableVisible===false\">\r\n    <div>\r\n      <div class=\"sideheader\">\r\n        <span class=\"sideheader1\">\r\n          <span>Properties - {{displayName ? userformData[userFormId][getSelectedControlsDatas[0]].properties.Name : userformData[userFormId][userFormId].properties.Name }}</span>\r\n          <div id=\"mdiv\" v-on:click=\"hideShowTable\">\r\n            <div class=\"mdiv\">\r\n              <div class=\"md\"></div>\r\n            </div>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n       <select\r\n        class=\"form-control\"\r\n        name=\"selectedUserForm\"\r\n        id=\"selectedUserForm\"\r\n        ref=\"selectedUserForm\"\r\n        v-if=\"userFormId\"\r\n        v-model=\"selected\"\r\n        @change=\"updateSelected($event)\"\r\n      >\r\n        <option\r\n          :value=\"userFormId\"\r\n        >{{displayName ? containerData.properties.Name + ' '+ containerData.type : ''}}</option>\r\n        <template v-if=\"displayName\">\r\n         <option  v-for=\"control in containerDataControl\" :value=\"control\" :key=\"userData[control].properties.Name\">\r\n          <b>{{displayName ?  userData[control].properties.Name + ' ' + userData[control].type : ''}}</b>\r\n        </option>\r\n        </template>\r\n      </select>\r\n\r\n    </div>\r\n    <FDTable v-if=\"selectedSelect.length > 0\" :tableData=\"propertyTableData\"\r\n      :userFormId=\"userFormId\"\r\n      :getSelectedControlsDatas=\"getSelectedControlsDatas\"\r\n      :resultArray=\"resultArray\" />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Ref, Vue, Watch } from 'vue-property-decorator'\r\nimport { Action, State } from 'vuex-class'\r\nimport FDTable from '@/FormDesigner/components/organisms/FDTable/index.vue'\r\nimport { PropertyListDefine } from '@/FormDesigner/models/ControlsTableProperties/propertyList'\r\nimport { IselectControl } from '@/storeModules/fd/actions'\r\nimport FDCommonMethod from '@/api/abstract/FormDesigner/FDCommonMethod'\r\nimport { EventBus } from '@/FormDesigner/event-bus'\r\n\r\n@Component({\r\n  name: 'PropertiesList',\r\n  components: {\r\n    FDTable\r\n  }\r\n})\r\nexport default class PropertiesList extends FDCommonMethod {\r\n  @State(state => state.fd.userformData) userformData!: userformData\r\n  @State((state) => state.fd.selectedControls) selectedControls!: fdState['selectedControls'];\r\n  @Prop({ required: true, type: String }) public readonly userFormId! : string\r\n  @Action('fd/selectControl') selectControl!: (payload: IselectControl) => void;\r\n\r\n  propList = new PropertyListDefine();\r\n  selected: string | number | font | null | undefined = null\r\n  resultArray: boolean[] = []\r\n\r\n  isTableVisible = false;\r\n  hideShowTable () {\r\n    this.isTableVisible = true\r\n  }\r\n\r\n  selectedOption: Object= {}\r\n\r\n  selectOption () {\r\n    if (this.displayName) {\r\n      this.selected = this.selectedSelect[0]\r\n    }\r\n  }\r\n  get getSelectedControlsDatas () {\r\n    if (this.selectedSelect.length > 0 && this.selectedContainer.length > 0) {\r\n      if (this.selectedControls[this.userFormId].selected.length === 1 && !this.selectedControls[this.userFormId].selected[0].startsWith('group')) {\r\n        return this.selectedControls[this.userFormId].selected\r\n      } else {\r\n        const filteredSelectedControls = []\r\n        const controls = this.userformData[this.userFormId][this.selectedControls[this.userFormId].container[0]].controls\r\n        const selControls = this.selectedControls[this.userFormId].selected\r\n        for (let i = 0; i < selControls.length; i++) {\r\n          if (selControls[i].startsWith('group')) {\r\n            for (let j = 0; j < controls.length; j++) {\r\n              if (this.userformData[this.userFormId][controls[j]].properties.GroupID === selControls[i]) {\r\n                filteredSelectedControls.push(controls[j])\r\n              }\r\n            }\r\n          } else {\r\n            filteredSelectedControls.push(selControls[i])\r\n          }\r\n        }\r\n        return filteredSelectedControls\r\n      }\r\n    }\r\n  }\r\n\r\n  get propertyTableData () {\r\n    let result : tableDatas = {}\r\n    if (this.selectedSelect.length > 0 && this.selectedContainer.length > 0) {\r\n      if (this.getSelectedControlsDatas!.length === 1) {\r\n        const controlData: controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![0]]\r\n        result = this.updateResult(controlData.properties)\r\n      } else if (this.getSelectedControlsDatas!.length > 1) {\r\n        let ctrlKeys = []\r\n        let selCntrlType = []\r\n        const checkValArr = [['CheckBox', 'OptionButton', 'ToggleButton'],\r\n          ['TextBox', 'ListBox', 'ComboBox'],\r\n          ['TabStrip', 'MultiPage', 'SpinButton', 'ScrollBar']]\r\n\r\n        const uniqueKey = ['Name', 'TabIndex', 'Index', 'MouseIcon', 'Picture', 'Cancel', 'Default', 'Style']\r\n        const combinedObj: ICommonProp = {}\r\n        const commonPropValue: ICommonPropVal = {}\r\n        this.resultArray = []\r\n\r\n        // get array of Object which property Object of selected Controls\r\n        for (const controlIndex in this.getSelectedControlsDatas!) {\r\n          const controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![controlIndex]]\r\n          const defineList = this.propList.data[controlData.type]\r\n          selCntrlType.push(this.userformData[this.userFormId][this.getSelectedControlsDatas![controlIndex]].type)\r\n          ctrlKeys.push(Object.keys(defineList))\r\n        }\r\n        const uniqueSelType = selCntrlType.filter((v, i, a) => a.indexOf(v) === i)\r\n\r\n        for (let i = 0; i < checkValArr.length; i++) {\r\n          this.resultArray[i] = checkValArr[i].some(item => uniqueSelType.includes(item))\r\n        }\r\n        if (this.resultArray.filter((x: boolean) => { return x === true }).length > 1) {\r\n          uniqueKey.push('Value')\r\n        }\r\n\r\n        // get the array which include common key of selected controls\r\n        let commonProp = ctrlKeys.reduce((a, b) => a.filter((c: string) => b.includes(c)))\r\n\r\n        // excluding the Unique key\r\n        commonProp = commonProp.filter((x: string) => !uniqueKey.includes(x))\r\n\r\n        // Generating the Object of common key : value pair and Intializing value as null\r\n        for (const propName in commonProp) {\r\n          Vue.set(combinedObj, commonProp[propName], '')\r\n        }\r\n\r\n        // get the Object which include common key:[value] pair of selected control\r\n        for (const key of this.getSelectedControlsDatas!) {\r\n          const contolProp: controlProperties = this.userformData[this.userFormId][key].properties\r\n          for (const propName in contolProp) {\r\n            if (commonProp.indexOf(propName) > -1) {\r\n              combinedObj[propName] = [...combinedObj[propName], contolProp[propName as keyof controlProperties]]\r\n            }\r\n          }\r\n        }\r\n        const allEqual = (arr: string[]): boolean => { return arr.every((v: string) => v === arr[0]) }\r\n\r\n        // get the common value\r\n        for (const propName in combinedObj) {\r\n          const isSame: boolean = allEqual(combinedObj[propName])\r\n          commonPropValue[propName] = isSame ? combinedObj[propName][0] : ''\r\n        }\r\n\r\n        const controlData: controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![0]]\r\n        const defineList = this.propList.data[controlData.type]\r\n        result = this.updateResult(commonPropValue)\r\n      }\r\n      return result\r\n    }\r\n  }\r\n  updateResult (commonPropValue: ICommonPropVal|controlProperties) {\r\n    const result : tableDatas = {}\r\n    const controlData: controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![0]]\r\n    const defineList = this.propList.data[controlData.type]\r\n    for (const propName in defineList) {\r\n      const propValue = commonPropValue[propName as keyof controlProperties]\r\n      if (propValue !== undefined) {\r\n        result[propName] = {\r\n          ...defineList[propName],\r\n          value: propValue\r\n        }\r\n      }\r\n    }\r\n    return result\r\n  }\r\n  updateSelected (e: MouseEvent) {\r\n    if (e.target instanceof HTMLSelectElement) {\r\n      if (e.target.options.selectedIndex > -1) {\r\n        const controlName = e.target.options[e.target.options.selectedIndex].text.split(' ')[0]\r\n        const controlsArray = this.userformData[this.userFormId][this.selectedContainer[0]].controls\r\n        const value = Object.keys(this.userformData[this.userFormId]).filter(val => {\r\n          return this.userformData[this.userFormId][val].properties.Name === controlName\r\n        })\r\n        this.selectControl({\r\n          userFormId: this.userFormId,\r\n          select: {\r\n            container: this.getContainerList(value[0]),\r\n            selected: [value[0]]\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  get selectedSelect () {\r\n    return this.selectedControls[this.userFormId].selected\r\n  }\r\n  get selectedContainer () {\r\n    return this.selectedControls[this.userFormId].container\r\n  }\r\n  get containerData () {\r\n    const type = this.userData[this.selectedContainer[0]].type\r\n    return type === 'Page' ? this.userData[this.selectedContainer[1]] : this.userData[this.selectedContainer[0]]\r\n  }\r\n  get containerDataControl () {\r\n    const type = this.userData[this.selectedContainer[0]].type\r\n    return type === 'Page' ? this.getChildControl(this.selectedContainer[1]) : this.userData[this.selectedContainer[0]].controls\r\n  }\r\n  get userData () {\r\n    return this.userformData[this.userFormId]\r\n  }\r\n  get displayName () {\r\n    return this.selectedSelect.length === 1 && !this.selectedSelect[0].startsWith('group')\r\n  }\r\n  @Watch('selectedControls', { deep: true })\r\n  updateOption () {\r\n    this.selectOption()\r\n  }\r\n  created () {\r\n    EventBus.$on('dispProp', (val: boolean) => {\r\n      this.isTableVisible = val\r\n    })\r\n  }\r\n  destroyed () {\r\n    EventBus.$off('dispProp')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.sideheader1 {\r\n   display: grid;\r\n  grid-template-columns: 1fr 25px;\r\n  background-color: rgb(142, 191, 231);\r\n  margin-bottom: 8px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n.sideheader {\r\n  height: 22px;\r\n  text-align: left;\r\n  padding: 0pc;\r\n  background-color: #99b4d1;\r\n}\r\n.form-control {\r\n  float: left;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  background-color: white;\r\n}\r\n#mdiv {\r\n  float: right;\r\n  margin: initial;\r\n  position: relative;\r\n  top: 0px;\r\n  width: 20px;\r\n  height: 16px;\r\n  background-color: lightgray;\r\n  border: outset;\r\n}\r\n\r\n.mdiv {\r\n  height: 17px;\r\n  width: 2px;\r\n  margin-left: 60px;\r\n  background-color: black;\r\n  transform: rotate(45deg);\r\n  z-index: 1;\r\n  position: absolute;\r\n  right: 8px;\r\n}\r\n\r\n.md {\r\n  height: 17px;\r\n  width: 2px;\r\n  background-color: black;\r\n  transform: rotate(90deg);\r\n  z-index: 2;\r\n  position: absolute;\r\n  right: 0px;\r\n}\r\n</style>\r\n"]}]}