{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDToggleButton/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDToggleButton/index.vue","mtime":1611649993465},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDToggleButton","sourcesContent":["<template>\r\n<div ref=\"componentRef\">\r\n  <button\r\n    class=\"toggle-button\"\r\n    :style=\"styleObj\"\r\n    :name=\"properties.Name\"\r\n    :tabindex=\"properties.TabIndex\"\r\n    :title=\"properties.ControlTipText\"\r\n    :runmode=\"getDisableValue\"\r\n    @mousedown=\"controlEditMode\"\r\n    @keydown.enter.prevent=\"setContentEditable($event, true)\"\r\n    @blur=\"\r\n      () => {\r\n        isClicked = false;\r\n        isFocus = false;\r\n      }\r\n    \"\r\n    @click=\"toggleButtonClick\"\r\n    @contextmenu=\"isEditMode ? openTextContextMenu($event): parentConextMenu($event)\"\r\n  >\r\n    <div id=\"logo\" ref=\"logoRef\" :style=\"reverseStyle\">\r\n    <img v-if=\"properties.Picture\" id=\"img\" :src=\"properties.Picture\" :style=\"[imageProperty,imagePos]\" ref=\"imageRef\">\r\n    <div v-if=\"!syncIsEditMode || isRunMode\" :style=\"labelStyle\" ref=\"textSpanRef\">\r\n      <span :style=\"spanStyleObj\">{{ computedCaption.afterbeginCaption }}</span>\r\n          <span class=\"spanStyle\" :style=\"spanStyleObj\">{{\r\n            computedCaption.acceleratorCaption\r\n          }}</span>\r\n          <span :style=\"spanStyleObj\">{{ computedCaption.beforeendCaption }}</span>\r\n    </div>\r\n    <FDEditableText\r\n      v-else\r\n      :editable=\"isRunMode === false && syncIsEditMode\"\r\n      :style=\"labelStyle\"\r\n      ref=\"textSpanRef\"\r\n      :caption=\"properties.Caption\"\r\n      @updateCaption=\"updateCaption\"\r\n      @releaseEditMode=\"releaseEditMode\"\r\n    >\r\n    </FDEditableText>\r\n    </div>\r\n  </button>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Mixins, Ref, Watch } from 'vue-property-decorator'\r\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\r\nimport FDEditableText from '@/FormDesigner/components/atoms/FDEditableText/index.vue'\r\nimport Vue from 'vue'\r\n\r\n@Component({\r\n  name: 'FDToggleButton',\r\n  components: {\r\n    FDEditableText\r\n  }\r\n})\r\nexport default class FDToggleButton extends Mixins(FdControlVue) {\r\n  $el!: HTMLButtonElement;\r\n  isClicked: boolean = true;\r\n  isFocus: boolean = false;\r\n  clickCount: number = 0;\r\n  @Ref('componentRef') componentRef: HTMLSpanElement\r\n  @Ref('textSpanRef') textSpanRef!: HTMLSpanElement\r\n  @Ref('imageRef') imageRef: HTMLImageElement\r\n  @Ref('logoRef') logoRef : HTMLSpanElement\r\n  /**\r\n   * @description getDisableValue checks for the RunMode of the control and then returns after checking for the Enabled\r\n   * and the Locked property\r\n   * @function getDisableValue\r\n   */\r\n  get getDisableValue () {\r\n    if (this.isRunMode) {\r\n      return (\r\n        this.properties.Enabled === false || this.properties.Locked === true\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description toggleButtonClick is a method to check the check the clicked functionality of the button tag.\r\n   * Also It sets the variables isClicked and isFocus based on the Locked property\r\n   * @function toggleButtonClick\r\n   * @param MouseEvent\r\n   */\r\n  toggleButtonClick (e: MouseEvent) {\r\n    if (this.toolBoxSelectControl === 'Select') {\r\n      e.stopPropagation()\r\n      if (this.isRunMode) {\r\n        this.clickCount = this.clickCount + 1\r\n        if (this.properties.Locked === false) {\r\n          this.isFocus = true\r\n          this.isClicked = !this.isClicked\r\n          if (this.properties.TripleState) {\r\n            if (this.clickCount % 3 === 0) {\r\n              this.updateDataModel({ propertyName: 'Value', value: '' })\r\n            } else if (this.isClicked) {\r\n              this.updateDataModel({ propertyName: 'Value', value: 'True' })\r\n            } else {\r\n              this.updateDataModel({ propertyName: 'Value', value: 'False' })\r\n            }\r\n          } else if (this.isClicked) {\r\n            this.updateDataModel({ propertyName: 'Value', value: 'True' })\r\n          } else {\r\n            this.updateDataModel({ propertyName: 'Value', value: 'False' })\r\n          }\r\n        } else {\r\n          this.isClicked = false\r\n        }\r\n      }\r\n      this.selectedItem(e)\r\n      if (this.isEditMode) {\r\n        (this.textSpanRef.$el as HTMLSpanElement).focus()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description style object is passed to :style attribute in button tag\r\n   * dynamically changing the styles of the component based on properties\r\n   * @function styleObj\r\n   *\r\n   */\r\n  protected get styleObj (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    this.reverseStyle.justifyContent = 'center'\r\n    if (!controlProp.Picture) {\r\n      this.reverseStyle.justifyContent =\r\n    controlProp.TextAlign === 0 ? 'flex-start' : controlProp.TextAlign === 1 ? 'center' : 'flex-end'\r\n    }\r\n    const font: font = controlProp.Font\r\n      ? controlProp.Font\r\n      : {\r\n        FontName: 'Arial',\r\n        FontSize: 10,\r\n        FontItalic: true,\r\n        FontBold: true,\r\n        FontUnderline: true,\r\n        FontStrikethrough: true\r\n      }\r\n    let display = ''\r\n    if (this.isRunMode) {\r\n      display = controlProp.Visible ? 'inline-block' : 'none'\r\n    } else {\r\n      display = 'inline-block'\r\n    }\r\n    const alignItems = 'inherit'\r\n    if (controlProp.Picture) {\r\n      display = 'flex'\r\n      Vue.nextTick(() => {\r\n        this.labelAlignment()\r\n      })\r\n    }\r\n    return {\r\n      left: `${controlProp.Left}px`,\r\n      width: `${controlProp.Width}px`,\r\n      height: `${controlProp.Height}px`,\r\n      top: `${controlProp.Top}px`,\r\n      boxShadow: controlProp.Enabled\r\n        ? controlProp.Value === 'False' || controlProp.Value === 'false'\r\n          ? '1px 1px gray'\r\n          : controlProp.Value === 'True' || controlProp.Value === 'true'\r\n            ? '-1px -1px black'\r\n            : '1px 1px gray'\r\n        : '1px 1px gray',\r\n      backgroundColor: controlProp.BackStyle ? controlProp.BackColor : 'transparent',\r\n      outline: controlProp.Enabled\r\n        ? this.isFocus\r\n          ? '1px dotted black'\r\n          : 'none'\r\n        : 'none',\r\n      outlineOffset: this.isClicked ? '-5px' : '-5px',\r\n      display: display,\r\n      color:\r\n        controlProp.Enabled === true &&\r\n        (controlProp.Value === 'False' ||\r\n          controlProp.Value === 'false' ||\r\n          controlProp.Value === 'True' ||\r\n          controlProp.Value === 'true')\r\n          ? controlProp.ForeColor\r\n          : this.getEnabled,\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      fontFamily: (font.FontStyle! !== '') ? this.setFontStyle : font.FontName!,\r\n      fontSize: `${font.FontSize}px`,\r\n      fontStyle: font.FontItalic || this.isItalic ? 'italic' : '',\r\n      textDecoration:\r\n        font.FontStrikethrough === true && font.FontUnderline === true\r\n          ? 'underline line-through'\r\n          : font.FontUnderline\r\n            ? 'underline'\r\n            : font.FontStrikethrough\r\n              ? 'line-through'\r\n              : '',\r\n      textUnderlinePosition: 'under',\r\n      fontWeight: font.FontBold ? 'bold' : (font.FontStyle !== '') ? this.tempWeight : '',\r\n      fontStretch: (font.FontStyle !== '') ? this.tempStretch : '',\r\n      whiteSpace: controlProp.WordWrap ? 'pre-wrap' : 'pre',\r\n      wordBreak: controlProp.WordWrap ? 'break-all' : 'normal',\r\n      paddingLeft: controlProp.AutoSize ? '0px' : '0px',\r\n      paddingRight: controlProp.WordWrap ? '0px' : '6px',\r\n      textAlign:\r\n        controlProp.TextAlign === 0\r\n          ? 'left'\r\n          : controlProp.TextAlign === 1\r\n            ? 'center'\r\n            : 'right',\r\n      borderLeft: controlProp.Value !== 'True' ? '1px solid' : '',\r\n      borderTop: controlProp.Value !== 'True' ? '1px solid' : '',\r\n      borderRight: controlProp.Value === 'True' ? '1px solid' : '',\r\n      borderBottom: controlProp.Value === 'True' ? '1px solid' : '',\r\n      borderTopColor: controlProp.Value !== 'True' ? 'white !important' : '',\r\n      borderLeftColor: controlProp.Value !== 'True' ? 'white !important' : '',\r\n      borderBottomColor: controlProp.Value === 'True' ? 'white !important' : '',\r\n      borderRightColor: controlProp.Value === 'True' ? 'white !important' : '',\r\n      alignItems: alignItems\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description watches changes in properties to set autoset when true\r\n   * @function autoSize\r\n   * @param oldVal previous properties data\r\n   * @param newVal  new/changed properties data\r\n   */\r\n  @Watch('properties.AutoSize', { deep: true })\r\n  autoSize (newVal: boolean, oldVal: boolean) {\r\n    // if autoSize is true then height and width value will not get updated\r\n    this.updateAutoSize()\r\n  }\r\n\r\n  @Watch('properties.Font.FontSize', { deep: true })\r\n  autoSizeValidateOnFontChange () {\r\n    if (this.properties.AutoSize) {\r\n      this.updateAutoSize()\r\n    }\r\n  }\r\n\r\n  @Watch('properties.WordWrap', { deep: true })\r\n  autoSizeValidateOnWordWrapChange () {\r\n    if (this.properties.AutoSize) {\r\n      this.updateAutoSize()\r\n    }\r\n  }\r\n\r\n  @Watch('properties.Caption', { deep: true })\r\n  autoSizeValidateOnCaptionChange () {\r\n    if (this.properties.AutoSize) {\r\n      this.updateAutoSize()\r\n    }\r\n  }\r\n    @Watch('properties.Picture')\r\n  setPictureSize () {\r\n    if (this.properties.Picture) {\r\n      this.$nextTick(() => {\r\n        this.onPictureLoad()\r\n        this.positionLogo(this.properties.PicturePosition)\r\n      })\r\n    }\r\n  }\r\n\r\n  @Watch('properties.Height')\r\n    updateImageSizeHeight () {\r\n      if (this.properties.Picture) {\r\n        this.positionLogo(this.properties.PicturePosition)\r\n        this.pictureSize()\r\n      }\r\n    }\r\n  @Watch('properties.Width')\r\n  updateImageSizeWidth () {\r\n    if (this.properties.Picture) {\r\n      this.positionLogo(this.properties.PicturePosition)\r\n      this.pictureSize()\r\n    }\r\n  }\r\n  @Watch('properties.PicturePosition')\r\n  updatePicturePosition () {\r\n    if (this.properties.Picture) {\r\n      this.positionLogo(this.properties.PicturePosition)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description updateAutoSize calls Vuex Actions to update object\r\n   * @function updateAutoSize\r\n   * @override\r\n   */\r\n  updateAutoSize () {\r\n    if (this.properties.AutoSize === true) {\r\n      const imgStyle = {\r\n        width: 'fit-content',\r\n        height: 'fit-content'\r\n      }\r\n      this.imageProperty = imgStyle\r\n      if (this.properties.Picture) {\r\n        this.positionLogo(this.properties.PicturePosition)\r\n      }\r\n      this.$nextTick(() => {\r\n        this.updateDataModel({\r\n          propertyName: 'Height',\r\n          value: this.getWidthHeight().height + 5\r\n        })\r\n        this.updateDataModel({\r\n          propertyName: 'Width',\r\n          value: this.getWidthHeight().width\r\n        })\r\n      })\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description mounted initializes the values which are required for the component\r\n   */\r\n  mounted () {\r\n    this.$el.focus()\r\n    this.updateAutoSize()\r\n  }\r\n  releaseEditMode (event: KeyboardEvent) {\r\n    this.$el.focus()\r\n    this.setContentEditable(event, false)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.toggle-button {\r\n  width: 0px;\r\n  height: 0px;\r\n  left: 0px;\r\n  top: 0px;\r\n  box-shadow: 1px 1px gray;\r\n  border: none;\r\n  overflow: hidden;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n#logo{\r\n display: inline-flex;\r\n justify-content: center;\r\n}\r\n</style>\r\n"]}]}