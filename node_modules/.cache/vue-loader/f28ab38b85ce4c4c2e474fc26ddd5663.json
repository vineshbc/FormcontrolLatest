{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDTable/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDTable/index.vue","mtime":1612267118000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDTable","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"btn-group\">\r\n      <button class=\"button\" default>Alphabetic</button>\r\n      <button class=\"button\">Categorized</button>\r\n    </div>\r\n    <div\r\n      style=\"\r\n        position: absolute;\r\n        height: calc(100% - 59px);\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n        width: 100%;\r\n      \"\r\n    >\r\n      <FDTableItems\r\n        v-for=\"(value, propertyName, index) in tableData\"\r\n        :key=\"index\"\r\n        :controlPropertyData=\"value\"\r\n        :propertyName=\"propertyName\"\r\n        @updateAppearance=\"updateAppearance\"\r\n        @emitFont=\"emitFont\"\r\n        @colorPaletteProp=\"colorPaletteProp\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue, Emit } from 'vue-property-decorator'\r\nimport { State, Action } from 'vuex-class'\r\nimport FDTableItems from '../../molecules/FDTableItems/index.vue'\r\nimport { IselectControl, IsetChildControls, IupdateControl, IupdateControlExtraData, IupdatedSelectedControl } from '@/storeModules/fd/actions'\r\nimport { EventBus } from '@/FormDesigner/event-bus'\r\nimport { checkPropertyValue } from '@/storeModules/fd/checkValidation'\r\n\r\ninterface IPropControl {\r\n  propertyName: keyof controlProperties\r\n  value : any\r\n}\r\n\r\n@Component({\r\n  name: 'FDTable',\r\n  components: {\r\n    FDTableItems\r\n  }\r\n})\r\nexport default class FDTable extends Vue {\r\n  @Prop({ type: Object, required: true }) tableData!: tableDatas;\r\n  @State((state) => state.fd.userformData) userformData!: userformData;\r\n  @Prop({ required: true, type: String }) public readonly userFormId! : string\r\n  @Prop({ required: true }) public readonly getSelectedControlsDatas: any\r\n  @Prop() resultArray: boolean[]\r\n  @Action('fd/updateControl') updateControl!: (payload: IupdateControl) => void;\r\n  @Action('fd/updateControlExtraData') updateControlExtraData!: (\r\n    payload: IupdateControlExtraData\r\n  ) => void;\r\n  @Action('fd/setChildControls') setChildControls!: (\r\n    payload: IsetChildControls\r\n  ) => void;\r\n  @State((state) => state.fd.selectedControls) selectedControls!: fdState['selectedControls'];\r\n\r\n  emitUpdateProperty (\r\n    propertyName: keyof controlProperties,\r\n    value: any\r\n  ) {\r\n    this.updateProperty({ propertyName: propertyName, value: value })\r\n  }\r\n\r\n  emitUpdateExtraProperty (\r\n    propertyName: keyof controlProperties,\r\n    value: any\r\n  ) {\r\n    this.updateProperty({ propertyName: propertyName, value: value })\r\n  }\r\n  updatePageIndex (propValue: number) {\r\n    const userData = this.userformData[this.userFormId]\r\n    const selected = this.selectedControls[this.userFormId].selected[0]\r\n    const swapTabIndex = userData[selected].properties.Index!\r\n    const container = this.selectedControls[this.userFormId].container[0]\r\n\r\n    if (propValue < userData[container].controls.length) {\r\n      const index = userData[container].controls.findIndex(val => userData[val].properties.Index === propValue)\r\n      this.updatePropValue(userData[container].controls[index], 'Index', swapTabIndex)\r\n      this.updatePropValue(selected, 'Index', propValue)\r\n      const controls = userData[container].controls\r\n      controls.sort((a, b) => {\r\n        return userData[a].properties.Index! - userData[b].properties.Index!\r\n      })\r\n      this.setChildControls({\r\n        userFormId: this.userFormId,\r\n        containerId: container,\r\n        targetControls: controls\r\n      })\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  getLowestIndex (tempControls: string[], controlLength: number, propertyType: boolean) {\r\n    let lastControlId = controlLength\r\n    const userData = this.userformData[this.userFormId]\r\n    for (let i = 0; i < tempControls.length; i++) {\r\n      const propetyName = propertyType ? userData[tempControls[i]].extraDatas!.zIndex! : userData[tempControls[i]].extraDatas!.TabIndex!\r\n      if (propetyName !== -1) {\r\n        const IdNum = propetyName\r\n        if (!isNaN(IdNum) && lastControlId > IdNum) {\r\n          lastControlId = IdNum\r\n        }\r\n      }\r\n    }\r\n    return lastControlId\r\n  }\r\n  swapTabIndex (tempZIndex: number) {\r\n    const userData = this.userformData[this.userFormId]\r\n    const container = this.selectedControls[this.userFormId].container[0]\r\n    const selected = this.selectedControls[this.userFormId].selected[0]\r\n    const swapTabIndex = userData[selected].properties!.TabIndex!\r\n    if (tempZIndex <= userData[container].controls.length - 1 && tempZIndex > -1) {\r\n      const index = userData[container].controls.findIndex(\r\n        (val) => userData[val].properties!.TabIndex === tempZIndex\r\n      )\r\n      this.updatePropValue(userData[container].controls[index], 'TabIndex', swapTabIndex)\r\n      this.updatePropValue(selected, 'TabIndex', tempZIndex)\r\n    }\r\n  }\r\n  updateTabIndexValue (val: number) {\r\n    const userData = this.userformData[this.userFormId]\r\n    const container = this.selectedControls[this.userFormId].container[0]\r\n    const selected = this.selectedControls[this.userFormId].selected[0]\r\n    const containerControls = this.userformData[this.userFormId][container].controls\r\n    const controlType = userData[selected].type\r\n    if (controlType !== 'FDImage') {\r\n      const tempControls = []\r\n      for (const index in containerControls) {\r\n        const cntrlData = this.userformData[this.userFormId][containerControls[index]]\r\n        if (cntrlData.type === 'FDImage') {\r\n          tempControls.push(containerControls[index])\r\n        }\r\n      }\r\n      const lastControlId = tempControls.length > 0 ? this.getLowestIndex(tempControls, userData[container].controls.length - 1, false)\r\n        : this.userformData[this.userFormId][container].controls.length - 1\r\n      if (val <= lastControlId) {\r\n        this.swapTabIndex(val)\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  updateExtraProperty (arg: IupdateControlExtraData) {\r\n    const selected = this.getSelectedControlsDatas!\r\n    for (let i = 0; i < selected.length; i++) {\r\n      this.updateControlExtraData({\r\n        userFormId: this.userFormId,\r\n        controlId: selected[i],\r\n        propertyName: arg.propertyName,\r\n        value: arg.value\r\n      })\r\n    }\r\n  }\r\n  updateProperty (arg: IPropControl) {\r\n    const selected = this.getSelectedControlsDatas!\r\n    for (let i = 0; i < selected.length; i++) {\r\n      if (arg.propertyName === 'TabIndex') {\r\n        return this.updateTabIndexValue(parseInt(arg.value))\r\n      } else if (arg.propertyName === 'Index') {\r\n        return this.updatePageIndex(parseInt(arg.value))\r\n      } else if (arg.propertyName === 'Name') {\r\n        return this.updateName(selected[i], arg.value)\r\n      } else if (arg.propertyName === 'Value' && (this.userformData[this.userFormId][selected[i]].type === 'SpinButton' || this.userformData[this.userFormId][selected[i]].type === 'ScrollBar')) {\r\n        return this.updateSpinButtonScrollBarValueProp(selected[i], arg.value)\r\n      } else if (arg.propertyName === 'Value' && (this.userformData[this.userFormId][selected[i]].type === 'OptionButton') &&\r\n      (this.userformData[this.userFormId][selected[i]].properties.GroupName !== '') && arg.value === 'True') {\r\n        const groupName = this.userformData[this.userFormId][selected[i]].properties.GroupName!\r\n        this.updateValueForCommonGroupName(selected[i], arg.value, groupName)\r\n      } else if (arg.propertyName === 'Min' || arg.propertyName === 'Max') {\r\n        this.updatePropValue(selected[i], arg.propertyName, arg.value)\r\n        this.validateValueProperty(selected[i], arg.value)\r\n      } else if (arg.propertyName === 'Cancel' || arg.propertyName === 'Default') {\r\n        this.validateCancelDefaultProp(selected[i], arg.propertyName, arg.value)\r\n      } else {\r\n        this.updatePropValue(selected[i], arg.propertyName, arg.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  updateValueProperty (arg: IPropControl) {\r\n    const selected = this.getSelectedControlsDatas!\r\n    let isValid: boolean = true\r\n    for (let i = 0; i < selected.length; i++) {\r\n      const type = this.userformData[this.userFormId][selected[i]].type\r\n      if (type === 'ListBox') {\r\n        isValid = this.validateTextValueProperty(arg.value, arg.propertyName, selected[i])\r\n      }\r\n    }\r\n    if (isValid) {\r\n      this.emitUpdateProperty(arg.propertyName, arg.value)\r\n    }\r\n    return isValid\r\n  }\r\n  updatePropValue (id: string, propName: keyof controlProperties, propValue: any) {\r\n    this.updateControl({\r\n      userFormId: this.userFormId,\r\n      controlId: id,\r\n      propertyName: propName,\r\n      value: propValue\r\n    })\r\n  }\r\n  updateValueForCommonGroupName (id: string, value: string, groupName: string) {\r\n    const userData = Object.keys(this.userformData[this.userFormId])\r\n    this.updatePropValue(id, 'Value', 'True')\r\n    for (let i = 0; i < userData.length; i++) {\r\n      const controlData = this.userformData[this.userFormId][userData[i]]\r\n      if (controlData.type === 'OptionButton' && controlData.properties.GroupName === groupName && controlData.properties.ID !== id) {\r\n        this.updatePropValue(controlData.properties.ID, 'Value', 'False')\r\n      }\r\n    }\r\n  }\r\n  validateValueProperty (id: string, value: number) {\r\n    let actualValue = this.userformData[this.userFormId][id].properties.Value! as number\r\n    if (!this.checkValueRangeMinMax(id, actualValue)) {\r\n      this.updatePropValue(id, 'Value', value)\r\n    }\r\n  }\r\n  updateSpinButtonScrollBarValueProp (id: string, value: number) {\r\n    if (this.checkValueRangeMinMax(id, value)) {\r\n      this.updatePropValue(id, 'Value', value)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  validateCancelDefaultProp (id: string, propName: keyof controlProperties, value: boolean) {\r\n    const userFormControls = Object.keys(this.userformData[this.userFormId])\r\n    for (let controlId of userFormControls) {\r\n      if (this.userformData[this.userFormId][controlId].type === 'CommandButton') {\r\n        if (controlId === id) {\r\n          this.updatePropValue(id, propName, value)\r\n        } else {\r\n          this.updatePropValue(controlId, propName, false)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  checkValueRangeMinMax (id: string, value: number) {\r\n    let maxValue = this.userformData[this.userFormId][id].properties.Max!\r\n    let minValue = this.userformData[this.userFormId][id].properties.Min!\r\n    let min = Math.min(minValue, maxValue)\r\n    let max = Math.max(minValue, maxValue)\r\n    if (value >= min && value <= max) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  updateName (id: string, value: string) {\r\n    let userData\r\n    let isUnique\r\n    if (this.userformData[this.userFormId][id].type === 'Userform') {\r\n      userData = Object.keys(this.userformData)\r\n      isUnique = userData.findIndex(val => this.userformData[val][val].properties.Name === value && val !== id)\r\n    } else {\r\n      userData = Object.keys(this.userformData[this.userFormId])\r\n      isUnique = userData.findIndex(val => this.userformData[this.userFormId][val].properties.Name === value && val !== id)\r\n    }\r\n    if (isUnique === -1 && value !== '') {\r\n      this.updatePropValue(id, 'Name', value)\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  validateValuePropertyChboxOpbtnTglbtn (propertyName : keyof controlProperties, propertyValue : string) : string {\r\n    let resultValue = ''\r\n    if (!isNaN(parseInt(propertyValue))) {\r\n      if (parseInt(propertyValue) === 0) {\r\n        this.emitUpdateProperty(propertyName, 'False')\r\n        resultValue = 'False'\r\n      } else {\r\n        this.emitUpdateProperty(propertyName, 'True')\r\n        resultValue = 'True'\r\n      }\r\n    } else if (propertyValue.toLowerCase() === 'true') {\r\n      this.emitUpdateProperty(propertyName, 'True')\r\n      resultValue = 'True'\r\n    } else if (propertyValue.toLowerCase() === 'false') {\r\n      this.emitUpdateProperty(propertyName, 'False')\r\n      resultValue = 'False'\r\n    } else {\r\n      this.emitUpdateProperty(propertyName, '')\r\n      resultValue = ''\r\n    }\r\n    return resultValue\r\n  }\r\n  validateControlSourceProperty (propertyValue : string) {\r\n    // should validate the propertyValue\r\n    return true\r\n  }\r\n  validateRowSourceProperty (propertyValue : string) {\r\n    // should validate the propertyValue\r\n    return true\r\n  }\r\n  validateTextValueProperty (propertyValue : string, propertyName: string, controlId: string) {\r\n    const controlData = this.userformData[this.userFormId][controlId]\r\n    const rowSourceData = controlData.extraDatas!.RowSourceData!\r\n    const boundColumn = propertyName === 'Value' ? controlData.properties.BoundColumn! : 1\r\n    if (boundColumn <= 0 || boundColumn > rowSourceData[0].length) {\r\n      return false\r\n    }\r\n    for (let i = 0; i < rowSourceData.length; i++) {\r\n      if (propertyValue === rowSourceData[i][boundColumn - 1]) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  validateColumnWidths (propertyName : keyof controlProperties, propertyValue : string) :string {\r\n    if (propertyValue === '') {\r\n      return ''\r\n    }\r\n    const initialColWidths = propertyValue.split(';')\r\n    let validPropertyValue: boolean = false\r\n    initialColWidths.forEach(element => {\r\n      for (let index = 0; index < element.length; index++) {\r\n        if (element.includes('in')) {\r\n          if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58) || (element.charCodeAt(index) === 73 || element.charCodeAt(index) === 105 || element.charCodeAt(index) === 32) || (element.charCodeAt(index) === 78 || element.charCodeAt(index) === 110 || element.charCodeAt(index) === 32)) {\r\n            validPropertyValue = true\r\n          } else {\r\n            validPropertyValue = false\r\n            break\r\n          }\r\n        } else if (element.includes('cm')) {\r\n          if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58) || (element.charCodeAt(index) === 67 || element.charCodeAt(index) === 99 || element.charCodeAt(index) === 32) || (element.charCodeAt(index) === 77 || element.charCodeAt(index) === 109 || element.charCodeAt(index) === 32)) {\r\n            validPropertyValue = true\r\n          } else {\r\n            validPropertyValue = false\r\n            break\r\n          }\r\n        } else if (element.includes('pt')) {\r\n          if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58) || (element.charCodeAt(index) === 80 || element.charCodeAt(index) === 112 || element.charCodeAt(index) === 32) || (element.charCodeAt(index) === 84 || element.charCodeAt(index) === 116 || element.charCodeAt(index) === 32)) {\r\n            validPropertyValue = true\r\n          } else {\r\n            validPropertyValue = false\r\n            break\r\n          }\r\n        } else {\r\n          if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58)) {\r\n            validPropertyValue = true\r\n          } else {\r\n            validPropertyValue = false\r\n            break\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if (validPropertyValue) {\r\n      let a = (propertyValue.split(';'))\r\n      let pointValue:any = []\r\n      let newColumnWidthsValue = ''\r\n      a.forEach(element => {\r\n        if (!isNaN(parseInt(element))) {\r\n          if (element.includes('in')) {\r\n            pointValue.push(parseInt(element) * 72)\r\n          } else if (element.includes('cm')) {\r\n            pointValue.push(parseInt(element) * 28.35)\r\n          } else {\r\n            pointValue.push(parseInt(element))\r\n          }\r\n        }\r\n      })\r\n      for (let index = 0; index < pointValue.length; index++) {\r\n        if (index === pointValue.length - 1) {\r\n          newColumnWidthsValue = newColumnWidthsValue + (pointValue[index]) + 'pt'\r\n        } else {\r\n          newColumnWidthsValue = newColumnWidthsValue + (pointValue[index]) + 'pt;'\r\n        }\r\n      }\r\n      return newColumnWidthsValue\r\n    } else {\r\n      return 'Invalid'\r\n    }\r\n  }\r\n  validateListWidth (propertyName : keyof controlProperties, propertyValue : string) :string {\r\n    if (propertyValue === '') {\r\n      return 'Invalid'\r\n    }\r\n    if (propertyValue[0] === '-') {\r\n      return 'Negative'\r\n    }\r\n    const initialListWidth = propertyValue\r\n    let validPropertyValue: boolean = false\r\n    const element = initialListWidth\r\n    for (let index = 0; index < initialListWidth.length; index++) {\r\n      if (element.includes('in') && (element.endsWith('in'))) {\r\n        if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58) || (element.charCodeAt(index) === 73 || element.charCodeAt(index) === 105 || element.charCodeAt(index) === 32) || (element.charCodeAt(index) === 78 || element.charCodeAt(index) === 110 || element.charCodeAt(index) === 32)) {\r\n          validPropertyValue = true\r\n        } else {\r\n          validPropertyValue = false\r\n          break\r\n        }\r\n      } else if (element.includes('cm') && (element.endsWith('cm'))) {\r\n        if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58) || (element.charCodeAt(index) === 67 || element.charCodeAt(index) === 99 || element.charCodeAt(index) === 32) || (element.charCodeAt(index) === 77 || element.charCodeAt(index) === 109 || element.charCodeAt(index) === 32)) {\r\n          validPropertyValue = true\r\n        } else {\r\n          validPropertyValue = false\r\n          break\r\n        }\r\n      } else if (element.includes('pt') && (element.endsWith('pt'))) {\r\n        if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58) || (element.charCodeAt(index) === 80 || element.charCodeAt(index) === 112 || element.charCodeAt(index) === 32) || (element.charCodeAt(index) === 84 || element.charCodeAt(index) === 116 || element.charCodeAt(index) === 32)) {\r\n          validPropertyValue = true\r\n        } else {\r\n          validPropertyValue = false\r\n          break\r\n        }\r\n      } else {\r\n        if ((element.charCodeAt(index) > 47 && element.charCodeAt(index) < 58)) {\r\n          validPropertyValue = true\r\n        } else {\r\n          validPropertyValue = false\r\n          break\r\n        }\r\n      }\r\n    }\r\n    if (validPropertyValue) {\r\n      let a = propertyValue\r\n      let pointValue:any = []\r\n      let newColumnWidthsValue = ''\r\n      const element = a\r\n      if (!isNaN(parseInt(element))) {\r\n        if (element.includes('in')) {\r\n          pointValue.push(parseInt(element) * 72)\r\n        } else if (element.includes('cm')) {\r\n          pointValue.push(parseInt(element) * 28.35)\r\n        } else {\r\n          pointValue.push(parseInt(element))\r\n        }\r\n      }\r\n      newColumnWidthsValue = pointValue + 'pt'\r\n      return newColumnWidthsValue\r\n    } else {\r\n      return 'Invalid'\r\n    }\r\n  }\r\n  updateAppearance (e: Event) {\r\n    const propertyName: keyof controlProperties = (e.target as HTMLInputElement).name as keyof controlProperties\r\n    const inputType = this.tableData[propertyName]!.type\r\n    let propertyValue = (e.target as HTMLInputElement).value\r\n    if (inputType === 'file') {\r\n      if (propertyName === 'MouseIcon' || propertyName === 'Picture') {\r\n        this.handleConvertionImageToBase64(e)\r\n      }\r\n    } else if (inputType === 'String') {\r\n      if (propertyName === 'Accelerator' || propertyName === 'PasswordChar') {\r\n        this.emitUpdateProperty(\r\n          propertyName,\r\n          propertyValue !== '' ? propertyValue[0] : propertyValue\r\n        );\r\n        (e.target as HTMLInputElement).value = propertyValue && propertyValue[0]\r\n      } else if (propertyName === 'Name') {\r\n        if (checkPropertyValue(propertyName, propertyValue)) {\r\n          const isSuccess = this.updateProperty({ propertyName: propertyName, value: propertyValue })\r\n          if (!isSuccess) {\r\n            (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n            EventBus.$emit('showErrorPopup', true, 'invalid', 'Could not set the Name property. Ambiguous name.')\r\n          }\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Not a legal object name: '${propertyValue}'`)\r\n        }\r\n      } else if (propertyName === 'Value') {\r\n        if (this.getSelectedControlsDatas.length === 1) {\r\n          const controlType = this.userformData[this.userFormId][this.getSelectedControlsDatas[0]].type\r\n          if (controlType === 'CheckBox' || controlType === 'OptionButton' || controlType === 'ToggleButton') {\r\n            const resultValue = this.validateValuePropertyChboxOpbtnTglbtn(propertyName, propertyValue);\r\n            (e.target as HTMLInputElement).value = resultValue\r\n          } else if (controlType === 'ListBox') {\r\n            const isTextValid = this.validateTextValueProperty(propertyValue, propertyName, this.getSelectedControlsDatas[0])\r\n            if (isTextValid) {\r\n              this.emitUpdateProperty(propertyName, propertyValue)\r\n            } else {\r\n              EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property Value`);\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n            }\r\n          } else {\r\n            this.emitUpdateProperty(propertyName, propertyValue)\r\n          }\r\n        } else {\r\n          if (this.resultArray[0] === true) {\r\n            const resultValue = this.validateValuePropertyChboxOpbtnTglbtn(propertyName, propertyValue);\r\n            (e.target as HTMLInputElement).value = resultValue\r\n          } else if (this.resultArray[1] === true) {\r\n            const isValueValid = this.updateValueProperty({ propertyName: propertyName, value: propertyValue })\r\n            if (!isValueValid) {\r\n              EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property Value`);\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n            }\r\n          } else if (this.resultArray[2] === true) {\r\n\r\n          }\r\n          // this.updateValueProperty({ propertyName: propertyName, value: propertyValue })\r\n        }\r\n      } else if (propertyName === 'Text') {\r\n        const controlType = this.userformData[this.userFormId][this.getSelectedControlsDatas[0]].type\r\n        if (controlType === 'ListBox') {\r\n          const isTextValid = this.validateTextValueProperty(propertyValue, propertyName, this.getSelectedControlsDatas[0])\r\n          if (isTextValid) {\r\n            this.emitUpdateProperty(propertyName, propertyValue)\r\n          } else {\r\n            EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property Value`);\r\n            (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          }\r\n        } else {\r\n          this.emitUpdateProperty(propertyName, propertyValue)\r\n        }\r\n      } else if (propertyName === 'ControlSource') {\r\n        const isValid = this.validateControlSourceProperty(propertyValue)\r\n        if (isValid) {\r\n          this.emitUpdateProperty(propertyName, propertyValue)\r\n        } else {\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', 'Invalid property value.')\r\n        }\r\n      } else if (propertyName === 'RowSource') {\r\n        const isValid = this.validateRowSourceProperty(propertyValue)\r\n        if (isValid) {\r\n          this.emitUpdateProperty(propertyName, propertyValue)\r\n        } else {\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', 'Invalid property value.')\r\n        }\r\n      } else if (propertyName === 'ColumnWidths') {\r\n        const resultValue = this.validateColumnWidths(propertyName, propertyValue)\r\n        if (resultValue !== 'Invalid') {\r\n          this.emitUpdateProperty(propertyName, resultValue)\r\n        } else {\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Type mismatch`);\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        }\r\n      } else if (propertyName === 'ListWidth') {\r\n        const resultValue = this.validateListWidth(propertyName, propertyValue)\r\n        if (resultValue !== 'Invalid' && resultValue !== 'Negative') {\r\n          this.emitUpdateProperty(propertyName, resultValue)\r\n        } else if (resultValue === 'Negative') {\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value`);\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else {\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Type mismatch`);\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        }\r\n      } else {\r\n        this.emitUpdateProperty(propertyName, propertyValue)\r\n      }\r\n    } else if (inputType === 'number' || inputType === 'float') {\r\n      const value = propertyValue.includes('.') ? parseFloat(propertyValue) : parseInt(propertyValue)\r\n      if (propertyName === 'Height' || propertyName === 'Width') {\r\n        if ((this.userformData[this.userFormId][this.getSelectedControlsDatas[0]].type === 'Userform')) {\r\n          if (propertyName === 'Width') {\r\n            if (value >= 0 && value < 103) {\r\n              this.emitUpdateProperty(propertyName, 103);\r\n              (e.target as HTMLInputElement).value = '103'\r\n            } else if (value > 9830) {\r\n              this.emitUpdateProperty(propertyName, 9830)\r\n            } else if (value < 0) {\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n            } else {\r\n              this.emitUpdateProperty(propertyName, value)\r\n            }\r\n          } else if (propertyName === 'Height') {\r\n            if (value >= 0 && value < 30) {\r\n              this.emitUpdateProperty(propertyName, 30);\r\n              (e.target as HTMLInputElement).value = '30'\r\n            } else if (value > 9830) {\r\n              this.emitUpdateProperty(propertyName, 9830)\r\n            } else if (value < 0) {\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n            } else {\r\n              this.emitUpdateProperty(propertyName, value)\r\n            }\r\n          }\r\n        } else if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          if (value > 32767) {\r\n            EventBus.$emit('showErrorPopup', true, 'overflow', 'Overflow')\r\n          } else {\r\n            EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and 32768`)\r\n          }\r\n        }\r\n      } else if (propertyName === 'Top' || propertyName === 'Left') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value.`)\r\n        }\r\n      } else if (propertyName === 'MaxLength') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and  2147483647`)\r\n        }\r\n      } else if (propertyName === 'BoundColumn') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and 65536`)\r\n        }\r\n      } else if (propertyName === 'ColumnCount') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between -1 and 2147483647`)\r\n        }\r\n      } else if (propertyName === 'ListRows') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and 2147483647`)\r\n        }\r\n      } else if (propertyName === 'TextColumn') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between -1 and 32768`)\r\n        }\r\n      } else if (propertyName === 'Value') {\r\n        const controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas[0]]\r\n        const controlType = controlData.type\r\n        if (this.getSelectedControlsDatas.length === 1) {\r\n          if (controlType === 'TabStrip') {\r\n            if (value < -1 || value >= controlData.extraDatas!.Tabs!.length!) {\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n              EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value.`)\r\n            } else {\r\n              this.emitUpdateProperty(propertyName, value)\r\n            }\r\n          } else if (controlType === 'MultiPage') {\r\n            if (value < -1 || value >= controlData.controls.length) {\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n              EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value.`)\r\n            } else {\r\n              this.emitUpdateProperty(propertyName, value)\r\n            }\r\n          } else if (controlType === 'SpinButton' || controlType === 'ScrollBar') {\r\n            if (this.isDecimalNumber(propertyValue)) {\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n            } else {\r\n              const isSuccess = this.updateSpinButtonScrollBarValueProp(this.getSelectedControlsDatas[0], value)\r\n              if (!isSuccess) {\r\n                (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n                EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value.`)\r\n              }\r\n            }\r\n          } else {\r\n            this.emitUpdateProperty(propertyName, propertyValue)\r\n          }\r\n        } else {\r\n          if (this.isDecimalNumber(propertyValue)) {\r\n            (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          } else {\r\n            const isSuccess = this.validateMultipleValueProperty({ propertyName: propertyName, value: propertyValue })\r\n            if (!isSuccess) {\r\n              (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n              EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value.`)\r\n            } else {\r\n              this.updateMultiSelectPropValue(propertyName, value)\r\n            }\r\n          }\r\n        }\r\n      } else if (propertyName === 'Min' || propertyName === 'Max' || propertyName === 'SmallChange') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (checkPropertyValue(propertyName, value)) {\r\n          if (propertyName === 'Min' || propertyName === 'Max') {\r\n            this.updateProperty({ propertyName: propertyName, value: value })\r\n          } else {\r\n            this.emitUpdateProperty(propertyName, value)\r\n          }\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Invalid property value.`)\r\n        }\r\n      } else if (propertyName === 'TabFixedHeight' || propertyName === 'TabFixedWidth') {\r\n        if (checkPropertyValue(propertyName, value)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and 7200`)\r\n        }\r\n      } else if (propertyName === 'TabIndex') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (checkPropertyValue(propertyName, value)) {\r\n          const isSuccess = this.updateProperty({ propertyName: propertyName, value: value })\r\n          if (!isSuccess) {\r\n            (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          }\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value greater than or equal to zero.`)\r\n        }\r\n      } else if (propertyName === 'Index') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (value < 0) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and 32767`)\r\n        } else {\r\n          const isSuccess = this.updateProperty({ propertyName: propertyName, value: propertyValue })\r\n          if (!isSuccess) {\r\n            (e.target as HTMLInputElement).value = this.tableData!.Index!.value! as string\r\n            EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value.`)\r\n          }\r\n        }\r\n      } else if (propertyName === 'Delay') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (checkPropertyValue(propertyName, propertyValue)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else if (value < 0) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value greater than or equal to zero.`)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Invalid property value.`)\r\n        }\r\n      } else if (propertyName === 'Zoom') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (checkPropertyValue(propertyName, propertyValue)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 10 and 400.`)\r\n        }\r\n      } else if (propertyName === 'DrawBuffer') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (checkPropertyValue(propertyName, propertyValue)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 16000 and 1048576.`)\r\n        }\r\n      } else if (propertyName === 'TransitionPeriod') {\r\n        if (this.isDecimalNumber(propertyValue)) {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n        } else if (checkPropertyValue(propertyName, propertyValue)) {\r\n          this.emitUpdateProperty(propertyName, value)\r\n        } else {\r\n          (e.target as HTMLInputElement).value = this.tableData![propertyName]!.value! as string\r\n          EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${propertyName} property. Invalid property value. Enter a value between 0 and 10000.`)\r\n        }\r\n      } else {\r\n        this.emitUpdateProperty(propertyName, value)\r\n      }\r\n    } else if (inputType === 'Boolean') {\r\n      if ((propertyName === 'Cancel' || propertyName === 'Default') && ((e.target as HTMLInputElement).value) === 'true') {\r\n        this.updateProperty({ propertyName: propertyName, value: true })\r\n      } else {\r\n        this.emitUpdateProperty(\r\n          propertyName,\r\n          (e.target as HTMLInputElement).value === 'true'\r\n        )\r\n      }\r\n    } else if (inputType === 'array') {\r\n      if ((e.target as HTMLInputElement).value !== '') {\r\n        if (propertyName === 'BorderStyle' && propertyValue === '1') {\r\n          this.emitUpdateProperty(\r\n            propertyName,\r\n            parseInt((e.target as HTMLInputElement).value)\r\n          )\r\n          this.emitUpdateProperty(\r\n            'SpecialEffect',\r\n            0\r\n          )\r\n        } else if (propertyName === 'SpecialEffect' && parseInt(propertyValue) > 0) {\r\n          this.emitUpdateProperty(\r\n            propertyName,\r\n            parseInt((e.target as HTMLInputElement).value)\r\n          )\r\n          this.emitUpdateProperty(\r\n            'BorderStyle',\r\n            0\r\n          )\r\n        } else {\r\n          this.emitUpdateProperty(\r\n            propertyName,\r\n            parseInt((e.target as HTMLInputElement).value)\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateMultiSelectPropValue (propertyName: keyof controlProperties, value: number) {\r\n    const selected = this.getSelectedControlsDatas!\r\n    for (let i = 0; i < selected.length; i++) {\r\n      this.updatePropValue(selected[i], propertyName, value)\r\n    }\r\n  }\r\n  validateMultipleValueProperty (arg: IPropControl) {\r\n    debugger\r\n    const selected = this.getSelectedControlsDatas!\r\n    let isValid: boolean = true\r\n    for (let i = 0; i < selected.length; i++) {\r\n      const type = this.userformData[this.userFormId][selected[i]].type\r\n      if (type === 'ScrollBar' || type === 'SpinButton') {\r\n        isValid = this.checkValueRangeMinMax(selected[i], arg.value)\r\n      } else if (type === 'MultiPage' || type === 'TabStrip') {\r\n        if (arg.value < -1 || (type === 'TabStrip' && arg.value >= this.userformData[this.userFormId][selected[i]].extraDatas!.Tabs!.length!) ||\r\n        (type === 'MultiPage' && arg.value >= this.userformData[this.userFormId][selected[i]].controls.length!)) {\r\n          isValid = false\r\n        } else {\r\n          isValid = true\r\n        }\r\n      }\r\n      if (!isValid) {\r\n        return isValid\r\n      }\r\n    }\r\n    return isValid\r\n  }\r\n  isDecimalNumber (propValue : string) {\r\n    if (propValue.indexOf('.') > -1) {\r\n      EventBus.$emit('showErrorPopup', true, 'invalid', `Invalid property value.`)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  handleConvertionImageToBase64 (e: Event) {\r\n    let that = this\r\n    const reader = new FileReader()\r\n    const fileInput = (e.target as HTMLInputElement)\r\n    const filePath = fileInput.value\r\n    let allowedExtensions\r\n    let typeMismatchExtensions\r\n    // Allowed file type\r\n    if (fileInput.name === 'Picture') {\r\n      allowedExtensions = /(\\.jpg|\\.jpeg|\\.bmp|\\.ico|\\.gif)$/i\r\n      typeMismatchExtensions = /(\\.jpg|\\.jpeg|\\.bmp|\\.ico|\\.gif)$/i\r\n    } else {\r\n      allowedExtensions = /(\\.bmp|\\.ico)$/i\r\n      typeMismatchExtensions = /(\\.bmp|\\.ico|\\.gif)$/i\r\n    }\r\n    if (!allowedExtensions.exec(filePath)) {\r\n      fileInput.value = ''\r\n      if (typeMismatchExtensions.exec(filePath)) {\r\n        EventBus.$emit('showErrorPopup', true, 'invalid', `Could not set the ${fileInput.name} property. The picture type is not valid.`)\r\n      } else {\r\n        EventBus.$emit('showErrorPopup', true, 'invalid', 'Invalid Picture')\r\n      }\r\n      return false\r\n    } else {\r\n      if (fileInput.files && fileInput.files[0]) {\r\n        reader.onload = function (e) {\r\n          that.emitUpdateProperty(fileInput.name as keyof controlProperties, reader.result)\r\n        }\r\n        reader.readAsDataURL(fileInput.files[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  emitFont (tempVal: font) {\r\n    this.emitUpdateProperty('Font', tempVal)\r\n  }\r\n  colorPaletteProp (selectedValue: ISelectedColoPaletteValue) {\r\n    this.emitUpdateProperty(selectedValue.propertyName as keyof controlProperties, selectedValue.propertyValue)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.node {\r\n  text-align: left;\r\n}\r\ntable {\r\n  margin-right: 0%;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n  border-collapse: collapse;\r\n  color: black;\r\n}\r\nth,\r\ntd {\r\n  text-align: left;\r\n  font-size: 11px;\r\n  margin-right: 0%;\r\n  width: fit-content;\r\n  border: 1px solid black;\r\n  border-collapse: collapse;\r\n  color: black;\r\n}\r\nth {\r\n  width: 120%;\r\n  font-size: 12px;\r\n}\r\n.form-control {\r\n  float: left;\r\n  width: 280px;\r\n  cursor: pointer;\r\n  background-color: rgb(190, 185, 185);\r\n}\r\nlabel {\r\n  float: left;\r\n}\r\nselect {\r\n  width: 100%;\r\n  padding: 1px 2px;\r\n}\r\ninput {\r\n  width: 100%;\r\n}\r\n.btn-group .button {\r\n  border: none;\r\n  color: black;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n}\r\n.lefttd {\r\n  width: 120px;\r\n}\r\n</style>\r\n"]}]}