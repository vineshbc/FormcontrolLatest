{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDEditableText/index.vue?vue&type=style&index=0&id=374a6711&scoped=true&lang=css&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDEditableText/index.vue","mtime":1611919098647},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWRpdFRleHQgewogIGRpc3BsYXk6IGJsb2NrOwogIHRleHQtYWxpZ246IGluaGVyaXQ7CiAgYmFja2dyb3VuZDogaW5oZXJpdDsKICBmb250OiBpbmhlcml0OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDsKICBvdXRsaW5lOiBub25lOwogIHBhZGRpbmc6IDA7CiAgcmVzaXplOiBub25lOwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0OwogIGNvbG9yOiBpbmhlcml0OwogIHdoaXRlLXNwYWNlOiBpbmhlcml0OwogIHdvcmQtYnJlYWs6IGluaGVyaXQ7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDEditableText","sourcesContent":["<template>\r\n  <span\r\n    class=\"editText\"\r\n    ref=\"labelArea\"\r\n    role=\"textbox\"\r\n    contenteditable=\"true\"\r\n    :readonly=\"editable === false\"\r\n    @input=\"onInput\"\r\n    v-on=\"eventStoppers()\">\r\n  </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { EventBus } from '@/FormDesigner/event-bus'\r\nimport { Component, Prop, Vue, Ref } from 'vue-property-decorator'\r\n\r\n@Component({\r\n  name: 'FDEditableText'\r\n})\r\nexport default class FDEditableText extends Vue {\r\n  @Prop() private editable! : boolean\r\n  @Prop() private caption! : string\r\n\r\n  @Ref('labelArea') readonly labelArea! : HTMLSpanElement\r\n\r\n  mounted () {\r\n    this.labelArea.innerText = this.caption\r\n    this.labelArea.focus()\r\n  }\r\n\r\n  eventStoppers () {\r\n    const eventStop = (event: Event) => event.stopPropagation()\r\n    return this.editable === false ? null : {\r\n      mousedown: eventStop,\r\n      keydown: this.keydownHandle,\r\n      click: eventStop\r\n    }\r\n  }\r\n\r\n  keydownHandle (e: KeyboardEvent) {\r\n    e.stopPropagation()\r\n    if (e.key === 'Escape') {\r\n      this.$emit('releaseEditMode')\r\n    }\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  onInput () {\r\n    this.$emit('updateCaption', this.labelArea.innerText)\r\n  }\r\n  created () {\r\n    EventBus.$on('updateText', (updateValue: string) => {\r\n      this.labelArea.innerText = updateValue\r\n      this.onInput()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .editText {\r\n    display: block;\r\n    text-align: inherit;\r\n    background: inherit;\r\n    font: inherit;\r\n    border-bottom: 1px solid transparent;\r\n    outline: none;\r\n    padding: 0;\r\n    resize: none;\r\n    overflow: hidden;\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n    white-space: inherit;\r\n    word-break: inherit;\r\n  }\r\n</style>\r\n"]}]}