{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDHeader/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/organisms/FDHeader/index.vue","mtime":1612197584000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDHeader","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"firstrow\">\r\n      <div class=\"ui-titlebar\">\r\n        <div class=\"ui-titletext\">Visual Basic for Applications - Book1</div>\r\n        <div class=\"ui-titlecontrols\">\r\n          <!-- fixed svg issue -->\r\n          <button class=\"ui-btn minimize\">\r\n            <FDSVGImage name=\"minimize.svg\" />\r\n          </button>\r\n          <button class=\"ui-btn maximize\">\r\n            <FDSVGImage name=\"maximize.svg\" />\r\n          </button>\r\n          <button class=\"ui-btn close\">\r\n            <FDSVGImage name=\"close-button.svg\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"secondrow\">\r\n      <i class=\"material-icons material-float\">&#xe5d4;</i>\r\n      <div class=\"menu-bar\">\r\n        <ul>\r\n          <li><u>F</u>ile</li>\r\n          <li><u>E</u>dit</li>\r\n          <li @click=\"subMenuDisplay\">\r\n            <u>V</u>iew\r\n            <div class=\"sub-menu-1\" v-if=\"displaySubMenu === true\">\r\n              <ul class=\"sub-menu-ul\">\r\n                <li class=\"sub-menu-li\">\r\n                  <CodeLogo class=\"fa padding\" />\r\n                  <span><u>C</u>ode</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <ObjectLogo class=\"fa padding\" />\r\n                  <span>O<u>b</u>ject</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <ObjBrowserLogo class=\"fa padding\" />\r\n                  <span><u>O</u>bject Browser</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>I</u>mmediate Window</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>Local<u>s</u> Window</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>Watc<u>h</u> Window</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>Call Stac<u>k</u></span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <PjExplorerLogo class=\"fa padding\" />\r\n                  <span><u>P</u>roject Explorer</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <PjPropertyLogo class=\"fa padding\" />\r\n                  <span>Properties <u>W</u>indow</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <ToolBoxLogo class=\"fa padding\" />\r\n                  <span>ToolBo<u>x</u></span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>T<u>a</u>b Order</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>Microscoft Excel</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li @click=\"subMenuDisplay\">\r\n            <u>I</u>nsert\r\n            <div class=\"sub-menu-1\" v-if=\"displaySubMenu === true\">\r\n              <ul class=\"sub-menu-ul\">\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>P</u>rocedure</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\" @click=\"insertUserForm()\">\r\n                  <UserFormLogo class=\"fa padding\" />\r\n                  <span><u>U</u>serform</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>M</u>odule</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>C</u>lass Module</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>F<u>i</u>le</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li @click=\"subMenuDisplay\">\r\n            <u>F</u>ormat\r\n            <div class=\"sub-menu-1\" v-if=\"displaySubMenu === true\">\r\n              <ul class=\"sub-menu-ul\">\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>A</u>lign</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\">\r\n                  <UserFormLogo class=\"fa padding\" />\r\n                  <span><u>M</u>ake Same Size</span>\r\n                </li>\r\n                <hr />\r\n                <li\r\n                  class=\"sub-menu-li\"\r\n                  :style=\"{ opacity: getdisableStyle('sizeToFit') ? 0.5 : 1 }\"\r\n                  @click=\"getdisableStyle('sizeToFit') ? '' : sizeToFit()\"\r\n                >\r\n                  <span></span>\r\n                  <span>Size to <u>F</u>it</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                 :style=\"{ opacity: getdisableStyle('sizeToGrid') ? 0.5 : 1 }\"\r\n                  @click=\"getdisableStyle('sizeToGrid') ? '' : sizeToGrid()\"\r\n                >\r\n                  <span></span>\r\n                  <span>Size to Gri<u>d</u></span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>H</u>orizontal Spacing</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('makeEqual') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('makeEqual') ? '' : makeEqual('Left')\"\r\n                >\r\n                  <span></span>\r\n                  <span>Make <u>E</u>qual</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('incDecspacing') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('incDecspacing') ? '' : incDecspacing('Left', gridSize)\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>I</u>ncrease</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('incDecspacing') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('incDecspacing') ? '' : incDecspacing('Left', -gridSize)\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>D</u>ecrease</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('removeSpace') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('removeSpace') ? '' : removeSpace('Left')\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>R</u>emove</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>V</u>ertical Spacing</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('makeEqual') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('makeEqual') ? '' : makeEqual('Top')\"\r\n                >\r\n                  <span></span>\r\n                  <span>Make <u>E</u>qual</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('incDecspacing') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('incDecspacing') ? '' : incDecspacing('Top', gridSize)\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>I</u>ncrease</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('incDecspacing') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('incDecspacing') ? '' : incDecspacing('Top', -gridSize)\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>D</u>ecrease</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('removeSpace') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('removeSpace') ? '' : removeSpace('Top')\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>R</u>emove</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>C</u>enter in Form</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('centreInForm') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('centreInForm') ? '' : centreInForm('horizontal')\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>H</u>orizontally</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('centreInForm') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('centreInForm') ? '' : centreInForm('vertical')\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>V</u>ertically</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span>A<u>r</u>range Buttons</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('arrangeButton') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('arrangeButton') ? '' : arrangeButton('right')\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>R</u>ight</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('arrangeButton') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('arrangeButton') ? '' : arrangeButton('bottom')\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>B</u>ottom</span>\r\n                </li>\r\n                <hr />\r\n                <li\r\n                  class=\"sub-menu-li\"\r\n                  :style=\"{ opacity: getdisableStyle('group') ? 0.5 : 1 }\"\r\n                  @click=\"getdisableStyle('group') ? '' : groupControl()\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>G</u>roup</span>\r\n                </li>\r\n                <li\r\n                  class=\"sub-menu-li\"\r\n                  :style=\"{ opacity: getdisableStyle('unGroup') ? 0.5 : 1 }\"\r\n                  @click=\"getdisableStyle('unGroup') ? '' : unGroupControl()\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>U</u>nGroup</span>\r\n                </li>\r\n                <hr />\r\n                <li class=\"sub-menu-li\">\r\n                  <span></span>\r\n                  <span><u>O</u>rder</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('order') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('order') ? '' : bringFront()\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>B</u>ring to Front</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('order') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('order') ? '' : sendBack()\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>S</u>end to Back</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('order') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('order') ? '' : bringForward()\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>B</u>ring Forward</span>\r\n                </li>\r\n                <li class=\"sub-menu-li\"\r\n                :style=\"{ opacity: getdisableStyle('order') ? 0.5 : 1 }\"\r\n                @click=\"getdisableStyle('order') ? '' : sendBackward()\"\r\n                >\r\n                  <span></span>\r\n                  <span><u>S</u>end Backward</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li><u>D</u>ebug</li>\r\n          <li @click=\"clickChangeMode\"><u>R</u>un</li>\r\n          <li><u>T</u>ools</li>\r\n          <li><u>A</u>dd-Ins</li>\r\n          <li><u>W</u>indow</li>\r\n          <li><u>H</u>elp</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"thirdrow\">\r\n      <i class=\"material-icons\">&#xe5d4;</i>\r\n      <FileSaveLogo class=\"fa\" />\r\n      <CutLogo class=\"fa\" />\r\n      <CopyLogo class=\"fa\" />\r\n      <PasteLogo class=\"fa\" />\r\n      <FindLogo class=\"fa\" />\r\n      <UndoLogo class=\"fa\" />\r\n      <RedoLogo class=\"fa\" />\r\n      <DesignModeLogo class=\"fa\" />\r\n      <PjExplorerLogo class=\"fa\" />\r\n      <PjPropertyLogo class=\"fa\" />\r\n      <ObjBrowserLogo class=\"fa\" />\r\n      <ToolBoxLogo class=\"fa\" />\r\n      <HelpLogo class=\"fa\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { State, Action } from 'vuex-class'\r\nimport {\r\n  IaddUserform,\r\n  IupdateControlExtraData\r\n} from '@/storeModules/fd/actions'\r\nimport { ControlPropertyData } from '@/FormDesigner/models/ControlsTableProperties/ControlPropertyData'\r\nimport CutLogo from '../../../../assets/cut.svg'\r\nimport FileSaveLogo from '../../../../assets/file-save.svg'\r\nimport CopyLogo from '../../../../assets/copy.svg'\r\nimport PasteLogo from '../../../../assets/paste.svg'\r\nimport FindLogo from '../../../../assets/find.svg'\r\nimport UndoLogo from '../../../../assets/undo.svg'\r\nimport RedoLogo from '../../../../assets/redo.svg'\r\nimport DesignModeLogo from '../../../../assets/design-mode.svg'\r\nimport PjExplorerLogo from '../../../../assets/pj-explorer.svg'\r\nimport PjPropertyLogo from '../../../../assets/pj-property.svg'\r\nimport ObjBrowserLogo from '../../../../assets/obj-browser.svg'\r\nimport ToolBoxLogo from '../../../../assets/tool-box.svg'\r\nimport UserFormLogo from '../../../../assets/user-from.svg'\r\nimport HelpLogo from '../../../../assets/help.svg'\r\nimport CodeLogo from '../../../../assets/view-code.svg'\r\nimport ObjectLogo from '../../../../assets/view-object.svg'\r\nimport FDSVGImage from '@/FormDesigner/components/atoms/FDSVGImage/index.vue'\r\nimport { EventBus } from '@/FormDesigner/event-bus'\r\nimport FDCommonMethod from '@/api/abstract/FormDesigner/FDCommonMethod'\r\n\r\n@Component({\r\n  name: 'Header',\r\n  components: {\r\n    FileSaveLogo,\r\n    CutLogo,\r\n    CopyLogo,\r\n    PasteLogo,\r\n    FindLogo,\r\n    UndoLogo,\r\n    RedoLogo,\r\n    DesignModeLogo,\r\n    PjExplorerLogo,\r\n    PjPropertyLogo,\r\n    ObjBrowserLogo,\r\n    ToolBoxLogo,\r\n    UserFormLogo,\r\n    CodeLogo,\r\n    ObjectLogo,\r\n    HelpLogo,\r\n    FDSVGImage\r\n  }\r\n})\r\nexport default class Header extends FDCommonMethod {\r\n  displaySubMenu: boolean = false;\r\n  @Action('fd/addUserform') addControl!: (payload: IaddUserform) => void;\r\n  @Action('fd/changeRunMode') changeRunMode!: (payload: boolean) => void;\r\n\r\n  @State((state) => state.fd.selectedControls)\r\n  selectedControls!: fdState['selectedControls'];\r\n  @State((state) => state.fd.userformData) userformData!: userformData;\r\n  @State((state) => state.fd.isRunMode) isRunMode!: boolean;\r\n  @Action('fd/updateControlExtraData') updateControlExtraData!: (\r\n    payload: IupdateControlExtraData\r\n  ) => void;\r\n  propControlData = {};\r\n  userFormId = 'ID_USERFORM1';\r\n  gridSize: number = 9\r\n  insertUserForm () {\r\n    this.propControlData = this.userformData\r\n    const userform = new ControlPropertyData()\r\n    const userFormId = `ID_USERFORM${\r\n      Object.keys(this.userformData).length + 1\r\n    }`\r\n    const Name = `UserForm${Object.keys(this.userformData).length + 1}`\r\n    const Caption = `UserForm${Object.keys(this.userformData).length + 1}`\r\n    const ID = Object.keys(this.userformData).length + 1\r\n    this.addControl({\r\n      target: this,\r\n      key: userFormId,\r\n      value: {\r\n        properties: {\r\n          ...userform.data.UserForm,\r\n          Name: Name,\r\n          ID: ID,\r\n          Caption: Caption\r\n        },\r\n        controls: [],\r\n        extraDatas: { display: 'none' },\r\n        type: 'Userform'\r\n      }\r\n    })\r\n  }\r\n  subMenuDisplay () {\r\n    this.displaySubMenu = !this.displaySubMenu\r\n  }\r\n  clickChangeMode () {\r\n    this.changeRunMode(!this.isRunMode)\r\n  }\r\n  makeEqual (type: keyof controlProperties) {\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    const ctrlContainer = this.selectedControls[this.userFormId].container[0]\r\n    const controls = usrFrmData[ctrlContainer].controls\r\n    let divstyle: Array<IGroupStyle> = []\r\n    let getGroupIndex = -1\r\n    EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n      divstyle = divstayleArray\r\n    })\r\n    if (ctrlSel[0].startsWith('group')) {\r\n      getGroupIndex = divstyle.findIndex((val) => val.groupName === ctrlSel[0])\r\n    }\r\n    let propValue = 0\r\n    const leftArray: string[] = []\r\n    const rightArray: string[] = []\r\n    for (let index = 1; index < ctrlSel.length; index++) {\r\n      const selLeft = ctrlSel[0].startsWith('group')\r\n        ? parseInt(divstyle[getGroupIndex].left!)\r\n        : usrFrmData[ctrlSel[0]].properties.Left\r\n      const selTop = ctrlSel[0].startsWith('group')\r\n        ? parseInt(divstyle[getGroupIndex].top!)\r\n        : usrFrmData[ctrlSel[0]].properties.Top\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const ctrlProp = usrFrmData[ctrlSel[index]].properties\r\n        if (type === 'Left') {\r\n          if (ctrlProp.Left! <= selLeft!) {\r\n            leftArray.push(ctrlSel[index])\r\n          } else {\r\n            rightArray.push(ctrlSel[index])\r\n          }\r\n        } else if (type === 'Top') {\r\n          if (ctrlProp.Top! <= selTop!) {\r\n            leftArray.push(ctrlSel[index])\r\n          } else {\r\n            rightArray.push(ctrlSel[index])\r\n          }\r\n        }\r\n      } else {\r\n        EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n          divstyle = divstayleArray\r\n        })\r\n        const getIndex = divstyle.findIndex(\r\n          (val) => val.groupName === ctrlSel[index]\r\n        )\r\n        const groupLeft = parseInt(divstyle[getIndex].left!)\r\n        const groupTop = parseInt(divstyle[getIndex].top!)\r\n        const groupConrol = this.getGroupControl(ctrlSel[index])\r\n        if (type === 'Left') {\r\n          if (groupLeft <= selLeft!) {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Left!) === groupLeft) {\r\n                leftArray.push(ctrl)\r\n              }\r\n            }\r\n          } else {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Left!) === groupLeft) {\r\n                rightArray.push(ctrl)\r\n              }\r\n            }\r\n          }\r\n        } else if (type === 'Top') {\r\n          if (groupTop <= selTop!) {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Top!) === groupTop) {\r\n                leftArray.push(ctrl)\r\n              }\r\n            }\r\n          } else {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Top!) === groupTop) {\r\n                rightArray.push(ctrl)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (ctrlSel[0].startsWith('group')) {\r\n      const getIndex = divstyle.findIndex(\r\n        (val) => val.groupName === ctrlSel[0]\r\n      )\r\n      const groupLeft = parseInt(divstyle[getIndex].left!)\r\n      const groupTop = parseInt(divstyle[getIndex].top!)\r\n      const groupConrol = this.getGroupControl(ctrlSel[0])\r\n      if (type === 'Left') {\r\n        for (let ctrl of groupConrol) {\r\n          const prop = this.userformData[this.userFormId][ctrl].properties\r\n          if (Math.floor(prop.Left!) === groupLeft) {\r\n            leftArray.push(ctrl)\r\n            rightArray.push(ctrl)\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        for (let ctrl of groupConrol) {\r\n          const prop = this.userformData[this.userFormId][ctrl].properties\r\n          if (Math.floor(prop.Top!) === groupTop) {\r\n            leftArray.push(ctrl)\r\n            rightArray.push(ctrl)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      leftArray.unshift(ctrlSel[0])\r\n      rightArray.push(ctrlSel[0])\r\n    }\r\n    if (type === 'Left') {\r\n      leftArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Left! - usrFrmData[b].properties.Left!\r\n      })\r\n      rightArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Left! - usrFrmData[b].properties.Left!\r\n      })\r\n    } else if (type === 'Top') {\r\n      leftArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Top! - usrFrmData[b].properties.Top!\r\n      })\r\n      rightArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Top! - usrFrmData[b].properties.Top!\r\n      })\r\n    }\r\n    let leftControl = { ...usrFrmData[leftArray[0]].properties }\r\n    if (leftControl.GroupID !== '') {\r\n      const groupIndex = divstyle.findIndex(\r\n        (val) => val.groupName === leftControl.GroupID\r\n      )\r\n      const groupSize = divstyle[groupIndex]\r\n      leftControl = {\r\n        ...leftControl,\r\n        Width: parseInt(divstyle[groupIndex].width!),\r\n        Height: parseInt(divstyle[groupIndex].height!),\r\n        Left: parseInt(divstyle[groupIndex].left!),\r\n        Top: parseInt(divstyle[groupIndex].top!)\r\n      }\r\n    }\r\n    let rightControl = {\r\n      ...usrFrmData[rightArray[rightArray.length - 1]].properties\r\n    }\r\n    if (rightControl.GroupID !== '') {\r\n      const groupIndex = divstyle.findIndex(\r\n        (val) => val.groupName === rightControl.GroupID\r\n      )\r\n      const groupSize = divstyle[groupIndex]\r\n      rightControl = {\r\n        ...leftControl,\r\n        Width: parseInt(divstyle[groupIndex].width!),\r\n        Height: parseInt(divstyle[groupIndex].height!),\r\n        Left: parseInt(divstyle[groupIndex].left!),\r\n        Top: parseInt(divstyle[groupIndex].top!)\r\n      }\r\n    }\r\n    let totalSize = 0\r\n    for (let index = 0; index < ctrlSel.length; index++) {\r\n      if (type === 'Left') {\r\n        if (!ctrlSel[index].startsWith('group')) {\r\n          const ctrlProp = usrFrmData[ctrlSel[index]].properties\r\n          totalSize = totalSize + ctrlProp.Width!\r\n        } else {\r\n          const groupIndex = divstyle.findIndex(\r\n            (val) => val.groupName === ctrlSel[index]\r\n          )\r\n          totalSize = totalSize + parseInt(divstyle[groupIndex].width!)\r\n        }\r\n      } else if (type === 'Top') {\r\n        if (!ctrlSel[index].startsWith('group')) {\r\n          const ctrlProp = usrFrmData[ctrlSel[index]].properties\r\n          totalSize = totalSize + ctrlProp.Height!\r\n        } else {\r\n          const groupIndex = divstyle.findIndex(\r\n            (val) => val.groupName === ctrlSel[index]\r\n          )\r\n          totalSize = totalSize + parseInt(divstyle[groupIndex].height!)\r\n        }\r\n      }\r\n    }\r\n    let diffrence = 0\r\n    if (type === 'Left') {\r\n      diffrence =\r\n        (rightControl.Left! +\r\n          rightControl.Width! -\r\n          leftControl.Left! -\r\n          totalSize) /\r\n        (ctrlSel.length - 1)\r\n    } else if (type === 'Top') {\r\n      diffrence =\r\n        (rightControl.Top! +\r\n          rightControl.Height! -\r\n          leftControl.Top! -\r\n          totalSize) /\r\n        (ctrlSel.length - 1)\r\n    }\r\n    const unique = () => {\r\n      var a = leftArray.concat(rightArray)\r\n      for (var i = 0; i < a.length; ++i) {\r\n        for (var j = i + 1; j < a.length; ++j) {\r\n          if (a[i] === a[j]) {\r\n            a.splice(j--, 1)\r\n          }\r\n        }\r\n      }\r\n      return a\r\n    }\r\n    const combineArray = unique()\r\n    for (let index = 1; index < combineArray.length - 1; index++) {\r\n      const prevCtrlProp = usrFrmData[combineArray[index - 1]].properties\r\n      const ctrlProp = usrFrmData[combineArray[index]].properties\r\n      let prevIndex = -1\r\n      const controlPropIndex = -1\r\n      if (type === 'Left') {\r\n        if (prevCtrlProp.GroupID === '' && ctrlProp.GroupID === '') {\r\n          propValue = prevCtrlProp.Left! + prevCtrlProp.Width! + diffrence\r\n          this.updateControlProperty(type, propValue, combineArray[index])\r\n        } else {\r\n          if (prevCtrlProp.GroupID !== '') {\r\n            prevIndex = divstyle.findIndex(\r\n              (val) => val.groupName === prevCtrlProp.GroupID\r\n            )\r\n            propValue =\r\n              parseInt(divstyle[prevIndex].left!) +\r\n              parseInt(divstyle[prevIndex].width!) +\r\n              diffrence\r\n          } else {\r\n            propValue = prevCtrlProp.Left! + prevCtrlProp.Width! + diffrence\r\n          }\r\n          if (ctrlProp.GroupID !== '') {\r\n            const getIndex = divstyle.findIndex(\r\n              (val) => val.groupName === ctrlProp.GroupID\r\n            )\r\n            EventBus.$emit('updasteGroupSize', type, propValue, getIndex)\r\n          } else {\r\n            this.updateControlProperty(type, propValue, combineArray[index])\r\n          }\r\n        }\r\n      } else {\r\n        if (type === 'Top') {\r\n          if (prevCtrlProp.GroupID === '' && ctrlProp.GroupID === '') {\r\n            propValue = prevCtrlProp.Top! + prevCtrlProp.Height! + diffrence\r\n            this.updateControlProperty(type, propValue, combineArray[index])\r\n          } else {\r\n            if (prevCtrlProp.GroupID !== '') {\r\n              prevIndex = divstyle.findIndex(\r\n                (val) => val.groupName === prevCtrlProp.GroupID\r\n              )\r\n              propValue =\r\n                parseInt(divstyle[prevIndex].top!) +\r\n                parseInt(divstyle[prevIndex].height!) +\r\n                diffrence\r\n            } else {\r\n              propValue = prevCtrlProp.Top! + prevCtrlProp.Height! + diffrence\r\n            }\r\n            if (ctrlProp.GroupID !== '') {\r\n              const getIndex = divstyle.findIndex(\r\n                (val) => val.groupName === ctrlProp.GroupID\r\n              )\r\n              EventBus.$emit('updasteGroupSize', type, propValue, getIndex)\r\n            } else {\r\n              this.updateControlProperty(type, propValue, combineArray[index])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  bringFront () {\r\n    const userData = this.userformData[this.userFormId]\r\n    const highProrControl: string[] = []\r\n    const lowProrControl: string[] = []\r\n    const container = this.getContainerList(this.getSelectedControlsDatas![0])[0]\r\n    const containerControls = this.userformData[this.userFormId][container].controls\r\n    for (const index in containerControls) {\r\n      const cntrlData = this.userformData[this.userFormId][containerControls[index]]\r\n      if (cntrlData.type === 'MultiPage' || cntrlData.type === 'Frame' || cntrlData.type === 'ListBox') {\r\n        highProrControl.push(containerControls[index])\r\n      } else {\r\n        lowProrControl.push(containerControls[index])\r\n      }\r\n    }\r\n    lowProrControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    let getLowPropHighestIndex: string = lowProrControl[lowProrControl.length - 1]\r\n    highProrControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    let getHighPropHighestIndex = highProrControl[highProrControl.length - 1]\r\n    const lowSeriesControl: string[] = []\r\n    const highSeriesControl: string[] = []\r\n    const getSelControl = [...this.getSelectedControlsDatas!]\r\n    getSelControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    for (const selControl of getSelControl) {\r\n      if (lowProrControl.includes(selControl)) {\r\n        lowSeriesControl.push(selControl)\r\n      } else {\r\n        highSeriesControl.push(selControl)\r\n      }\r\n    }\r\n    const setLowPropHighIndex = (control: string) => {\r\n      if (lowSeriesControl.length > 0 && lowSeriesControl.includes(control)) {\r\n        lowSeriesControl.pop()\r\n        const Index = lowProrControl.findIndex(val => userData[getLowPropHighestIndex!].extraDatas!.zIndex! - 1 === userData[val].extraDatas!.zIndex)\r\n        getLowPropHighestIndex = Index !== -1 ? lowProrControl[Index] : ''\r\n        if (Index !== -1) {\r\n          setLowPropHighIndex(getLowPropHighestIndex)\r\n        }\r\n      }\r\n    }\r\n    setLowPropHighIndex(getLowPropHighestIndex)\r\n    lowSeriesControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    if (lowSeriesControl.length > 0) {\r\n      const lowestZIndex = userData[lowSeriesControl[0]].extraDatas!.zIndex!\r\n      let nextSeries: string[] = []\r\n      let count = lowSeriesControl.length - 1\r\n      const diff = userData[getLowPropHighestIndex].extraDatas!.zIndex! - userData[lowSeriesControl[lowSeriesControl.length - 1]].extraDatas!.zIndex!\r\n      for (const ctrl of lowSeriesControl) {\r\n        const nextControl = lowSeriesControl.findIndex(val => 'zIndex' in userData[val].extraDatas! && (userData[ctrl].extraDatas!.zIndex! + 1 === userData[val].extraDatas!.zIndex!))\r\n        if (nextControl !== -1) {\r\n          nextSeries.push(ctrl)\r\n          count = count - 1\r\n        } else {\r\n          const difference = userData[getLowPropHighestIndex].extraDatas!.zIndex! - count\r\n          this.updateExtraDatas(ctrl, 'zIndex', difference)\r\n          if (nextSeries.length > 0) {\r\n            for (let i = 0; i < nextSeries.length; i++) {\r\n              const diff = userData[ctrl].extraDatas!.zIndex! - (nextSeries.length - i)\r\n              this.updateExtraDatas(nextSeries[i], 'zIndex', diff)\r\n            }\r\n            nextSeries = []\r\n          }\r\n          count = count - 1\r\n        }\r\n      }\r\n      let counter = 0\r\n      for (const ctrl of lowProrControl) {\r\n        if (!this.getSelectedControlsDatas!.includes(ctrl)) {\r\n          counter = counter + 1\r\n          this.updateExtraDatas(ctrl, 'zIndex', counter)\r\n        }\r\n      }\r\n    }\r\n\r\n    const setHighPropHighIndex = (control: string) => {\r\n      if (highSeriesControl.length > 0 && highSeriesControl.includes(control)) {\r\n        highSeriesControl.pop()\r\n        const Index = highProrControl.findIndex(val => userData[getHighPropHighestIndex!].extraDatas!.zIndex! - 1 === userData[val].extraDatas!.zIndex)\r\n        getHighPropHighestIndex = Index !== -1 ? highProrControl[Index] : ''\r\n        if (Index !== -1) {\r\n          setHighPropHighIndex(getHighPropHighestIndex)\r\n        }\r\n      }\r\n    }\r\n    setHighPropHighIndex(getHighPropHighestIndex)\r\n    highSeriesControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    if (highSeriesControl.length > 0) {\r\n      const highestZIndex = userData[highSeriesControl[0]].extraDatas!.zIndex!\r\n      let nextSeries: string[] = []\r\n      let count = highSeriesControl.length - 1\r\n      const diff = userData[getHighPropHighestIndex].extraDatas!.zIndex! - userData[highSeriesControl[highSeriesControl.length - 1]].extraDatas!.zIndex!\r\n      for (const ctrl of highSeriesControl) {\r\n        const nextControl = highSeriesControl.findIndex(val => 'zIndex' in userData[val].extraDatas! && (userData[ctrl].extraDatas!.zIndex! + 1 === userData[val].extraDatas!.zIndex!))\r\n        if (nextControl !== -1) {\r\n          nextSeries.push(ctrl)\r\n          count = count - 1\r\n        } else {\r\n          const difference = userData[getHighPropHighestIndex].extraDatas!.zIndex! - count\r\n          this.updateExtraDatas(ctrl, 'zIndex', difference)\r\n          if (nextSeries.length > 0) {\r\n            for (let i = 0; i < nextSeries.length; i++) {\r\n              const diff = userData[ctrl].extraDatas!.zIndex! - (nextSeries.length - i)\r\n              this.updateExtraDatas(nextSeries[i], 'zIndex', diff)\r\n            }\r\n            nextSeries = []\r\n          }\r\n          count = count - 1\r\n        }\r\n      }\r\n      let counter = 0\r\n      for (const ctrl of highProrControl) {\r\n        if (!this.getSelectedControlsDatas!.includes(ctrl)) {\r\n          counter = counter + 1\r\n          this.updateExtraDatas(ctrl, 'zIndex', counter)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  sendBack () {\r\n    const userData = this.userformData[this.userFormId]\r\n    const highProrControl: string[] = []\r\n    const lowProrControl: string[] = []\r\n    const container = this.getContainerList(this.getSelectedControlsDatas![0])[0]\r\n    const containerControls = this.userformData[this.userFormId][container].controls\r\n    for (const index in containerControls) {\r\n      const cntrlData = this.userformData[this.userFormId][containerControls[index]]\r\n      if (cntrlData.type === 'MultiPage' || cntrlData.type === 'Frame' || cntrlData.type === 'ListBox') {\r\n        highProrControl.push(containerControls[index])\r\n      } else {\r\n        lowProrControl.push(containerControls[index])\r\n      }\r\n    }\r\n    lowProrControl.sort((a, b) => {\r\n      return userData[b].extraDatas!.zIndex! - userData[a].extraDatas!.zIndex!\r\n    })\r\n    let getLowPropHighestIndex: string = lowProrControl[lowProrControl.length - 1]\r\n    highProrControl.sort((a, b) => {\r\n      return userData[b].extraDatas!.zIndex! - userData[a].extraDatas!.zIndex!\r\n    })\r\n    let getHighPropHighestIndex = highProrControl[highProrControl.length - 1]\r\n    const lowSeriesControl: string[] = []\r\n    const highSeriesControl: string[] = []\r\n    const getSelControl = [...this.getSelectedControlsDatas!]\r\n    getSelControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    for (const selControl of getSelControl) {\r\n      if (lowProrControl.includes(selControl)) {\r\n        lowSeriesControl.push(selControl)\r\n      } else {\r\n        highSeriesControl.push(selControl)\r\n      }\r\n    }\r\n    const setLowPropHighIndex = (control: string) => {\r\n      if (lowSeriesControl.length > 0 && lowSeriesControl.includes(control)) {\r\n        lowSeriesControl.pop()\r\n        const Index = lowProrControl.findIndex(val => userData[getLowPropHighestIndex!].extraDatas!.zIndex! + 1 === userData[val].extraDatas!.zIndex)\r\n        getLowPropHighestIndex = Index !== -1 ? lowProrControl[Index] : ''\r\n        if (Index !== -1) {\r\n          setLowPropHighIndex(getLowPropHighestIndex)\r\n        }\r\n      }\r\n    }\r\n    setLowPropHighIndex(getLowPropHighestIndex)\r\n    if (lowSeriesControl.length > 0) {\r\n      lowSeriesControl.sort((a, b) => {\r\n        return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n      })\r\n      let count = userData[getLowPropHighestIndex].extraDatas!.zIndex!\r\n      for (const ctrl of lowSeriesControl) {\r\n        this.updateExtraDatas(ctrl, 'zIndex', count)\r\n        count = count + 1\r\n      }\r\n      let counter = userData[lowSeriesControl[lowSeriesControl.length - 1]].extraDatas!.zIndex!\r\n      for (let i = lowProrControl.length - 1; i >= 0; i--) {\r\n        if (!this.getSelectedControlsDatas!.includes(lowProrControl[i])) {\r\n          counter = counter + 1\r\n          this.updateExtraDatas(lowProrControl[i], 'zIndex', counter)\r\n        }\r\n      }\r\n    }\r\n\r\n    const setHighPropHighIndex = (control: string) => {\r\n      if (highSeriesControl.length > 0 && highSeriesControl.includes(control)) {\r\n        highSeriesControl.shift()\r\n        const Index = highProrControl.findIndex(val => userData[getHighPropHighestIndex!].extraDatas!.zIndex! + 1 === userData[val].extraDatas!.zIndex)\r\n        getHighPropHighestIndex = Index !== -1 ? highProrControl[Index] : ''\r\n        if (Index !== -1) {\r\n          setHighPropHighIndex(getHighPropHighestIndex)\r\n        }\r\n      }\r\n    }\r\n    setHighPropHighIndex(getHighPropHighestIndex)\r\n    if (highSeriesControl.length > 0) {\r\n      highSeriesControl.sort((a, b) => {\r\n        return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n      })\r\n      let count = userData[getHighPropHighestIndex].extraDatas!.zIndex!\r\n      for (const ctrl of highSeriesControl) {\r\n        this.updateExtraDatas(ctrl, 'zIndex', count)\r\n        count = count + 1\r\n      }\r\n      let counter = userData[highSeriesControl[highSeriesControl.length - 1]].extraDatas!.zIndex!\r\n      for (let i = highProrControl.length - 1; i >= 0; i--) {\r\n        if (!this.getSelectedControlsDatas!.includes(highProrControl[i])) {\r\n          counter = counter + 1\r\n          this.updateExtraDatas(highProrControl[i], 'zIndex', counter)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  groupControl () {\r\n    EventBus.$emit('groupControl', 'group')\r\n  }\r\n  unGroupControl () {\r\n    EventBus.$emit('groupControl', 'ungroup')\r\n  }\r\n  sizeToFit () {\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    const sizeToFitArr: string[] = []\r\n    const sizeToFitVal: boolean[] = []\r\n    for (let index = 0; index < ctrlSel.length; index++) {\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const controlprop = usrFrmData[ctrlSel[index]].properties\r\n        if ('AutoSize' in controlprop) {\r\n          sizeToFitArr.push(ctrlSel[index])\r\n          sizeToFitVal.push(controlprop.AutoSize!)\r\n          this.updateControlProperty('AutoSize', true, ctrlSel[index])\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      for (let index = 0; index < sizeToFitArr.length; index++) {\r\n        if (!sizeToFitArr[index].startsWith('group')) {\r\n          const controlprop = usrFrmData[sizeToFitArr[index]].properties\r\n          if ('AutoSize' in controlprop) {\r\n            this.updateControlProperty(\r\n              'AutoSize',\r\n              sizeToFitVal[index],\r\n              sizeToFitArr[index]\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n  convertToGridSize (val: number) {\r\n    const gridSize = 9\r\n    return Math.round(val / gridSize) * gridSize\r\n  }\r\n  sizeToGrid () {\r\n    let divstyle: Array<IGroupStyle> = []\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    let ctrlContainer = this.selectedControls[this.userFormId].container[0]\r\n    for (let index = 0; index < ctrlSel.length; index++) {\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const controlprop = usrFrmData[ctrlSel[index]].properties\r\n        this.updateControlProperty(\r\n          'Left',\r\n          this.convertToGridSize(controlprop.Left!),\r\n          ctrlSel[index]\r\n        )\r\n        this.updateControlProperty(\r\n          'Top',\r\n          this.convertToGridSize(controlprop.Top!),\r\n          ctrlSel[index]\r\n        )\r\n        this.updateControlProperty(\r\n          'Width',\r\n          this.convertToGridSize(controlprop.Width!),\r\n          ctrlSel[index]\r\n        )\r\n        this.updateControlProperty(\r\n          'Height',\r\n          this.convertToGridSize(controlprop.Height!),\r\n          ctrlSel[index]\r\n        )\r\n      } else {\r\n        EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n          divstyle = divstayleArray\r\n        })\r\n        const getIndex = divstyle.findIndex(\r\n          (val) => val.groupName === ctrlSel[index]\r\n        )\r\n        EventBus.$emit('updasteGroupSize', 'GroupID', 0, getIndex)\r\n      }\r\n    }\r\n  }\r\n  incDecspacing (type: keyof controlProperties, value: number) {\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    const ctrlContainer = this.selectedControls[this.userFormId].container[0]\r\n    const controls = usrFrmData[ctrlContainer].controls\r\n    let divstyle: Array<IGroupStyle> = []\r\n    let getGroupIndex = -1\r\n    if (ctrlSel[0].startsWith('group')) {\r\n      EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n        divstyle = divstayleArray\r\n      })\r\n      getGroupIndex = divstyle.findIndex((val) => val.groupName === ctrlSel[0])\r\n    }\r\n    const leftArray: string[] = []\r\n    const rightArray: string[] = []\r\n    for (let index = 1; index < ctrlSel.length; index++) {\r\n      const selLeft = ctrlSel[0].startsWith('group')\r\n        ? parseInt(divstyle[getGroupIndex].left!)\r\n        : usrFrmData[ctrlSel[0]].properties.Left\r\n      const selTop = ctrlSel[0].startsWith('group')\r\n        ? parseInt(divstyle[getGroupIndex].top!)\r\n        : usrFrmData[ctrlSel[0]].properties.Top\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const ctrlProp = usrFrmData[ctrlSel[index]].properties\r\n        if (type === 'Left') {\r\n          if (ctrlProp.Left! <= selLeft!) {\r\n            leftArray.push(ctrlSel[index])\r\n          } else {\r\n            rightArray.push(ctrlSel[index])\r\n          }\r\n        } else if (type === 'Top') {\r\n          if (ctrlProp.Top! <= selTop!) {\r\n            leftArray.push(ctrlSel[index])\r\n          } else {\r\n            rightArray.push(ctrlSel[index])\r\n          }\r\n        }\r\n      } else {\r\n        EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n          divstyle = divstayleArray\r\n        })\r\n        const getIndex = divstyle.findIndex(\r\n          (val) => val.groupName === ctrlSel[index]\r\n        )\r\n        const groupLeft = parseInt(divstyle[getIndex].left!)\r\n        const groupTop = parseInt(divstyle[getIndex].top!)\r\n        const groupConrol = this.getGroupControl(ctrlSel[index])\r\n        if (type === 'Left') {\r\n          if (groupLeft <= selLeft!) {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Left!) === groupLeft) {\r\n                leftArray.push(ctrl)\r\n              }\r\n            }\r\n          } else {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Left!) === groupLeft) {\r\n                rightArray.push(ctrl)\r\n              }\r\n            }\r\n          }\r\n        } else if (type === 'Top') {\r\n          if (groupTop <= selTop!) {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Top!) === groupTop) {\r\n                leftArray.push(ctrl)\r\n              }\r\n            }\r\n          } else {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Top!) === groupTop) {\r\n                rightArray.push(ctrl)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (ctrlSel[0].startsWith('group')) {\r\n      const getIndex = divstyle.findIndex(\r\n        (val) => val.groupName === ctrlSel[0]\r\n      )\r\n      const groupLeft = parseInt(divstyle[getIndex].left!)\r\n      const groupTop = parseInt(divstyle[getIndex].top!)\r\n      const groupConrol = this.getGroupControl(ctrlSel[0])\r\n      if (type === 'Left') {\r\n        for (let ctrl of groupConrol) {\r\n          const prop = this.userformData[this.userFormId][ctrl].properties\r\n          if (Math.floor(prop.Left!) === groupLeft) {\r\n            leftArray.push(ctrl)\r\n            rightArray.push(ctrl)\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        for (let ctrl of groupConrol) {\r\n          const prop = this.userformData[this.userFormId][ctrl].properties\r\n          if (Math.floor(prop.Top!) === groupTop) {\r\n            leftArray.push(ctrl)\r\n            rightArray.push(ctrl)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      leftArray.unshift(ctrlSel[0])\r\n      rightArray.push(ctrlSel[0])\r\n    }\r\n    if (type === 'Left') {\r\n      leftArray.sort((a, b) => {\r\n        return usrFrmData[b].properties.Left! - usrFrmData[a].properties.Left!\r\n      })\r\n      rightArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Left! - usrFrmData[b].properties.Left!\r\n      })\r\n    } else if (type === 'Top') {\r\n      leftArray.sort((a, b) => {\r\n        return usrFrmData[b].properties.Top! - usrFrmData[a].properties.Top!\r\n      })\r\n      rightArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Top! - usrFrmData[b].properties.Top!\r\n      })\r\n    }\r\n    const groupIndex: number = divstyle.findIndex(\r\n      (val) => val.groupName === ctrlSel[0]\r\n    )\r\n    const isGroup = ctrlSel[0].startsWith('group')\r\n    const ctrlProp = !isGroup && usrFrmData[ctrlSel[0]].properties\r\n    const newObject = {\r\n      Left:\r\n        isGroup && groupIndex !== -1\r\n          ? parseInt(divstyle[groupIndex].left!)\r\n          : ctrlProp\r\n            ? ctrlProp.Left!\r\n            : 0,\r\n      Top:\r\n        isGroup && groupIndex !== -1\r\n          ? parseInt(divstyle[groupIndex].top!)\r\n          : ctrlProp\r\n            ? ctrlProp.Top!\r\n            : 0,\r\n      Width:\r\n        isGroup && groupIndex !== -1\r\n          ? parseInt(divstyle[groupIndex].width!)\r\n          : ctrlProp\r\n            ? ctrlProp.Width!\r\n            : 0,\r\n      Height:\r\n        isGroup && groupIndex !== -1\r\n          ? parseInt(divstyle[groupIndex].height!)\r\n          : ctrlProp\r\n            ? ctrlProp.Height!\r\n            : 0\r\n    }\r\n    let incDecValue = 0\r\n    let propValue = 0\r\n    for (let index = 1; index < leftArray.length; index++) {\r\n      const ctrlProp = usrFrmData[leftArray[index]].properties\r\n      let prevIndex = -1\r\n      let controlPropIndex = -1\r\n      if (type === 'Left') {\r\n        if (ctrlProp.GroupID === '') {\r\n          propValue = propValue + value\r\n          incDecValue = ctrlProp.Left! - propValue\r\n          this.updateControlProperty(type, this.convertToGridSize(incDecValue), leftArray[index])\r\n        } else {\r\n          if (ctrlProp.GroupID !== '') {\r\n            controlPropIndex = divstyle.findIndex((val) => val.groupName === ctrlProp.GroupID)\r\n            let incDecValue = 0\r\n            propValue = propValue + value\r\n            incDecValue = parseInt(divstyle[controlPropIndex].left!) - propValue\r\n            EventBus.$emit(\r\n              'updasteGroupSize',\r\n              type,\r\n              this.convertToGridSize(incDecValue),\r\n              controlPropIndex\r\n            )\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        if (ctrlProp.GroupID === '') {\r\n          propValue = propValue + value\r\n          incDecValue = ctrlProp.Top! - propValue\r\n          this.updateControlProperty(type, this.convertToGridSize(incDecValue), leftArray[index])\r\n        } else {\r\n          if (ctrlProp.GroupID !== '') {\r\n            controlPropIndex = divstyle.findIndex((val) => val.groupName === ctrlProp.GroupID)\r\n            let incDecValue = 0\r\n            propValue = propValue + value\r\n            incDecValue = parseInt(divstyle[controlPropIndex].top!) - propValue\r\n            EventBus.$emit(\r\n              'updasteGroupSize',\r\n              type,\r\n              this.convertToGridSize(incDecValue),\r\n              controlPropIndex\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    propValue = 0\r\n    for (let index = 1; index < rightArray.length; index++) {\r\n      const ctrlProp = usrFrmData[rightArray[index]].properties\r\n      let prevIndex = -1\r\n      let controlPropIndex = -1\r\n      if (type === 'Left') {\r\n        if (ctrlProp.GroupID === '') {\r\n          propValue = propValue + value\r\n          incDecValue = ctrlProp.Left! + propValue\r\n          this.updateControlProperty(type, this.convertToGridSize(incDecValue), rightArray[index])\r\n        } else {\r\n          if (ctrlProp.GroupID !== '') {\r\n            controlPropIndex = divstyle.findIndex((val) => val.groupName === ctrlProp.GroupID)\r\n            propValue = propValue + value\r\n            incDecValue = parseInt(divstyle[controlPropIndex].left!) + propValue\r\n            EventBus.$emit(\r\n              'updasteGroupSize',\r\n              type,\r\n              this.convertToGridSize(incDecValue),\r\n              controlPropIndex\r\n            )\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        if (ctrlProp.GroupID === '') {\r\n          let incDecValue = 0\r\n          propValue = propValue + value\r\n          incDecValue = ctrlProp.Top! + propValue\r\n          this.updateControlProperty(type, this.convertToGridSize(incDecValue), rightArray[index])\r\n        } else {\r\n          if (ctrlProp.GroupID !== '') {\r\n            controlPropIndex = divstyle.findIndex((val) => val.groupName === ctrlProp.GroupID)\r\n            let incDecValue = 0\r\n            propValue = propValue + value\r\n            incDecValue = parseInt(divstyle[controlPropIndex].top!) + propValue\r\n            EventBus.$emit(\r\n              'updasteGroupSize',\r\n              type,\r\n              this.convertToGridSize(incDecValue),\r\n              controlPropIndex\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getGroupControl (groupName: string) {\r\n    const ctrlContainer = this.selectedControls[this.userFormId].container[0]\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const controls = []\r\n    for (const control of usrFrmData[ctrlContainer].controls) {\r\n      if (usrFrmData[control].properties.GroupID === groupName) {\r\n        controls.push(control)\r\n      }\r\n    }\r\n    return controls\r\n  }\r\n  removeSpace (type: keyof controlProperties) {\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    const ctrlContainer = this.selectedControls[this.userFormId].container[0]\r\n    const controls = usrFrmData[ctrlContainer].controls\r\n    let divstyle: Array<IGroupStyle> = []\r\n    let getGroupIndex = -1\r\n    if (ctrlSel[0].startsWith('group')) {\r\n      EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n        divstyle = divstayleArray\r\n      })\r\n      getGroupIndex = divstyle.findIndex((val) => val.groupName === ctrlSel[0])\r\n    }\r\n    let propValue = 0\r\n    const leftArray: string[] = []\r\n    const rightArray: string[] = []\r\n    for (let index = 1; index < ctrlSel.length; index++) {\r\n      const selLeft = ctrlSel[0].startsWith('group')\r\n        ? parseInt(divstyle[getGroupIndex].left!)\r\n        : usrFrmData[ctrlSel[0]].properties.Left\r\n      const selTop = ctrlSel[0].startsWith('group')\r\n        ? parseInt(divstyle[getGroupIndex].top!)\r\n        : usrFrmData[ctrlSel[0]].properties.Top\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const ctrlProp = usrFrmData[ctrlSel[index]].properties\r\n        if (type === 'Left') {\r\n          if (ctrlProp.Left! <= selLeft!) {\r\n            leftArray.push(ctrlSel[index])\r\n          } else {\r\n            rightArray.push(ctrlSel[index])\r\n          }\r\n        } else if (type === 'Top') {\r\n          if (ctrlProp.Top! <= selTop!) {\r\n            leftArray.push(ctrlSel[index])\r\n          } else {\r\n            rightArray.push(ctrlSel[index])\r\n          }\r\n        }\r\n      } else {\r\n        EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n          divstyle = divstayleArray\r\n        })\r\n        const getIndex = divstyle.findIndex(\r\n          (val) => val.groupName === ctrlSel[index]\r\n        )\r\n        const groupLeft = parseInt(divstyle[getIndex].left!)\r\n        const groupTop = parseInt(divstyle[getIndex].top!)\r\n        const groupConrol = this.getGroupControl(ctrlSel[index])\r\n        if (type === 'Left') {\r\n          if (groupLeft <= selLeft!) {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Left!) === groupLeft) {\r\n                leftArray.push(ctrl)\r\n              }\r\n            }\r\n          } else {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Left!) === groupLeft) {\r\n                rightArray.push(ctrl)\r\n              }\r\n            }\r\n          }\r\n        } else if (type === 'Top') {\r\n          if (groupTop <= selTop!) {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Top!) === groupTop) {\r\n                leftArray.push(ctrl)\r\n              }\r\n            }\r\n          } else {\r\n            for (let ctrl of groupConrol) {\r\n              const prop = this.userformData[this.userFormId][ctrl].properties\r\n              if (Math.floor(prop.Top!) === groupTop) {\r\n                rightArray.push(ctrl)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (ctrlSel[0].startsWith('group')) {\r\n      const getIndex = divstyle.findIndex(\r\n        (val) => val.groupName === ctrlSel[0]\r\n      )\r\n      const groupLeft = parseInt(divstyle[getIndex].left!)\r\n      const groupTop = parseInt(divstyle[getIndex].top!)\r\n      const groupConrol = this.getGroupControl(ctrlSel[0])\r\n      if (type === 'Left') {\r\n        for (let ctrl of groupConrol) {\r\n          const prop = this.userformData[this.userFormId][ctrl].properties\r\n          if (Math.floor(prop.Left!) === groupLeft) {\r\n            leftArray.push(ctrl)\r\n            rightArray.push(ctrl)\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        for (let ctrl of groupConrol) {\r\n          const prop = this.userformData[this.userFormId][ctrl].properties\r\n          if (Math.floor(prop.Top!) === groupTop) {\r\n            leftArray.push(ctrl)\r\n            rightArray.push(ctrl)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      leftArray.unshift(ctrlSel[0])\r\n      rightArray.push(ctrlSel[0])\r\n    }\r\n    if (type === 'Left') {\r\n      leftArray.sort((a, b) => {\r\n        return usrFrmData[b].properties.Left! - usrFrmData[a].properties.Left!\r\n      })\r\n      rightArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Left! - usrFrmData[b].properties.Left!\r\n      })\r\n    } else if (type === 'Top') {\r\n      leftArray.sort((a, b) => {\r\n        return usrFrmData[b].properties.Top! - usrFrmData[a].properties.Top!\r\n      })\r\n      rightArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Top! - usrFrmData[b].properties.Top!\r\n      })\r\n    }\r\n    for (let index = 1; index < leftArray.length; index++) {\r\n      const prevCtrlProp = usrFrmData[leftArray[index - 1]].properties\r\n      const ctrlProp = usrFrmData[leftArray[index]].properties\r\n      let prevIndex = -1\r\n      let controlPropIndex = -1\r\n      if (type === 'Left') {\r\n        if (prevCtrlProp.GroupID === '' && ctrlProp.GroupID === '') {\r\n          propValue = prevCtrlProp.Left! - ctrlProp.Width!\r\n          this.updateControlProperty(type, propValue, leftArray[index])\r\n        } else {\r\n          if (prevCtrlProp.GroupID !== '') {\r\n            if (ctrlProp.GroupID === '') {\r\n              prevIndex = divstyle.findIndex(\r\n                (val) => val.groupName === prevCtrlProp.GroupID\r\n              )\r\n              propValue = parseInt(divstyle[prevIndex].left!) - ctrlProp.Width!\r\n              this.updateControlProperty(type, propValue, leftArray[index])\r\n            }\r\n          }\r\n          if (ctrlProp.GroupID !== '') {\r\n            controlPropIndex = divstyle.findIndex(\r\n              (val) => val.groupName === ctrlProp.GroupID\r\n            )\r\n            if (prevCtrlProp.GroupID === '') {\r\n              propValue =\r\n                prevCtrlProp.Left! -\r\n                parseInt(divstyle[controlPropIndex].width!)\r\n            } else {\r\n              prevIndex = divstyle.findIndex(\r\n                (val) => val.groupName === prevCtrlProp.GroupID\r\n              )\r\n              propValue =\r\n                parseInt(divstyle[prevIndex].left!) -\r\n                parseInt(divstyle[controlPropIndex].width!)\r\n            }\r\n            EventBus.$emit(\r\n              'updasteGroupSize',\r\n              type,\r\n              propValue,\r\n              controlPropIndex\r\n            )\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        if (prevCtrlProp.GroupID === '' && ctrlProp.GroupID === '') {\r\n          propValue = prevCtrlProp.Top! - ctrlProp.Height!\r\n          this.updateControlProperty(type, propValue, leftArray[index])\r\n        } else {\r\n          if (prevCtrlProp.GroupID !== '') {\r\n            if (ctrlProp.GroupID === '') {\r\n              prevIndex = divstyle.findIndex(\r\n                (val) => val.groupName === prevCtrlProp.GroupID\r\n              )\r\n              propValue = parseInt(divstyle[prevIndex].top!) - ctrlProp.Height!\r\n              this.updateControlProperty(type, propValue, leftArray[index])\r\n            }\r\n          }\r\n          if (ctrlProp.GroupID !== '') {\r\n            controlPropIndex = divstyle.findIndex(\r\n              (val) => val.groupName === ctrlProp.GroupID\r\n            )\r\n            if (prevCtrlProp.GroupID === '') {\r\n              propValue =\r\n                prevCtrlProp.Top! -\r\n                parseInt(divstyle[controlPropIndex].height!)\r\n            } else {\r\n              prevIndex = divstyle.findIndex(\r\n                (val) => val.groupName === prevCtrlProp.GroupID\r\n              )\r\n              propValue =\r\n                parseInt(divstyle[prevIndex].top!) -\r\n                parseInt(divstyle[controlPropIndex].height!)\r\n            }\r\n            EventBus.$emit(\r\n              'updasteGroupSize',\r\n              type,\r\n              propValue,\r\n              controlPropIndex\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let index = 1; index < rightArray.length; index++) {\r\n      const prevCtrlProp = usrFrmData[rightArray[index - 1]].properties\r\n      const ctrlProp = usrFrmData[rightArray[index]].properties\r\n      let prevIndex = -1\r\n      const controlPropIndex = -1\r\n      if (type === 'Left') {\r\n        if (prevCtrlProp.GroupID === '' && ctrlProp.GroupID === '') {\r\n          propValue = prevCtrlProp.Left! + prevCtrlProp.Width!\r\n          this.updateControlProperty(type, propValue, rightArray[index])\r\n        } else {\r\n          if (prevCtrlProp.GroupID !== '') {\r\n            prevIndex = divstyle.findIndex(\r\n              (val) => val.groupName === prevCtrlProp.GroupID\r\n            )\r\n            propValue =\r\n              parseInt(divstyle[prevIndex].left!) +\r\n              parseInt(divstyle[prevIndex].width!)\r\n          } else {\r\n            propValue = prevCtrlProp.Left! + prevCtrlProp.Width!\r\n          }\r\n          if (ctrlProp.GroupID !== '') {\r\n            const getIndex = divstyle.findIndex(\r\n              (val) => val.groupName === ctrlProp.GroupID\r\n            )\r\n            EventBus.$emit('updasteGroupSize', type, propValue, getIndex)\r\n          } else {\r\n            this.updateControlProperty(type, propValue, rightArray[index])\r\n          }\r\n        }\r\n      } else if (type === 'Top') {\r\n        if (prevCtrlProp.GroupID === '' && ctrlProp.GroupID === '') {\r\n          propValue = prevCtrlProp.Top! + prevCtrlProp.Height!\r\n          this.updateControlProperty(type, propValue, rightArray[index])\r\n        } else {\r\n          if (prevCtrlProp.GroupID !== '') {\r\n            prevIndex = divstyle.findIndex(\r\n              (val) => val.groupName === prevCtrlProp.GroupID\r\n            )\r\n            propValue =\r\n              parseInt(divstyle[prevIndex].top!) +\r\n              parseInt(divstyle[prevIndex].height!)\r\n          } else {\r\n            propValue = prevCtrlProp.Top! + prevCtrlProp.Height!\r\n          }\r\n          if (ctrlProp.GroupID !== '') {\r\n            const getIndex = divstyle.findIndex(\r\n              (val) => val.groupName === ctrlProp.GroupID\r\n            )\r\n            EventBus.$emit('updasteGroupSize', type, propValue, getIndex)\r\n          } else {\r\n            this.updateControlProperty(type, propValue, rightArray[index])\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updatePropVal (propName: string, propValue: number) {\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    for (let index = 0; index < ctrlSel.length; index++) {\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const curProp = usrFrmData[ctrlSel[index]].properties\r\n        if (propName === 'selCenter') {\r\n          const curCenter = curProp.Width! / 2\r\n          const value = propValue - curCenter\r\n          this.updateControlProperty('Left', value, ctrlSel[index])\r\n        }\r\n        if (propName === 'selMiddle') {\r\n          const curMiddle = curProp.Height! / 2\r\n          const value = propValue - curMiddle\r\n          this.updateControlProperty('Top', value, ctrlSel[index])\r\n        }\r\n      } else {\r\n        let divstyle: Array<IGroupStyle> = []\r\n        EventBus.$emit('getGroupSize', (divstayleArray: Array<IGroupStyle>) => {\r\n          divstyle = divstayleArray\r\n        })\r\n        const groupIndex = divstyle.findIndex(\r\n          (val) => val.groupName === ctrlSel[index]\r\n        )\r\n        const curProp = divstyle[groupIndex]\r\n        const left = parseInt(curProp.left!)\r\n        const top = parseInt(curProp.top!)\r\n        const width = parseInt(curProp.width!)\r\n        const height = parseInt(curProp.height!)\r\n        let value = -1\r\n        if (propName === 'selCenter') {\r\n          value = propValue - width! / 2\r\n          EventBus.$emit('updasteGroupSize', 'Left', value, groupIndex)\r\n        }\r\n        if (propName === 'selMiddle') {\r\n          value = propValue - height! / 2\r\n          EventBus.$emit('updasteGroupSize', 'Top', value, groupIndex)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  centreInForm (value: string) {\r\n    let divstyle: Array<IGroupStyle> = []\r\n    const mainContainer = this.selectedControls[this.userFormId].container[0]\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlProp = usrFrmData[mainContainer].properties\r\n    if (value === 'horizontal') {\r\n      const selCenter = ctrlProp.Left! + ctrlProp.Width! / 2\r\n      this.updatePropVal('selCenter', selCenter)\r\n    } else if (value === 'vertical') {\r\n      const selMiddle = ctrlProp.Top! + ctrlProp.Height! / 2\r\n      this.updatePropVal('selMiddle', selMiddle)\r\n    }\r\n  }\r\n  arrangeButton (type: string) {\r\n    const usrFrmData = this.userformData[this.userFormId]\r\n    const ctrlSel = this.selectedControls[this.userFormId].selected\r\n    let ctrlContainer = this.selectedControls[this.userFormId].container[0]\r\n    ctrlContainer =\r\n      usrFrmData[ctrlContainer].type === 'Page'\r\n        ? this.selectedControls[this.userFormId].container[1]\r\n        : ctrlContainer\r\n    const buttonArray = []\r\n    for (let index = 0; index < ctrlSel.length; index++) {\r\n      if (!ctrlSel[index].startsWith('group')) {\r\n        const controlprop = usrFrmData[ctrlSel[index]]\r\n        if (controlprop.type === 'CommandButton') {\r\n          buttonArray.push(ctrlSel[index])\r\n        }\r\n      }\r\n    }\r\n    if (type === 'bottom') {\r\n      buttonArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Left! - usrFrmData[b].properties.Left!\r\n      })\r\n    } else if (type === 'right') {\r\n      buttonArray.sort((a, b) => {\r\n        return usrFrmData[a].properties.Top! - usrFrmData[b].properties.Top!\r\n      })\r\n    }\r\n    const containerProp = usrFrmData[ctrlContainer].properties\r\n    let value: number = 0\r\n    const containerHeight = (usrFrmData[ctrlContainer].type === 'Userform')\r\n      ? 47 : usrFrmData[ctrlContainer].type === 'Frame' ? 27\r\n        : usrFrmData[ctrlContainer].type === 'MultiPage' ? 40 : 0\r\n    const containerWidth = 20\r\n    if (type === 'bottom') {\r\n      value = (containerProp.Height! - containerHeight) - usrFrmData[buttonArray[0]].properties.Height!\r\n      this.updateControlProperty('Top', value, buttonArray[0])\r\n      this.updateControlProperty('Left', 30, buttonArray[0])\r\n    } else if (type === 'right') {\r\n      value = (containerProp.Width! - containerWidth) - usrFrmData[buttonArray[0]].properties.Width!\r\n      this.updateControlProperty('Left', value, buttonArray[0])\r\n      this.updateControlProperty('Top', 20, buttonArray[0])\r\n    }\r\n\r\n    for (let index = 1; index < buttonArray.length; index++) {\r\n      const prevCtrlProp = usrFrmData[buttonArray[index - 1]].properties\r\n      const ctrlProp = usrFrmData[buttonArray[index]].properties\r\n      if (type === 'bottom') {\r\n        let propValue = prevCtrlProp.Left! + prevCtrlProp.Width! + 10\r\n        value =\r\n          (containerProp.Height! - containerHeight) -\r\n          usrFrmData[buttonArray[index]].properties.Height!\r\n        if (propValue + ctrlProp.Width! <= containerProp.Width! - containerWidth) {\r\n          this.updateControlProperty('Left', propValue, buttonArray[index])\r\n          this.updateControlProperty('Top', value, buttonArray[index])\r\n        } else {\r\n          propValue = containerProp.Width! - containerWidth - ctrlProp.Width!\r\n          this.updateControlProperty('Left', propValue, buttonArray[index])\r\n          this.updateControlProperty('Top', value, buttonArray[index])\r\n        }\r\n      } else if (type === 'right') {\r\n        let propValue = prevCtrlProp.Top! + prevCtrlProp.Height! + 10\r\n        value =\r\n          (containerProp.Width! - containerWidth) -\r\n          usrFrmData[buttonArray[index]].properties.Width!\r\n        if (propValue + ctrlProp.Height! <= containerProp.Height! - (containerHeight)) {\r\n          this.updateControlProperty('Top', propValue, buttonArray[index])\r\n          this.updateControlProperty('Left', value, buttonArray[index])\r\n        } else {\r\n          propValue = containerProp.Height! - containerHeight - ctrlProp.Height!\r\n          this.updateControlProperty('Top', propValue, buttonArray[index])\r\n          this.updateControlProperty('Left', value, buttonArray[index])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateControlProperty (\r\n    propertyName: keyof controlProperties,\r\n    propertyValue: any,\r\n    controlId: string\r\n  ) {\r\n    this.updateControl({\r\n      userFormId: this.userFormId,\r\n      controlId: controlId,\r\n      propertyName: propertyName,\r\n      value: propertyValue\r\n    })\r\n  }\r\n  getdisableStyle (id: string) {\r\n    let disabled: boolean = true\r\n    const selected = this.selectedControls[this.userFormId].selected\r\n    const selContainer = this.selectedControls[this.userFormId].container\r\n    const userData = this.userformData[this.userFormId]\r\n    if (id === 'unGroup') {\r\n      let groupId: boolean = false\r\n      const selectedGroupArray = selected.filter(\r\n        (val: string) => val.startsWith('group') && val\r\n      )\r\n      if (selectedGroupArray.length === 1 && selected.length === 1) {\r\n        disabled = false\r\n      }\r\n    }\r\n    if (id === 'group') {\r\n      disabled = selected.length <= 1\r\n    }\r\n    if (id === 'sizeToGrid' || id === 'centreInForm') {\r\n      disabled = !(selected.length >= 1 && selected[0] !== selContainer[0])\r\n    }\r\n    if (id === 'sizeToFit') {\r\n      const selSelected = []\r\n      for (const control of this.selectedControls[this.userFormId].selected) {\r\n        if (!control.startsWith('group')) {\r\n          const type = this.userformData[this.userFormId][control].type\r\n          if (type !== 'MultiPage' && type !== 'Frame' && type !== 'ListBox' && type !== 'Page' && type !== 'TabStrip' && type !== 'Userform') {\r\n            selSelected.push(control)\r\n          }\r\n        }\r\n      }\r\n      disabled = !(selSelected.length >= 1)\r\n    }\r\n    if (id === 'order') {\r\n      disabled = !(selected.length >= 1 && userData[selContainer[0]].controls.length >= 2)\r\n    }\r\n    if (id === 'makeEqual') {\r\n      disabled = !(selected.length >= 3)\r\n    }\r\n    if (id === 'incDecspacing' || id === 'removeSpace') {\r\n      disabled = !(selected.length >= 2)\r\n    }\r\n    if (id === 'arrangeButton') {\r\n      const buttonArray = []\r\n      for (let index = 0; index < selected.length; index++) {\r\n        if (!selected[index].startsWith('group')) {\r\n          const controlprop = userData[selected[index]]\r\n          if (controlprop.type === 'CommandButton') {\r\n            buttonArray.push(selected[index])\r\n          }\r\n        }\r\n      }\r\n      disabled = !(buttonArray.length >= 1)\r\n    }\r\n    return disabled\r\n  }\r\n  bringForward () {\r\n    const userData = this.userformData[this.userFormId]\r\n    const highProrControl = []\r\n    const lowProrControl = []\r\n    const container = this.getContainerList(this.getSelectedControlsDatas![0])[0]\r\n    const containerControls = this.userformData[this.userFormId][container].controls\r\n    for (const index in containerControls) {\r\n      const cntrlData = this.userformData[this.userFormId][containerControls[index]]\r\n      if (cntrlData.type === 'MultiPage' || cntrlData.type === 'Frame' || cntrlData.type === 'ListBox') {\r\n        highProrControl.push(containerControls[index])\r\n      } else {\r\n        lowProrControl.push(containerControls[index])\r\n      }\r\n    }\r\n    let nextSelctedSeries: string[] = []\r\n    let nextHighControlSeries: string[] = []\r\n    const getSelControl = [...this.getSelectedControlsDatas!]\r\n    getSelControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    for (const selControl of getSelControl!) {\r\n      const type = userData[selControl].type\r\n      const tempZIndex = userData[selControl].extraDatas!.zIndex!\r\n      const controlIndex = Object.keys(userData).findIndex((val: string, index: number) => {\r\n        return 'zIndex' in userData[val].extraDatas! && (userData[val].extraDatas!.zIndex === tempZIndex + 1)\r\n      })\r\n      const nextSelectedControl = controlIndex !== -1 ? Object.keys(userData)[controlIndex] : ''\r\n      const nextControlType = userData[nextSelectedControl].type\r\n      if (nextSelectedControl !== '' && !highProrControl.includes(nextSelectedControl)) {\r\n        if (getSelControl!.includes(nextSelectedControl)) {\r\n          if (!nextSelctedSeries.includes(selControl)) {\r\n            nextSelctedSeries.push(selControl)\r\n          }\r\n          if (!nextSelctedSeries.includes(nextSelectedControl)) {\r\n            nextSelctedSeries.push(nextSelectedControl)\r\n          }\r\n        } else {\r\n          if (Object.keys(nextSelctedSeries).length !== 0) {\r\n            const tempExchageIndex = userData[nextSelctedSeries[0]].extraDatas!.zIndex!\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length /* && swapTabIndex > 0 */) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(userData[container].controls[index], 'zIndex', tempExchageIndex)\r\n              this.updateExtraDatas(nextSelctedSeries[0], 'zIndex', swapTabIndex - (nextSelctedSeries!.length - 1))\r\n            }\r\n            for (let j = 1; j < nextSelctedSeries.length; j++) {\r\n              const updateIndex = userData[nextSelctedSeries[j]].extraDatas!.zIndex! + 1\r\n              this.updateExtraDatas(nextSelctedSeries[j], 'zIndex', updateIndex)\r\n            }\r\n            nextSelctedSeries = []\r\n          } else {\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length /* && swapTabIndex > 0 */) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(selControl, 'zIndex', swapTabIndex)\r\n              this.updateExtraDatas(nextSelectedControl, 'zIndex', tempZIndex)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (getSelControl!.includes(nextSelectedControl) && (type === 'Frame' || type === 'MultiPage' || type === 'ListBox')) {\r\n          if (!nextHighControlSeries.includes(selControl)) {\r\n            nextHighControlSeries.push(selControl)\r\n          }\r\n          if (!nextHighControlSeries.includes(nextSelectedControl)) {\r\n            nextHighControlSeries.push(nextSelectedControl)\r\n          }\r\n        } else if (type === 'Frame' || type === 'MultiPage' || type === 'ListBox') {\r\n          if (Object.keys(nextHighControlSeries).length !== 0) {\r\n            const tempExchageIndex = userData[nextHighControlSeries[0]].extraDatas!.zIndex!\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(userData[container].controls[index], 'zIndex', tempExchageIndex)\r\n              this.updateExtraDatas(nextHighControlSeries[0], 'zIndex', swapTabIndex - (nextHighControlSeries!.length - 1))\r\n            }\r\n            for (let j = 1; j < nextHighControlSeries.length; j++) {\r\n              const updateIndex = userData[nextHighControlSeries[j]].extraDatas!.zIndex! + 1\r\n              this.updateExtraDatas(nextHighControlSeries[j], 'zIndex', updateIndex)\r\n            }\r\n            nextHighControlSeries = []\r\n          } else {\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length /* && swapTabIndex > 0 */) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(selControl, 'zIndex', swapTabIndex)\r\n              this.updateExtraDatas(nextSelectedControl, 'zIndex', tempZIndex)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  sendBackward () {\r\n    const userData = this.userformData[this.userFormId]\r\n    const highProrControl = []\r\n    const lowProrControl = []\r\n    const container = this.getContainerList(this.getSelectedControlsDatas![0])[0]\r\n    const containerControls = this.userformData[this.userFormId][container].controls\r\n    for (const index in containerControls) {\r\n      const cntrlData = this.userformData[this.userFormId][containerControls[index]]\r\n      if (cntrlData.type === 'MultiPage' || cntrlData.type === 'Frame' || cntrlData.type === 'ListBox') {\r\n        highProrControl.push(containerControls[index])\r\n      } else {\r\n        lowProrControl.push(containerControls[index])\r\n      }\r\n    }\r\n    let nextSelctedSeries: string[] = []\r\n    let nextHighControlSeries: string[] = []\r\n    const getSelControl = [...this.getSelectedControlsDatas!]\r\n    getSelControl.sort((a, b) => {\r\n      return userData[a].extraDatas!.zIndex! - userData[b].extraDatas!.zIndex!\r\n    })\r\n    for (const selControl of getSelControl) {\r\n      const type = userData[selControl].type\r\n      const tempZIndex = userData[selControl].extraDatas!.zIndex!\r\n      const controlIndex = Object.keys(userData).findIndex((val: string, index: number) => {\r\n        return 'zIndex' in userData[val].extraDatas! && (userData[val].extraDatas!.zIndex === tempZIndex - 1)\r\n      })\r\n      const nextSelectedControl = controlIndex !== -1 ? Object.keys(userData)[controlIndex] : ''\r\n      const nextControlType = userData[nextSelectedControl].type\r\n      if (nextSelectedControl !== '' && !highProrControl.includes(selControl)) {\r\n        if (getSelControl!.includes(nextSelectedControl)) {\r\n          if (!nextSelctedSeries.includes(selControl)) {\r\n            nextSelctedSeries.push(selControl)\r\n          }\r\n          if (!nextSelctedSeries.includes(nextSelectedControl)) {\r\n            nextSelctedSeries.push(nextSelectedControl)\r\n          }\r\n        } else {\r\n          if (Object.keys(nextSelctedSeries).length !== 0) {\r\n            const tempExchageIndex = userData[nextSelctedSeries[0]].extraDatas!.zIndex!\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length && swapTabIndex > 0) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(userData[container].controls[index], 'zIndex', tempExchageIndex)\r\n              this.updateExtraDatas(nextSelctedSeries[0], 'zIndex', (nextSelctedSeries!.length + 1) - swapTabIndex)\r\n            }\r\n            for (let j = 1; j < nextSelctedSeries.length; j++) {\r\n              const updateIndex = userData[nextSelctedSeries[j]].extraDatas!.zIndex! - 1\r\n              this.updateExtraDatas(nextSelctedSeries[j], 'zIndex', updateIndex)\r\n            }\r\n            nextSelctedSeries = []\r\n          } else {\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length && swapTabIndex > 0) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(selControl, 'zIndex', swapTabIndex)\r\n              this.updateExtraDatas(nextSelectedControl, 'zIndex', tempZIndex)\r\n            }\r\n          }\r\n        }\r\n      } else if (!lowProrControl.includes(nextSelectedControl) && (type === 'Frame' || type === 'MultiPage' || type === 'ListBox')) {\r\n        if (getSelControl!.includes(nextSelectedControl)) {\r\n          if (!nextHighControlSeries.includes(selControl)) {\r\n            nextHighControlSeries.push(selControl)\r\n          }\r\n          if (!nextHighControlSeries.includes(nextSelectedControl)) {\r\n            nextHighControlSeries.push(nextSelectedControl)\r\n          }\r\n        } else {\r\n          if (Object.keys(nextHighControlSeries).length !== 0) {\r\n            const tempExchageIndex = userData[nextHighControlSeries[0]].extraDatas!.zIndex!\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(userData[container].controls[index], 'zIndex', tempExchageIndex)\r\n              this.updateExtraDatas(nextHighControlSeries[0], 'zIndex', (nextHighControlSeries!.length + 1) - swapTabIndex)\r\n            }\r\n            for (let j = 1; j < nextHighControlSeries.length; j++) {\r\n              const updateIndex = userData[nextHighControlSeries[j]].extraDatas!.zIndex! - 1\r\n              this.updateExtraDatas(nextHighControlSeries[j], 'zIndex', updateIndex)\r\n            }\r\n            nextHighControlSeries = []\r\n          } else {\r\n            const swapTabIndex = userData[nextSelectedControl].extraDatas!.zIndex!\r\n            if (swapTabIndex <= userData[container].controls.length && swapTabIndex > 0) {\r\n              const index = userData[container].controls.findIndex(\r\n                (val) => userData[val].extraDatas!.zIndex === swapTabIndex\r\n              )\r\n              this.updateExtraDatas(selControl, 'zIndex', swapTabIndex)\r\n              this.updateExtraDatas(nextSelectedControl, 'zIndex', tempZIndex)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n  width: 100%;\r\n  box-shadow: box-sizing;\r\n}\r\n.tablink {\r\n  background-color: rgba(240, 234, 234, 0.877);\r\n  color: rgb(17, 17, 17);\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  border: none;\r\n  float: left;\r\n}\r\n.sub-menu-li {\r\n  display: grid;\r\n  grid-template-columns: 25px 1fr;\r\n}\r\n.thirdrow {\r\n  margin-top: 5px;\r\n}\r\n.tablink:hover {\r\n  background-color: #4dbce0;\r\n}\r\n\r\n.firstrow {\r\n  font-size: 15px;\r\n}\r\n.secondrow {\r\n  border: 1px transparent;\r\n  padding: 5px;\r\n  background-color: rgba(240, 234, 234, 0.877);\r\n  height: 20px;\r\n  display: flex;\r\n}\r\n.buttons {\r\n  float: right;\r\n  line-height: normal;\r\n}\r\n.min .max .close1 {\r\n  width: 40px;\r\n}\r\n.close1:hover {\r\n  background-color: red;\r\n}\r\n.fa {\r\n  margin-left: 3px;\r\n  margin-right: 3px;\r\n}\r\n.padding {\r\n  padding-top: 3px;\r\n}\r\n.material-icons {\r\n  size: 15px;\r\n}\r\n.material-float {\r\n  float: left;\r\n}\r\ni:hover {\r\n  background-color: #4dbce0;\r\n  cursor: default;\r\n}\r\n\r\n.ui-titlebar {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 32px;\r\n  background: #0072c6;\r\n  user-select: none;\r\n  cursor: default;\r\n}\r\n.ui-titleicon {\r\n  flex-grow: 1;\r\n  max-width: 32px;\r\n  max-height: 32px;\r\n}\r\n.ui-titletext {\r\n  flex-grow: 2;\r\n  max-height: 32px;\r\n  width: auto;\r\n  font: 12px/32px \"Segoe UI\", Arial, sans-serif;\r\n  color: #fff;\r\n  text-indent: 10px;\r\n}\r\n.ui-titlecontrols {\r\n  max-width: 144px;\r\n  max-height: 32px;\r\n  flex-grow: 1;\r\n}\r\n.ui-btn {\r\n  margin: 0;\r\n  width: 48px;\r\n  height: 32px;\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n}\r\n.ui-btn:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n.ui-btn.close:hover {\r\n  background: #e81123;\r\n}\r\nhr {\r\n  margin: 0px;\r\n}\r\n.ui-btn svg path,\r\n.ui-btn svg rect,\r\n.ui-btn svg polygon {\r\n  fill: #fff;\r\n}\r\n.ui-btn svg {\r\n  width: 10px;\r\n  height: 10px;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n}\r\n\r\n.dropdown-content a {\r\n  color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\n\r\n.dropdown-content a:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n.tablink:hover .dropdown-content {\r\n  display: block;\r\n}\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.commandbutton-element {\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  min-width: 50px;\r\n  max-width: 112px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  min-height: 20px;\r\n  padding: 0px 5px 0px 5px;\r\n  overflow: hidden;\r\n}\r\n.dialog-action-button {\r\n  background-color: #f2eded;\r\n  width: 79px;\r\n  height: 35px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n.btn-style {\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  min-width: 50px;\r\n  max-width: 112px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  min-height: 20px;\r\n  padding: 0px 5px 0px 5px;\r\n  overflow: hidden;\r\n  top: -3px;\r\n  position: relative;\r\n}\r\n:focus {\r\n  outline: none;\r\n}\r\n.menu-bar {\r\n  background: rgba(240, 234, 234);\r\n  line-height: 24px;\r\n  cursor: context-menu;\r\n  margin-left: 3px;\r\n}\r\n\r\n.menu-bar ul {\r\n  display: inline-flex;\r\n  list-style: none;\r\n  margin: 0px;\r\n}\r\n\r\n.menu-bar ul > li {\r\n  list-style: none;\r\n  text-align: center;\r\n  padding: 0px 6px;\r\n  font-size: 12px;\r\n}\r\n\r\n.menu-bar ul li a {\r\n  text-decoration: none;\r\n  margin-left: -15px;\r\n}\r\n.menu-bar ul li a:visited {\r\n  color: black;\r\n}\r\n.menu-bar ul {\r\n  background-color: rgba(240, 234, 234);\r\n  padding: 0px;\r\n}\r\n\r\n.active,\r\n.menu-bar ul li:hover {\r\n  background-color: white;\r\n  z-index: 10;\r\n}\r\n\r\n.sub-menu-1 {\r\n  display: none;\r\n  box-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.menu-bar ul li:hover .sub-menu-1 {\r\n  display: block;\r\n  position: absolute;\r\n}\r\n\r\n.sub-menu-1 ul li {\r\n  text-align: left;\r\n  border: 0.1px solid white;\r\n  display: grid;\r\n  grid-template-columns: 30px 150px;\r\n  word-wrap: none;\r\n}\r\n\r\n.sub-menu-1 ul {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  background-color: white;\r\n  width: 200px;\r\n  padding: 0px;\r\n  margin-left: -6px;\r\n}\r\n\r\n.sub-menu-1 ul li:hover {\r\n  background-color: rgb(155, 215, 255);\r\n  border-color: rgb(0, 153, 255);\r\n}\r\n</style>\r\n"]}]}