{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDScrollBar/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDScrollBar/index.vue","mtime":1612197584000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaW1wb3J0IHsgQ29tcG9uZW50LCBFbWl0LCBNaXhpbnMsIFdhdGNoIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicNCmltcG9ydCBGZENvbnRyb2xWdWUgZnJvbSAnQC9hcGkvYWJzdHJhY3QvRm9ybURlc2lnbmVyL0ZkQ29udHJvbFZ1ZScNCmltcG9ydCBGZFN2Z0ltYWdlIGZyb20gJ0AvRm9ybURlc2lnbmVyL2NvbXBvbmVudHMvYXRvbXMvRkRTVkdJbWFnZS9pbmRleC52dWUnDQppbXBvcnQgeyBjb250cm9sUHJvcGVydGllcyB9IGZyb20gJ0AvRm9ybURlc2lnbmVyL2NvbnRyb2xzLXByb3BlcnRpZXMnDQoNCkBDb21wb25lbnQoew0KICBuYW1lOiAnRkRTY3JvbGxCYXInLA0KICBjb21wb25lbnRzOiB7DQogICAgRmRTdmdJbWFnZQ0KICB9DQp9KQ0KZXhwb3J0IGRlZmF1bHQgY2xhc3MgRkRTY3JvbGxCYXIgZXh0ZW5kcyBNaXhpbnMoRmRDb250cm9sVnVlKSB7DQogICRlbDogSFRNTERpdkVsZW1lbnQNCiAgaXNJbnZlcnQ6IGJvb2xlYW4gPSBmYWxzZQ0KICBpbnRlcnZhbFZhcmlhYmxlOiBudW1iZXIgPSAwDQogIHVwZGF0ZVZhbHVlUHJvcGVydHkgKGU6IEV2ZW50KSB7DQogICAgaWYgKGUudGFyZ2V0IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkgew0KICAgICAgY29uc3QgdGFyZ2V0VmFsdWUgPSBwYXJzZUludChlLnRhcmdldCEudmFsdWUpDQogICAgICB0aGlzLnVwZGF0ZURhdGFNb2RlbCh7IHByb3BlcnR5TmFtZTogJ1ZhbHVlJywgdmFsdWU6IHRhcmdldFZhbHVlIH0pDQogICAgfQ0KICB9DQoNCiAgZ2V0IGNzc1ZhcnMgKCkgew0KICAgIGNvbnN0IGNvbnRyb2xQcm9wID0gdGhpcy5wcm9wZXJ0aWVzDQogICAgcmV0dXJuIHsNCiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLA0KICAgICAgbGVmdDogJzBweCcsDQogICAgICB0b3A6ICh0aGlzLnByb3BlcnRpZXMuTWluISA+IHRoaXMucHJvcGVydGllcy5NYXghKSA/IHRoaXMuY2hlY2tPdGhlck9yaWVudGF0aW9ucygpID8gYCR7Y29udHJvbFByb3AuSGVpZ2h0IX1weGAgOiAnMHB4JyA6ICcwcHgnLA0KICAgICAgZ3JpZFRlbXBsYXRlQ29sdW1uczogdGhpcy5jaGVja090aGVyT3JpZW50YXRpb25zKCkgPyAnMjBweCAnICsgYCR7Y29udHJvbFByb3AuSGVpZ2h0ISAtIDQwfXB4YCArICcgMjBweCcgOiAnJywNCiAgICAgICctLWJnLWNvbG9yJzogdGhpcy5wcm9wZXJ0aWVzLkJhY2tDb2xvciwNCiAgICAgICctLWhlaWdodCc6IHRoaXMuY2hlY2tPdGhlck9yaWVudGF0aW9ucygpID8gYCR7dGhpcy5wcm9wZXJ0aWVzLldpZHRoIX1weGAgOiBgJHt0aGlzLnByb3BlcnRpZXMuSGVpZ2h0IX1weGAsDQogICAgICB0cmFuc2Zvcm06ICh0aGlzLnByb3BlcnRpZXMuTWluISA+IHRoaXMucHJvcGVydGllcy5NYXghKSA/IHRoaXMuc2Nyb2xsUmVBbGlnbigpIDogdGhpcy5jaGVja090aGVyT3JpZW50YXRpb25zKCkgPyAncm90YXRlKDkwZGVnKScgOiAnJywNCiAgICAgIHRyYW5zZm9ybU9yaWdpbjogKHRoaXMucHJvcGVydGllcy5NaW4hID4gdGhpcy5wcm9wZXJ0aWVzLk1heCEpID8gdGhpcy5jaGVja090aGVyT3JpZW50YXRpb25zKCkgPyAnMCUgMCUnIDogJycgOiAnJywNCiAgICAgICctLWludmVydFZhbHVlJzogdGhpcy5pc0VkaXRNb2RlID8gdGhpcy5pc0ludmVydCA/ICcxJyA6ICcwJyA6ICcwJw0KICAgIH0NCiAgfQ0KDQogIEBXYXRjaCgnaXNFZGl0TW9kZScpDQogIGVkaXRNb2RlVmFsaWRhdGUgKCkgew0KICAgIGlmICh0aGlzLmlzRWRpdE1vZGUpIHsNCiAgICAgIHRoaXMuaW50ZXJ2YWxWYXJpYWJsZSA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgdGhpcy5pc0ludmVydCA9ICF0aGlzLmlzSW52ZXJ0DQogICAgICB9LCAxMDAwKQ0KICAgIH0gZWxzZSB7DQogICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxWYXJpYWJsZSkNCiAgICB9DQogIH0NCiAgc2Nyb2xsUmVBbGlnbiAoKSB7DQogICAgaWYgKHRoaXMuY2hlY2tPdGhlck9yaWVudGF0aW9ucygpKSB7DQogICAgICByZXR1cm4gJ3JvdGF0ZSgtOTBkZWcpJw0KICAgIH0NCiAgICByZXR1cm4gJ1NjYWxlWCgtMSknDQogIH0NCiAgZ2V0IGdldERpc2FibGVWYWx1ZSAoKSB7DQogICAgaWYgKHRoaXMuaXNSdW5Nb2RlIHx8IHRoaXMuaXNFZGl0TW9kZSkgew0KICAgICAgcmV0dXJuIHRoaXMucHJvcGVydGllcy5FbmFibGVkID09PSBmYWxzZQ0KICAgIH0gZWxzZSB7DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0NCiAgfQ0KICAvKioNCiAgICogQGRlc2NyaXB0aW9uIGNoYW5nZXMgRm9yZUNvbG9yIHByb3BlcnR5IGFuZCB0aGVuIHVwZGF0ZXMgdGhlIGdldEZvcmVDb2xvciB2YXJpYWJsZSB3aGljaCBpcyBnaXZlbiB0byBmaWxsIGF0dHJpYnV0ZSBvZiB0aGUgc3ZnIGVsZW1lbnQNCiAgICogQGZ1bmN0aW9uIGdldEZvcmVDb2xvclZhbHVlDQogICAqDQogICAqLw0KICBAV2F0Y2goJ3Byb3BlcnRpZXMuRm9yZUNvbG9yJywgeyBkZWVwOiB0cnVlIH0pDQogIGNoYW5nZUZvcmVDb2xvciAoKSB7DQogICAgaWYgKHRoaXMucHJvcGVydGllcy5FbmFibGVkKSB7DQogICAgICB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9yZUNvbG9yJykuZm9yRWFjaCgoZSkgPT4gew0KICAgICAgICAoZSBhcyBTVkdHRWxlbWVudCkuc3R5bGUuZmlsbCA9IHRoaXMuZ2V0Rm9yZUNvbG9yVmFsdWUNCiAgICAgIH0pDQogICAgfSBlbHNlIHsNCiAgICAgIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb3JlQ29sb3InKS5mb3JFYWNoKChlKSA9PiB7DQogICAgICAgIChlIGFzIFNWR0dFbGVtZW50KS5zdHlsZS5maWxsID0gJ3JnYigyMDAsMjAwLDIwMCknDQogICAgICB9KQ0KICAgIH0NCiAgfQ0KDQogIEBXYXRjaCgncHJvcGVydGllcy5FbmFibGVkJywgeyBkZWVwOiB0cnVlIH0pDQogIGVuYWJsZWRWYWxpZGF0ZSAoKSB7DQogICAgdGhpcy5jaGFuZ2VGb3JlQ29sb3IoKQ0KICB9DQogIGdldCBvdXRlclNjcm9sbEJhckRpdk9iaiAoKSB7DQogICAgY29uc3QgY29udHJvbFByb3AgPSB0aGlzLnByb3BlcnRpZXMNCiAgICBsZXQgZGlzcGxheSA9ICcnDQogICAgaWYgKHRoaXMuaXNSdW5Nb2RlKSB7DQogICAgICBkaXNwbGF5ID0gY29udHJvbFByb3AuVmlzaWJsZSA/ICdpbmxpbmUtYmxvY2snIDogJ25vbmUnDQogICAgfSBlbHNlIHsNCiAgICAgIGRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJw0KICAgIH0NCiAgICByZXR1cm4gew0KICAgICAgd2lkdGg6IGAke2NvbnRyb2xQcm9wLldpZHRofXB4YCwNCiAgICAgIGhlaWdodDogYCR7Y29udHJvbFByb3AuSGVpZ2h0fXB4YCwNCiAgICAgIGxlZnQ6IGAke2NvbnRyb2xQcm9wLkxlZnR9cHhgLA0KICAgICAgdG9wOiBgJHtjb250cm9sUHJvcC5Ub3B9cHhgLA0KICAgICAgZGlzcGxheTogZGlzcGxheSwNCiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJywNCiAgICAgIGN1cnNvcjoNCiAgICAgICAgY29udHJvbFByb3AuTW91c2VQb2ludGVyICE9PSAwIHx8IGNvbnRyb2xQcm9wLk1vdXNlSWNvbiAhPT0gJycNCiAgICAgICAgICA/IHRoaXMuZ2V0TW91c2VDdXJzb3JEYXRhDQogICAgICAgICAgOiAnZGVmYXVsdCcsDQogICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScNCiAgICB9DQogIH0NCg0KICBnZXQgaW5wdXRTdHlsZU9iaiAoKSB7DQogICAgY29uc3QgY29udHJvbFByb3AgPSB0aGlzLnByb3BlcnRpZXMNCiAgICBsZXQgYSA9IG51bGwNCiAgICBsZXQgdGVtcHJnYmENCiAgICBpZiAoY29udHJvbFByb3AuQmFja0NvbG9yISEuc3RhcnRzV2l0aCgncmdiJykpIHsNCiAgICAgIGEgPSBjb250cm9sUHJvcC5CYWNrQ29sb3IhLnNwbGl0KCdyZ2JhKCcpWzFdLnNwbGl0KCcsJykNCiAgICB9IGVsc2Ugew0KICAgICAgdGVtcHJnYmEgPSB0aGlzLmhleFRvUmdiQShjb250cm9sUHJvcC5CYWNrQ29sb3IhKQ0KICAgIH0NCg0KICAgIHJldHVybiB7DQogICAgICB3aWR0aDogdGhpcy5jaGVja090aGVyT3JpZW50YXRpb25zKCkgPyBgJHtjb250cm9sUHJvcC5IZWlnaHQhIC0gNDB9cHhgIDogYCR7Y29udHJvbFByb3AuV2lkdGghIC0gNDB9cHhgLA0KICAgICAgaGVpZ2h0OiB0aGlzLmNoZWNrT3RoZXJPcmllbnRhdGlvbnMoKSA/IGAke2NvbnRyb2xQcm9wLldpZHRoIX1weGAgOiBgJHtjb250cm9sUHJvcC5IZWlnaHQhfXB4YCwNCiAgICAgIGN1cnNvcjoNCiAgICAgICAgY29udHJvbFByb3AuTW91c2VQb2ludGVyICE9PSAwIHx8IGNvbnRyb2xQcm9wLk1vdXNlSWNvbiAhPT0gJycNCiAgICAgICAgICA/IHRoaXMuZ2V0TW91c2VDdXJzb3JEYXRhDQogICAgICAgICAgOiAnZGVmYXVsdCcsDQogICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbnRyb2xQcm9wLkJhY2tDb2xvciEuc3RhcnRzV2l0aCgncmdiJykgPyBgcmdiYSgke2EhWzBdfSwke2EhWzFdfSwke2EhWzJdfSwwLjUpYCA6IHRlbXByZ2JhLA0KICAgICAgbWFyZ2luOiAnMHB4Jw0KICAgIH0NCiAgfQ0KICBoZXhUb1JnYkEgKGhleDogc3RyaW5nKSB7DQogICAgbGV0IGM6IGFueQ0KICAgIGlmICgvXiMoW0EtRmEtZjAtOV17M30pezEsMn0kLy50ZXN0KGhleCkpIHsNCiAgICAgIGMgPSBoZXguc3Vic3RyaW5nKDEpLnNwbGl0KCcnKQ0KICAgICAgaWYgKGMubGVuZ3RoID09PSAzKSB7DQogICAgICAgIGMgPSBbY1swXSwgY1swXSwgY1sxXSwgY1sxXSwgY1syXSwgY1syXV0NCiAgICAgIH0NCiAgICAgIGMgPSAnMHgnICsgYy5qb2luKCcnKQ0KICAgICAgcmV0dXJuICdyZ2JhKCcgKyBbKGMgPj4gMTYpICYgMjU1LCAoYyA+PiA4KSAmIDI1NSwgYyAmIDI1NV0uam9pbignLCcpICsgJywwLjUpJw0KICAgIH0NCiAgfQ0KICBnZXQgc2Nyb2xsQmFyQnV0dG9uU3R5bGVPYmogKCkgew0KICAgIGNvbnN0IGNvbnRyb2xQcm9wID0gdGhpcy5wcm9wZXJ0aWVzDQogICAgcmV0dXJuIHsNCiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5jc3NWYXJzWyctLWJnLWNvbG9yJ10sDQogICAgICBvdmVyZmxvdzogJ2hpZGRlbicsDQogICAgICBvdXRsaW5lOiAnbm9uZScsDQogICAgICBjdXJzb3I6DQogICAgICAgIGNvbnRyb2xQcm9wLk1vdXNlUG9pbnRlciAhPT0gMCB8fCBjb250cm9sUHJvcC5Nb3VzZUljb24gIT09ICcnDQogICAgICAgICAgPyB0aGlzLmdldE1vdXNlQ3Vyc29yRGF0YQ0KICAgICAgICAgIDogJ2RlZmF1bHQnLA0KICAgICAgYm9yZGVyOiAhY29udHJvbFByb3AuRW5hYmxlZCA/ICcxcHggc29saWQgZ3JheScgOiAnJw0KICAgIH0NCiAgfQ0KICBtb3VudGVkICgpIHsNCiAgICB0aGlzLiRlbC5mb2N1cygpDQogIH0NCg0KICAvKioNCiAgICogQGRlc2NyaXB0aW9uIGNoZWNrT3RoZXJPcmllbnRhdGlvbnMgcmV0dXJucyBzdHJpbmcgdmFsdWUgZnJvbQ0KICAgKiBjb250cm9sUHJvcGVydGllcy5jb250cm9sc09yaWVudGF0aW9uUHJvcA0KICAgKiBAZnVuY3Rpb24gY2hlY2tPdGhlck9yaWVudGF0aW9ucw0KICAgKiBAcmV0dXJucyBib29sZWFuIHZhbHVlDQogICAqIEBvdmVycmlkZQ0KICAgKi8NCiAgY2hlY2tPdGhlck9yaWVudGF0aW9ucyAoKTogYm9vbGVhbiB7DQogICAgcmV0dXJuIGNvbnRyb2xQcm9wZXJ0aWVzLmNvbnRyb2xzT3JpZW50YXRpb25Qcm9wKHRoaXMuZGF0YSkNCiAgfQ0KICBldmVudFN0b3BwZXJzICgpIHsNCiAgICBjb25zdCBldmVudFN0b3AgPSAoZXZlbnQ6IEV2ZW50KSA9PiBldmVudC5zdG9wUHJvcGFnYXRpb24oKQ0KICAgIHJldHVybiB0aGlzLmlzRWRpdE1vZGUgPT09IGZhbHNlID8gbnVsbCA6IHsNCiAgICAgIGtleWRvd246IGV2ZW50U3RvcA0KICAgIH0NCiAgfQ0KICBzY3JvbGxCYXJDbGljayAoZXZlbnQ6IE1vdXNlRXZlbnQpIHsNCiAgICBpZiAodGhpcy50b29sQm94U2VsZWN0Q29udHJvbCA9PT0gJ1NlbGVjdCcpIHsNCiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpDQogICAgICB0aGlzLnNlbGVjdGVkSXRlbShldmVudCkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDScrollBar","sourcesContent":["<template>\r\n  <div\r\n  v-on=\"eventStoppers()\"\r\n  @click=\"scrollBarClick\"\r\n  :style=\"outerScrollBarDivObj\"\r\n  :title=\"properties.ControlTipText\"\r\n  @keydown.enter=\"setContentEditable($event, true)\"\r\n  @keydown.esc=\"setContentEditable($event, false)\"\r\n  :tabindex=\"0\"\r\n  @mousedown=\"controlEditMode\"\r\n  >\r\n    <div class=\"slidecontainer\" :style=\"cssVars\">\r\n      <button :style=\"scrollBarButtonStyleObj\" @click=\"!getDisableValue?properties.Min > properties.Max ? increaseTheValue() : decreaseTheValue():''\">\r\n        <FdSvgImage\r\n          key=\"leftArrow\"\r\n          name=\"left-arrow.svg\"\r\n          @hook:mounted=\"changeForeColor\"\r\n          class=\"svgLeftRightStyle\"\r\n        />\r\n      </button>\r\n      <input\r\n        :disabled=\"getDisableValue\"\r\n        type=\"range\"\r\n        :min=\"properties.Min > properties.Max ? properties.Max : properties.Min\"\r\n        :max=\"properties.Min > properties.Max ? properties.Min : properties.Max\"\r\n        :value=\"properties.Value\"\r\n        class=\"slider\"\r\n        :style=\"inputStyleObj\"\r\n        @input=\"updateValueProperty\"\r\n        orient=\"vertical\"\r\n      />\r\n      <button :style=\"scrollBarButtonStyleObj\" @click=\"!getDisableValue?properties.Min > properties.Max ? decreaseTheValue() : increaseTheValue():''\">\r\n        <FdSvgImage\r\n          key=\"rightArrow\"\r\n          name=\"right-arrow.svg\"\r\n          @hook:mounted=\"changeForeColor\"\r\n          class=\"svgLeftRightStyle\"\r\n        />\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Emit, Mixins, Watch } from 'vue-property-decorator'\r\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\r\nimport FdSvgImage from '@/FormDesigner/components/atoms/FDSVGImage/index.vue'\r\nimport { controlProperties } from '@/FormDesigner/controls-properties'\r\n\r\n@Component({\r\n  name: 'FDScrollBar',\r\n  components: {\r\n    FdSvgImage\r\n  }\r\n})\r\nexport default class FDScrollBar extends Mixins(FdControlVue) {\r\n  $el: HTMLDivElement\r\n  isInvert: boolean = false\r\n  intervalVariable: number = 0\r\n  updateValueProperty (e: Event) {\r\n    if (e.target instanceof HTMLInputElement) {\r\n      const targetValue = parseInt(e.target!.value)\r\n      this.updateDataModel({ propertyName: 'Value', value: targetValue })\r\n    }\r\n  }\r\n\r\n  get cssVars () {\r\n    const controlProp = this.properties\r\n    return {\r\n      position: 'relative',\r\n      left: '0px',\r\n      top: (this.properties.Min! > this.properties.Max!) ? this.checkOtherOrientations() ? `${controlProp.Height!}px` : '0px' : '0px',\r\n      gridTemplateColumns: this.checkOtherOrientations() ? '20px ' + `${controlProp.Height! - 40}px` + ' 20px' : '',\r\n      '--bg-color': this.properties.BackColor,\r\n      '--height': this.checkOtherOrientations() ? `${this.properties.Width!}px` : `${this.properties.Height!}px`,\r\n      transform: (this.properties.Min! > this.properties.Max!) ? this.scrollReAlign() : this.checkOtherOrientations() ? 'rotate(90deg)' : '',\r\n      transformOrigin: (this.properties.Min! > this.properties.Max!) ? this.checkOtherOrientations() ? '0% 0%' : '' : '',\r\n      '--invertValue': this.isEditMode ? this.isInvert ? '1' : '0' : '0'\r\n    }\r\n  }\r\n\r\n  @Watch('isEditMode')\r\n  editModeValidate () {\r\n    if (this.isEditMode) {\r\n      this.intervalVariable = setInterval(() => {\r\n        this.isInvert = !this.isInvert\r\n      }, 1000)\r\n    } else {\r\n      clearInterval(this.intervalVariable)\r\n    }\r\n  }\r\n  scrollReAlign () {\r\n    if (this.checkOtherOrientations()) {\r\n      return 'rotate(-90deg)'\r\n    }\r\n    return 'ScaleX(-1)'\r\n  }\r\n  get getDisableValue () {\r\n    if (this.isRunMode || this.isEditMode) {\r\n      return this.properties.Enabled === false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n  /**\r\n   * @description changes ForeColor property and then updates the getForeColor variable which is given to fill attribute of the svg element\r\n   * @function getForeColorValue\r\n   *\r\n   */\r\n  @Watch('properties.ForeColor', { deep: true })\r\n  changeForeColor () {\r\n    if (this.properties.Enabled) {\r\n      this.$el.querySelectorAll('.foreColor').forEach((e) => {\r\n        (e as SVGGElement).style.fill = this.getForeColorValue\r\n      })\r\n    } else {\r\n      this.$el.querySelectorAll('.foreColor').forEach((e) => {\r\n        (e as SVGGElement).style.fill = 'rgb(200,200,200)'\r\n      })\r\n    }\r\n  }\r\n\r\n  @Watch('properties.Enabled', { deep: true })\r\n  enabledValidate () {\r\n    this.changeForeColor()\r\n  }\r\n  get outerScrollBarDivObj () {\r\n    const controlProp = this.properties\r\n    let display = ''\r\n    if (this.isRunMode) {\r\n      display = controlProp.Visible ? 'inline-block' : 'none'\r\n    } else {\r\n      display = 'inline-block'\r\n    }\r\n    return {\r\n      width: `${controlProp.Width}px`,\r\n      height: `${controlProp.Height}px`,\r\n      left: `${controlProp.Left}px`,\r\n      top: `${controlProp.Top}px`,\r\n      display: display,\r\n      overflow: 'hidden',\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      backgroundColor: 'white'\r\n    }\r\n  }\r\n\r\n  get inputStyleObj () {\r\n    const controlProp = this.properties\r\n    let a = null\r\n    let temprgba\r\n    if (controlProp.BackColor!!.startsWith('rgb')) {\r\n      a = controlProp.BackColor!.split('rgba(')[1].split(',')\r\n    } else {\r\n      temprgba = this.hexToRgbA(controlProp.BackColor!)\r\n    }\r\n\r\n    return {\r\n      width: this.checkOtherOrientations() ? `${controlProp.Height! - 40}px` : `${controlProp.Width! - 40}px`,\r\n      height: this.checkOtherOrientations() ? `${controlProp.Width!}px` : `${controlProp.Height!}px`,\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      backgroundColor: controlProp.BackColor!.startsWith('rgb') ? `rgba(${a![0]},${a![1]},${a![2]},0.5)` : temprgba,\r\n      margin: '0px'\r\n    }\r\n  }\r\n  hexToRgbA (hex: string) {\r\n    let c: any\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      c = hex.substring(1).split('')\r\n      if (c.length === 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]]\r\n      }\r\n      c = '0x' + c.join('')\r\n      return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',0.5)'\r\n    }\r\n  }\r\n  get scrollBarButtonStyleObj () {\r\n    const controlProp = this.properties\r\n    return {\r\n      backgroundColor: this.cssVars['--bg-color'],\r\n      overflow: 'hidden',\r\n      outline: 'none',\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      border: !controlProp.Enabled ? '1px solid gray' : ''\r\n    }\r\n  }\r\n  mounted () {\r\n    this.$el.focus()\r\n  }\r\n\r\n  /**\r\n   * @description checkOtherOrientations returns string value from\r\n   * controlProperties.controlsOrientationProp\r\n   * @function checkOtherOrientations\r\n   * @returns boolean value\r\n   * @override\r\n   */\r\n  checkOtherOrientations (): boolean {\r\n    return controlProperties.controlsOrientationProp(this.data)\r\n  }\r\n  eventStoppers () {\r\n    const eventStop = (event: Event) => event.stopPropagation()\r\n    return this.isEditMode === false ? null : {\r\n      keydown: eventStop\r\n    }\r\n  }\r\n  scrollBarClick (event: MouseEvent) {\r\n    if (this.toolBoxSelectControl === 'Select') {\r\n      event.stopPropagation()\r\n      this.selectedItem(event)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.slidecontainer {\r\n  display: grid;\r\n  grid-template-columns: 20px auto 20px;\r\n}\r\n\r\n.slider {\r\n  -webkit-appearance: none;\r\n  content: '';\r\n  --rgb:250,250,250;\r\n  --alpha: 0.5;\r\n  background-color: rgba(var(--rgb), var(--alpha));\r\n  outline: none;\r\n  overflow: hidden;\r\n  pointer-events: none;\r\n}\r\n\r\n.slider:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.slider::-webkit-slider-thumb {\r\n  background-color: var(--bg-color);\r\n  border: 2px solid gray;\r\n  border-right: 2px solid black;\r\n  height: var(--height);\r\n  opacity: var(--opacityValue);\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 25px;\r\n  --alpha: 1;\r\n  cursor: inherit;\r\n  pointer-events:auto;\r\n  filter: invert(var(--invertValue));\r\n}\r\n\r\n.slider::-moz-range-thumb {\r\n  background: rgb(139, 138, 138);\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}