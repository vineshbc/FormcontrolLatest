{"remainingRequest":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDTabStrip/index.vue?vue&type=style&index=0&id=797a05e3&scoped=true&lang=css&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/src/FormDesigner/components/atoms/FDTabStrip/index.vue","mtime":1611510286000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/FormcontrolLatest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5vdXRlci1wYWdlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMjM4LCAyMzgpOw0KICBvdmVyZmxvdy15OiBoaWRkZW47DQogIG92ZXJmbG93LXg6IGhpZGRlbjsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgd2lkdGg6IDBweDsNCiAgaGVpZ2h0OiAwcHg7DQogIGxlZnQ6IDBweDsNCiAgdG9wOiAwcHg7DQp9DQoucGFnZXMgew0KICBtYXJnaW46IDA7DQogIHdoaXRlLXNwYWNlOiBub3dyYXA7DQogIG92ZXJmbG93LXg6IGhpZGRlbjsNCiAgb3ZlcmZsb3cteTogaGlkZGVuOw0KfQ0KLmxlZnQtYnV0dG9uIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBvdXRsaW5lOiBub25lOw0KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uLy4uLy4uLy4uL2Fzc2V0cy9sZWZ0LWFycm93LWltZy5wbmciKTsNCiAgYmFja2dyb3VuZC1zaXplOiAzMCU7DQogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsNCiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7DQogIGJvcmRlci1yaWdodC1jb2xvcjogZ3JheTsNCiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogZ3JheTsNCiAgdG9wOiAzcHg7DQogIHJpZ2h0OiAxNXB4Ow0KICB3aWR0aDogMjJweDsNCiAgaGVpZ2h0OiAxOHB4Ow0KICBwYWRkaW5nOiAwOw0KICBtYXJnaW46IDA7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIHotaW5kZXg6IDU7DQp9DQoucmlnaHQtYnV0dG9uIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBvdXRsaW5lOiBub25lOw0KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uLy4uLy4uLy4uL2Fzc2V0cy9yaWdodC1hcnJvdy1pbWcucG5nIik7DQogIGJhY2tncm91bmQtc2l6ZTogMzAlOw0KICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7DQogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7DQogIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlOw0KICBib3JkZXItcmlnaHQtY29sb3I6IGdyYXk7DQogIGJvcmRlci1ib3R0b20tY29sb3I6IGdyYXk7DQogIHRvcDogM3B4Ow0KICByaWdodDogMTVweDsNCiAgd2lkdGg6IDIycHg7DQogIGhlaWdodDogMThweDsNCiAgcGFkZGluZzogMDsNCiAgbWFyZ2luOiAwOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KICB6LWluZGV4OiA1Ow0KfQ0KLm1vdmUgew0KICB3aWR0aDogMTAwJTsNCiAgZGlzcGxheTogZ3JpZDsNCn0NCg0KLnBhZ2Ugew0KICB2ZXJ0aWNhbC1hbGlnbjogdG9wOw0KICB6LWluZGV4OiAxOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KfQ0KLnNjcm9sbC1wYWdlIHsNCiAgei1pbmRleDogMjsNCn0NCi5wYWdlIGxhYmVsIHsNCiAgYm9yZGVyOiAwLjFweCBzb2xpZCB3aGl0ZTsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMjM4LCAyMzgpOw0KICBwYWRkaW5nOiA1cHggNXB4IDVweCA1cHg7DQogIG1hcmdpbjogMDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHRvcDogMHB4Ow0KfQ0KLnBhZ2UgW3R5cGU9InJhZGlvIl0gew0KICBkaXNwbGF5OiBub25lOw0KfQ0KOjotd2Via2l0LXNjcm9sbGJhciB7DQogIGRpc3BsYXk6IG5vbmU7DQogIHdpZHRoOiAwOw0KICBoZWlnaHQ6IDFlbTsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMjM4LCAyMzgpOw0KfQ0KOjotd2Via2l0LXNjcm9sbGJhci5tb3ZlIHsNCiAgZGlzcGxheTogbm9uZTsNCiAgd2lkdGg6IDA7DQogIGhlaWdodDogMWVtOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM4LCAyMzgsIDIzOCk7DQp9DQoNCjo6LXdlYmtpdC1zY3JvbGxiYXItYnV0dG9uIHsNCiAgYmFja2dyb3VuZDogcmdiKDIzOCwgMjM4LCAyMzgpOw0KICBoZWlnaHQ6IDIwcHg7DQogIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTsNCiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBncmF5Ow0KICBib3JkZXItYm90dG9tLWNvbG9yOiBncmF5Ow0KfQ0KDQovKiBVcCAqLw0KOjotd2Via2l0LXNjcm9sbGJhci1idXR0b246c2luZ2xlLWJ1dHRvbjpob3Jpem9udGFsOmRlY3JlbWVudCB7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vLi4vLi4vLi4vYXNzZXRzL3RyaWFuZ2xlLXVwLWltZy5wbmciKTsNCiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpOw0KICBiYWNrZ3JvdW5kLXNpemU6IDEwcHg7DQogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsNCiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCn0NCg0KLyogRG93biAqLw0KOjotd2Via2l0LXNjcm9sbGJhci1idXR0b246c2luZ2xlLWJ1dHRvbjpob3Jpem9udGFsOmluY3JlbWVudCB7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vLi4vLi4vLi4vYXNzZXRzL3RyaWFuZ2xlLWRvd24taW1nLnBuZyIpOw0KICBiYWNrZ3JvdW5kLXNpemU6IDEwcHg7DQogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsNCiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCn0NCg0KOjotd2Via2l0LXNjcm9sbGJhci10cmFjay1waWVjZSB7DQogIHdpZHRoOiAwcHg7DQp9DQoNCi5wYWdlIC5jb250ZW50IHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB3aGl0ZS1zcGFjZTogbm9ybWFsOw0KICB0b3A6IDIzcHg7DQogIGxlZnQ6IDBweDsNCiAgYmFja2dyb3VuZDogcmdiKDIzOCwgMjM4LCAyMzgpOw0KICBoZWlnaHQ6IDEwMHB4Ow0KICByaWdodDogMDsNCiAgYm90dG9tOiAwOw0KICBwYWRkaW5nOiAyMHB4Ow0KICBwYWRkaW5nLXJpZ2h0OiAxMHB4Ow0KICB3aWR0aDogY2FsYygxMDAlIC0gMzVweCk7DQogIGhlaWdodDogY2FsYygxMDAlIC0gNjVweCk7DQogIGJvcmRlcjogMC4xcHggc29saWQgd2hpdGU7DQogIGJveC1zaGFkb3c6IDJweCAxcHggZ3JheTsNCn0NCi5mb3JCdXR0b24gew0KICBtYXJnaW46IDNweDsNCiAgYm9yZGVyLXJhZGl1czogM3B4Ow0KICB6LWluZGV4OiAyOw0KICBib3JkZXI6IDJweCBvdXRzZXQ7DQp9DQoucGFnZSBbdHlwZT0icmFkaW8iXTpjaGVja2VkIH4gbGFiZWwuZm9yQnV0dG9uIHsNCiAgbWFyZ2luOiAzcHg7DQogIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIGdyYXk7DQogIGJvcmRlci1ib3R0b206IG5vbmU7DQogIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgei1pbmRleDogMjsNCiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTsNCiAgYm9yZGVyOiAycHggaW5zZXQ7DQp9DQouZm9yVGFiIHsNCiAgYm9yZGVyLWJvdHRvbTogbm9uZTsNCiAgYm9yZGVyLXJhZGl1czogM3B4Ow0KfQ0KLnBhZ2UgW3R5cGU9InJhZGlvIl06Y2hlY2tlZCB+IGxhYmVsLmZvclRhYiB7DQogIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIGdyYXk7DQogIGJvcmRlci1ib3R0b206IG5vbmU7DQogIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgei1pbmRleDogMjsNCn0NCi5mb3JMZWZ0IHsNCiAgYm9yZGVyLWJvdHRvbTogbm9uZTsNCiAgYm9yZGVyLXJhZGl1czogM3B4Ow0KfQ0KLnBhZ2UgW3R5cGU9InJhZGlvIl06Y2hlY2tlZCB+IGxhYmVsLmZvckxlZnQgew0KICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JheTsNCiAgYm9yZGVyLXJhZGl1czogM3B4Ow0KICB6LWluZGV4OiAyOw0KfQ0KDQouZm1UYWJTdHlsZUJ1dHRvbiB7DQogIGJvcmRlcjogMXB4IGluc2V0ICFpbXBvcnRhbnQ7DQp9DQouZm1UYWJTdHlsZUJ1dHRvbiBbdHlwZT0icmFkaW8iXTpjaGVja2VkIHsNCiAgYm9yZGVyOiAxcHggb3V0c2V0ICFpbXBvcnRhbnQ7DQogIGJhY2tncm91bmQtY29sb3I6IGdyYXkgIWltcG9ydGFudDsNCn0NCi5wYWdlIFt0eXBlPSJyYWRpbyJdOmNoZWNrZWQgfiBsYWJlbCB+IC5jb250ZW50IHsNCiAgei1pbmRleDogMTsNCn0NCi5jb250ZW50IHsNCiAgb3ZlcmZsb3c6IGF1dG87DQp9DQoNCi5zcGFuQ2xhc3Mgew0KICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsNCiAgdGV4dC11bmRlcmxpbmUtcG9zaXRpb246IHVuZGVyOw0KfQ0KOmZvY3VzIHsNCiAgb3V0bGluZTogbm9uZTsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsofile":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDTabStrip","sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      v-on=\"eventStoppers()\"\r\n      class=\"outer-page\"\r\n      :style=\"pageStyleObj\"\r\n      @contextmenu=\"contextMenuVisible($event, -1)\"\r\n      @click=\"tabStripClick\"\r\n      @mousedown=\"controlEditMode\"\r\n      @keydown.enter=\"setContentEditable($event, true)\"\r\n      @keydown.esc=\"setContentEditable($event, false)\"\r\n      @keydown.delete=\"deleteTabControl($event)\"\r\n      :tabindex=\"properties.TabIndex\"\r\n      :title=\"properties.ControlTipText\"\r\n    >\r\n      <div\r\n        class=\"pages\"\r\n        :style=\"styleTabsObj\"\r\n        :title=\"properties.ControlTipText\"\r\n      >\r\n        <div class=\"move\" ref=\"scrolling\" :style=\"styleMoveObj\">\r\n          <div\r\n            ref=\"controlTabsRef\"\r\n            class=\"page\"\r\n            v-for=\"(value, key) in extraDatas.Tabs\"\r\n            :key=\"key\"\r\n            :style=\"getTabStyle\"\r\n          >\r\n            <FDControlTabs\r\n              @setValue=\"setValue\"\r\n              :tempWidth=\"tempWidth\"\r\n              @isChecked=\"isChecked\"\r\n              :getMouseCursorData=\"getMouseCursorData\"\r\n              :setFontStyle=\"setFontStyle\"\r\n              :data=\"data\"\r\n              @tempStretch=\"tempStretch\"\r\n              :pageValue=\"value\"\r\n              :indexValue=\"key\"\r\n              :pageData=\"value\"\r\n              :isRunMode=\"isRunMode\"\r\n              :isEditMode=\"isEditMode\"\r\n              :isItalic=\"isItalic\"\r\n              :tempStretch=\"tempStretch\"\r\n              :tempWeight=\"tempWeight\"\r\n              @deleteMultiPageControl=\"\r\n                (event) => {\r\n                  deleteTabControl(event);\r\n                }\r\n              \"\r\n            />\r\n            <div\r\n              class=\"content\"\r\n              :style=\"styleContentObj\"\r\n              :title=\"properties.ControlTipText\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div></div>\r\n        <div :style=\"getScrollButtonStyleObj\" ref=\"buttonStyleRef\">\r\n          <button\r\n            class=\"left-button\"\r\n            :style=\"scrollButtonStyle\"\r\n            @click=\"leftmove\"\r\n          ></button>\r\n          <button\r\n            class=\"right-button\"\r\n            :style=\"scrollButtonStyle\"\r\n            @click=\"rightmove\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Emit, Prop, Ref, Watch } from 'vue-property-decorator'\r\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\r\nimport { State, Action } from 'vuex-class'\r\nimport ContextMenu from '../FDContextMenu/index.vue'\r\nimport { tabsContextMenu } from '../../../models/tabsContextMenu'\r\nimport { controlProperties } from '@/FormDesigner/controls-properties'\r\nimport FDControlTabs from '@/FormDesigner/components/atoms/FDControlTabs/index.vue'\r\nimport Vue from 'vue'\r\nimport { EventBus } from '@/FormDesigner/event-bus'\r\n\r\n@Component({\r\n  name: 'FDTabStrip',\r\n  components: {\r\n    ContextMenu,\r\n    FDControlTabs\r\n  }\r\n})\r\nexport default class FDTabStrip extends FdControlVue {\r\n  @State((state) => state.fd.userformData) userformData!: userformData;\r\n  @Prop() isEditMode: boolean;\r\n  @Prop({ required: true, type: String }) public userFormId!: string;\r\n  @Ref('tabstripContextMenu') tabstripContextMenu: HTMLDivElement;\r\n  @Ref('scrolling') scrolling: HTMLDivElement;\r\n  @Ref('controlTabsRef') controlTabsRef: HTMLDivElement[];\r\n  @Ref('buttonStyleRef') buttonStyleRef: HTMLDivElement;\r\n  $el: HTMLDivElement;\r\n\r\n  // isScroll = true;\r\n  viewMenu: boolean = false;\r\n  top: string = '0px';\r\n  left: string = '0px';\r\n  contextMenuValue: Array<IcontextMenu> = tabsContextMenu;\r\n  tempScrollWidth: number;\r\n  updatedValue: number = 0;\r\n  tempWidth: number = 0;\r\n  tempHeight: number = 0;\r\n  multiRowCount: number = 1;\r\n  isScrollVisible: boolean = false;\r\n  topValue: number = 0;\r\n  rightClickSelect (value: number) {\r\n    this.updateDataModel({ propertyName: 'Value', value: value })\r\n  }\r\n\r\n  contextMenuVisible (e: MouseEvent, selected: number) {\r\n    EventBus.$emit('editModeContextMenu', e, this.controlId, this.data, this.isEditMode, this.updatedValue)\r\n  }\r\n\r\n  /**\r\n   * @description takes the index Value and sets the Value property\r\n   * @function setValue\r\n   *\r\n   */\r\n  setValue (value: number) {\r\n    this.updatedValue = value\r\n    this.updateDataModel({ propertyName: 'Value', value: value })\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @description takes the ref of the div and determines the scrollLeft and scrollTop\r\n   * @function leftmove\r\n   *\r\n   */\r\n  leftmove () {\r\n    const scrollRef = this.scrolling\r\n    if (\r\n      this.properties.TabOrientation === 0 ||\r\n      this.properties.TabOrientation === 1\r\n    ) {\r\n      scrollRef.scrollLeft! -= 50\r\n      if (this.scrolling) {\r\n        const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n        const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n        if (this.scrolling.scrollLeft >= (this.scrolling.scrollWidth - this.scrolling.clientWidth)) {\r\n          rightButton.style.opacity = '0.4'\r\n          leftButton.style.opacity = '1'\r\n        } else if (this.scrolling.scrollLeft === 0) {\r\n          leftButton.style.opacity = '0.4'\r\n          rightButton.style.opacity = '1'\r\n        } else {\r\n          leftButton.style.opacity = '1'\r\n          rightButton.style.opacity = '1'\r\n        }\r\n      }\r\n    } else {\r\n      scrollRef.scrollTop! -= 50\r\n      if (this.scrolling) {\r\n        const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n        const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n        if (this.scrolling.scrollTop >= (this.scrolling.scrollHeight - this.scrolling.clientHeight)) {\r\n          rightButton.style.opacity = '0.4'\r\n          leftButton.style.opacity = '1'\r\n        } else if (this.scrolling.scrollTop === 0) {\r\n          leftButton.style.opacity = '0.4'\r\n          rightButton.style.opacity = '1'\r\n        } else {\r\n          leftButton.style.opacity = '1'\r\n          rightButton.style.opacity = '1'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description takes the ref of the div and determines the scrollLeft and scrollTop\r\n   * @function rightmove\r\n   *\r\n   */\r\n  rightmove () {\r\n    const scrollRef = this.scrolling\r\n    let tempScrollTop = scrollRef.scrollTop!\r\n    if (\r\n      this.properties.TabOrientation === 0 ||\r\n      this.properties.TabOrientation === 1\r\n    ) {\r\n      scrollRef.scrollLeft! += 50\r\n      if (this.scrolling) {\r\n        const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n        const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n        if (this.scrolling.scrollLeft >= (this.scrolling.scrollWidth - this.scrolling.clientWidth - 1)) {\r\n          rightButton.style.opacity = '0.4'\r\n          leftButton.style.opacity = '1'\r\n        } else if (this.scrolling.scrollLeft === 0) {\r\n          leftButton.style.opacity = '0.4'\r\n          rightButton.style.opacity = '1'\r\n        } else {\r\n          leftButton.style.opacity = '1'\r\n          rightButton.style.opacity = '1'\r\n        }\r\n      }\r\n    } else {\r\n      tempScrollTop += 50\r\n      scrollRef.scrollTop = tempScrollTop\r\n      if (this.scrolling) {\r\n        const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n        const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n        if (this.scrolling.scrollTop >= (this.scrolling.scrollHeight - this.scrolling.clientHeight - 1)) {\r\n          rightButton.style.opacity = '0.4'\r\n          leftButton.style.opacity = '1'\r\n        } else if (this.scrolling.scrollTop === 0) {\r\n          leftButton.style.opacity = '0.4'\r\n          rightButton.style.opacity = '1'\r\n        } else {\r\n          leftButton.style.opacity = '1'\r\n          rightButton.style.opacity = '1'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description takes the index Value and pageValue and set the Value property\r\n   * @function isChecked\r\n   *\r\n   */\r\n  isChecked (value: selectedTab) {\r\n    this.updatedValue = value.indexValue\r\n    this.updateDataModel({ propertyName: 'Value', value: value.indexValue })\r\n    this.focusPage()\r\n  }\r\n\r\n  /**\r\n   * @description style object is passed to :style attribute in div tag\r\n   * dynamically changing the styles of the component based on propControlData\r\n   * @function pageStyleObj\r\n   *\r\n   */\r\n  protected get pageStyleObj (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    let display = ''\r\n    if (this.isRunMode) {\r\n      display = controlProp.Visible ? 'inline-block' : 'none'\r\n    } else {\r\n      display = 'inline-block'\r\n    }\r\n    return {\r\n      left: `${controlProp.Left}px`,\r\n      width: `${controlProp.Width}px`,\r\n      height: `${controlProp.Height}px`,\r\n      top: `${controlProp.Top}px`,\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      display: display,\r\n      borderLeft: '1px solid white'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description style object is passed to :style attribute in div tag\r\n   * dynamically changing the styles of the component based on propControlData\r\n   * @function styleMoveObj\r\n   *\r\n   */\r\n  protected get styleMoveObj (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    const a = ['bottom', 'top']\r\n    let bottomTopStyle = {}\r\n    if (controlProp.TabOrientation === 1) {\r\n      bottomTopStyle = { [a[0]]: '0px' }\r\n    } else if (controlProp.TabOrientation === 0) {\r\n      bottomTopStyle = { [a[1]]: '0px' }\r\n    }\r\n    return {\r\n      ...bottomTopStyle,\r\n      display: controlProp.Style === 2 ? 'none' : 'inline-block',\r\n      alignSelf: controlProp.TabOrientation === 1 ? 'flex-end' : '',\r\n      marginTop:\r\n        controlProp.TabOrientation === 1\r\n          ? `${controlProp.Height! - 35}px`\r\n          : '0px',\r\n      whiteSpace: controlProp.MultiRow === true ? 'break-spaces' : 'nowrap',\r\n      zIndex: controlProp.MultiRow === true ? '100' : '1',\r\n      height:\r\n        controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\r\n          ? this.isScrollVisible\r\n            ? `${controlProp.Height! - 48}px`\r\n            : `${controlProp.Height}px`\r\n          : '',\r\n      width:\r\n        controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\r\n          ? 'fit-content'\r\n          : this.isScrollVisible\r\n            ? `${controlProp.Width! - 62}px`\r\n            : `${controlProp.Width!}px`,\r\n      float: controlProp.TabOrientation === 3 ? 'right' : '',\r\n      overflow: 'hidden'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description style object is passed to :style attribute in button tags\r\n   * dynamically changing the styles of the component based on propControlData\r\n   * @function getScrollButtonStyleObj\r\n   *\r\n   */\r\n  protected get getScrollButtonStyleObj (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    const tabsLength =\r\n      this.properties.TabFixedWidth! > 0\r\n        ? this.extraDatas.Tabs!.length * this.properties.TabFixedWidth! +\r\n          10 * this.extraDatas.Tabs!.length\r\n        : this.properties.Font!.FontSize! < 36\r\n          ? this.properties.Font!.FontSize! * 3.5 * this.extraDatas.Tabs!.length\r\n          : this.properties.Font!.FontSize! * 2.3 * this.extraDatas.Tabs!.length\r\n    const tabsHeight =\r\n      this.properties.TabFixedHeight! > 0\r\n        ? this.extraDatas.Tabs!.length * this.properties.TabFixedHeight! +\r\n          10 * this.extraDatas.Tabs!.length\r\n        : this.properties.Font!.FontSize! * 2.3 * this.extraDatas.Tabs!.length\r\n    return {\r\n      position: 'absolute',\r\n      zIndex: '30001',\r\n      marginTop:\r\n        controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\r\n          ? `${controlProp.Height! - 20}px`\r\n          : controlProp.TabOrientation === 1\r\n            ? `${controlProp.Height! - 22}px`\r\n            : '0px',\r\n      transform:\r\n        controlProp.TabOrientation === 2\r\n          ? 'rotate(90deg)'\r\n          : this.transformScrollButtonStyle,\r\n      display: !this.properties.MultiRow\r\n        ? this.isScrollVisible\r\n          ? 'block'\r\n          : 'none'\r\n        : 'none',\r\n      right:\r\n        controlProp.TabOrientation === 3\r\n          ? '0px'\r\n          : controlProp.TabOrientation === 2\r\n            ? `${controlProp.Width! - 40}px`\r\n            : '0px',\r\n      top: '0px'\r\n    }\r\n  }\r\n\r\n  get scrollButtonStyle () {\r\n    const controlProp = this.properties\r\n    return {\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      opacity: this.scrolling ? ((this.scrolling.scrollLeft === (this.scrolling.scrollWidth - this.scrolling.clientWidth)) ? '0.4' : '1') : '1'\r\n    }\r\n  }\r\n\r\n  scrollButtonVerify () {\r\n    let sum = 0\r\n    Vue.nextTick(() => {\r\n      this.isScrollVisible = false\r\n      if (\r\n        this.properties.TabOrientation === 0 ||\r\n        this.properties.TabOrientation === 1\r\n      ) {\r\n        if (this.scrolling && !this.properties.MultiRow) {\r\n          for (let i = 0; i < this.scrolling.children.length; i++) {\r\n            const a = this.scrolling.children[i] as HTMLDivElement\r\n            sum += a.offsetWidth\r\n          }\r\n          const tabsLength = sum\r\n          if (tabsLength > this.properties.Width!) {\r\n            this.isScrollVisible = true\r\n          } else {\r\n            this.isScrollVisible = false\r\n          }\r\n        }\r\n      } else {\r\n        if (this.scrolling && !this.properties.MultiRow) {\r\n          for (let i = 0; i < this.scrolling.children.length; i++) {\r\n            const a = this.scrolling.children[i] as HTMLDivElement\r\n            sum += a.offsetHeight\r\n          }\r\n          const tabsHeight = sum\r\n          if (tabsHeight > this.properties.Height!) {\r\n            this.isScrollVisible = true\r\n          } else {\r\n            this.isScrollVisible = false\r\n          }\r\n        }\r\n      }\r\n      this.setScrollLeft()\r\n      this.scrollDisabledValidate()\r\n    })\r\n  }\r\n\r\n  @Watch('properties.Height')\r\n  heightValidate () {\r\n    this.scrollButtonVerify()\r\n    this.scrollDisabledValidate()\r\n  }\r\n\r\n  @Watch('properties.TabFixedWidth')\r\n  tabFixedWidthValidate () {\r\n    this.scrollButtonVerify()\r\n    this.scrollDisabledValidate()\r\n  }\r\n\r\n  @Watch('properties.TabFixedHeight')\r\n  tabFixedHeightValidate () {\r\n    this.scrollButtonVerify()\r\n    this.scrollDisabledValidate()\r\n  }\r\n\r\n  /**\r\n   * @description style object is passed to :style attribute in div tag\r\n   * dynamically changing the styles of the component based on propControlData\r\n   * @function styleTabsObj\r\n   *\r\n   */\r\n  protected get styleTabsObj (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    return {\r\n      backgroundColor: controlProp.BackColor,\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      display: controlProp.TabOrientation === 1 ? 'flex' : '',\r\n      position: 'absolute',\r\n      width: `${controlProp.Width!}px`,\r\n      height: `${controlProp.Height!}px`,\r\n      boxShadow: controlProp.TabOrientation === 0 ? '0px 1px gray' : ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description style object is passed to :style attribute in div tag\r\n   * dynamically changing the styles of the component based on propControlData\r\n   * @function getTabStyle\r\n   *\r\n   */\r\n  protected get getTabStyle (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    return {\r\n      display:\r\n        controlProp.TabOrientation === 0 || controlProp.TabOrientation === 1\r\n          ? 'inline-block'\r\n          : 'block',\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default'\r\n    }\r\n  }\r\n  /**\r\n   * @description style object is passed to :style attribute in div tag\r\n   * dynamically changing the styles of the component based on propControlData\r\n   * @function styleContentObj\r\n   *\r\n   */\r\n  protected get styleContentObj (): Partial<CSSStyleDeclaration> {\r\n    const controlProp = this.properties\r\n    return {\r\n      position: 'absolute',\r\n      zIndex: '10000',\r\n      display:\r\n        controlProp.Style === 1 || controlProp.Style === 2\r\n          ? 'none'\r\n          : controlProp.Width! < 30 || controlProp.Height! < 30\r\n            ? 'none'\r\n            : 'block',\r\n      top:\r\n        controlProp.TabOrientation === 0\r\n          ? controlProp.MultiRow\r\n            ? this.topValue + 'px'\r\n            : controlProp.TabFixedHeight! > 0\r\n              ? controlProp.TabFixedHeight! + 10 + 'px'\r\n              : controlProp.TabFixedHeight! === 0\r\n                ? this.tempHeight + 15 + 'px'\r\n                : '33px'\r\n          : controlProp.TabOrientation === 1\r\n            ? controlProp.MultiRow\r\n              ? '-' + (this.topValue - 30) + 'px'\r\n              : controlProp.TabFixedHeight! > 0\r\n                ? '-' + (this.topValue - 30) + 'px'\r\n                : '-' + (this.topValue - 30) + 'px'\r\n            : '0px',\r\n      height:\r\n        controlProp.TabOrientation === 0 || controlProp.TabOrientation === 1\r\n          ? controlProp.TabFixedHeight! > 0\r\n            ? controlProp.Height! - controlProp.TabFixedHeight! - 5 + 'px'\r\n            : controlProp.TabFixedHeight! === 0\r\n              ? controlProp.Height! - controlProp.Font!.FontSize! - 13 + 'px'\r\n              : controlProp.TabOrientation === 1\r\n                ? `${controlProp.Height! - 21}px`\r\n                : `${controlProp.Height! - 35}px`\r\n          : `${controlProp.Height! - 3}px`,\r\n      width:\r\n        controlProp.TabOrientation === 0 || controlProp.TabOrientation === 1\r\n          ? `${controlProp.Width! - 3}px`\r\n          : controlProp.TabFixedWidth! > 0\r\n            ? controlProp.Width! - controlProp.TabFixedWidth! - 15 + 'px'\r\n            : controlProp.TabFixedWidth! === 0\r\n              ? controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\r\n                ? `${controlProp.Width! - this.tempWidth - 13}px`\r\n                : controlProp.Width! - controlProp.Font!.FontSize! - 20 + 'px'\r\n              : `${controlProp.Width! - 34}px`,\r\n      left:\r\n        controlProp.TabOrientation === 2\r\n          ? controlProp.TabFixedWidth! > 0\r\n            ? controlProp.TabFixedWidth! + 12 + 'px'\r\n            : controlProp.TabFixedWidth! === 0\r\n              ? controlProp.TabOrientation === 2 ||\r\n              controlProp.TabOrientation === 3\r\n                ? `${this.tempWidth + 10}px`\r\n                : controlProp.Font!.FontSize! + 20 + 'px'\r\n              : '40px'\r\n          : controlProp.TabOrientation === 3\r\n            ? controlProp.TabFixedWidth! > 0\r\n              ? '0px'\r\n              : '0px'\r\n            : '0px',\r\n      cursor:\r\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\r\n          ? this.getMouseCursorData\r\n          : 'default',\r\n      padding: '0px',\r\n      boxShadow: controlProp.TabOrientation === 0 ? '2px 0px gray' : ''\r\n    }\r\n  }\r\n\r\n  scrollDisabledValidate () {\r\n    if (this.properties.TabOrientation === 0 || this.properties.TabOrientation === 1) {\r\n      if (this.scrolling) {\r\n        const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n        const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n        if (this.scrolling.scrollLeft >= (this.scrolling.scrollWidth - this.scrolling.clientWidth - 30)) {\r\n          rightButton.style.opacity = '0.4'\r\n          leftButton.style.opacity = '1'\r\n        } else if (this.scrolling.scrollLeft === 0) {\r\n          leftButton.style.opacity = '0.4'\r\n          rightButton.style.opacity = '1'\r\n        } else {\r\n          leftButton.style.opacity = '1'\r\n          rightButton.style.opacity = '1'\r\n        }\r\n      }\r\n    } else {\r\n      if (this.scrolling) {\r\n        const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n        const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n        if (this.scrolling.scrollTop >= (this.scrolling.scrollHeight - this.scrolling.clientHeight)) {\r\n          rightButton.style.opacity = '0.4'\r\n          leftButton.style.opacity = '1'\r\n        } else if (this.scrolling.scrollTop === 0) {\r\n          leftButton.style.opacity = '0.4'\r\n          rightButton.style.opacity = '1'\r\n        } else {\r\n          leftButton.style.opacity = '1'\r\n          rightButton.style.opacity = '1'\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @description watches changes in propControlData to set autoset when true\r\n   * @function isScrollUsed\r\n   * @param oldVal previous propControlData data\r\n   * @param newVal  new/changed propControlData data\r\n   */\r\n  @Watch('properties.Width')\r\n  isScrollUsed (newVal: controlData, oldVal: controlData) {\r\n    this.scrollDisabledValidate()\r\n    this.tempScrollWidth = this.scrolling.offsetWidth!\r\n    if (this.properties.MultiRow) {\r\n      if (this.scrolling) {\r\n        Vue.nextTick(() => {\r\n          this.topValue = this.scrolling.offsetHeight!\r\n        })\r\n      }\r\n      const initialLength = this.extraDatas.Tabs!.length!\r\n      const len = (this.tempWidth + 12) * initialLength\r\n      if (len - this.properties.Width! >= 0) {\r\n        const a = Math.floor(len / this.properties.Width!) + 1\r\n        this.multiRowCount = a\r\n        if (this.properties.Width! <= (this.tempWidth + 12) * 2) {\r\n          this.multiRowCount = a + 2\r\n        } else if (newVal > oldVal) {\r\n          this.multiRowCount = this.controls.length!\r\n          const a = Math.ceil(len / this.properties.Width!)\r\n          this.multiRowCount = a\r\n        }\r\n      } else {\r\n        this.multiRowCount = 1\r\n      }\r\n    } else {\r\n      this.scrollButtonVerify()\r\n    }\r\n  }\r\n\r\n  @Watch('properties.TabOrientation')\r\n  orientValidate () {\r\n    this.scrollButtonVerify()\r\n    this.scrollDisabledValidate()\r\n    if (this.scrolling) {\r\n      this.topValue = this.scrolling.offsetHeight\r\n    }\r\n  }\r\n\r\n  @Watch('properties.MultiRow')\r\n  multiRowValidate () {\r\n    if (this.scrolling) {\r\n      this.topValue = this.scrolling.offsetHeight\r\n    }\r\n  }\r\n  mounted () {\r\n    this.$el.focus()\r\n    this.scrollButtonVerify()\r\n    this.tempScrollWidth = this.scrolling.offsetWidth!\r\n    this.calculateWidthHeight()\r\n  }\r\n  /**\r\n   * @description watches changes in FontSize of Font\r\n   * @function checkFontValue\r\n   * @param oldVal previous properties data\r\n   * @param newVal  new/changed properties data\r\n   */\r\n  @Watch('properties.Font.FontSize', { deep: true })\r\n  checkFontValue (newVal: number, oldVal: number) {\r\n    this.calculateWidthHeight()\r\n    this.scrollButtonVerify()\r\n    this.scrollDisabledValidate()\r\n  }\r\n\r\n  /**\r\n   * @description watches changes in selectedTabData to set the caption\r\n   * @function captionValue\r\n   * @param oldVal previous selectedTabData data\r\n   * @param newVal  new/changed selectedTabData data\r\n   */\r\n  @Watch('selectedTabData.Caption')\r\n  captionValue (newVal: string, oldVal: string) {\r\n    this.setScrollLeft()\r\n    if (newVal === '') {\r\n      this.tempWidth = 30\r\n    }\r\n    this.calculateWidthHeight()\r\n    this.scrollButtonVerify()\r\n  }\r\n\r\n  get selectedTabData () {\r\n    return this.extraDatas!.Tabs![this.updatedValue]\r\n  }\r\n\r\n  setScrollLeft () {\r\n    if (this.scrolling) {\r\n      let totalSiblingWidth = 0\r\n      for (let i = 0; i < this.properties.Value!; i++) {\r\n        const a = this.scrolling.children[i] as HTMLDivElement\r\n        totalSiblingWidth += a.clientWidth\r\n      }\r\n      this.scrolling.scrollLeft = totalSiblingWidth\r\n    }\r\n  }\r\n\r\n  calculateWidthHeight () {\r\n    const that = this\r\n    if (this.controlTabsRef) {\r\n      const divElement = this.controlTabsRef\r\n      let tempWidth = 0\r\n      let tempHeight = 0\r\n      let maxWidth = 0\r\n      Vue.nextTick(function () {\r\n        for (let i = 0; i < divElement.length; i++) {\r\n          const ele = divElement[i].children[0].children[1]\r\n            .children[0] as HTMLInputElement\r\n          if (ele.offsetWidth > maxWidth) {\r\n            maxWidth = ele.offsetWidth\r\n          }\r\n          if (maxWidth > 30) {\r\n            tempWidth = ele.offsetWidth\r\n          } else {\r\n            tempWidth = 30\r\n          }\r\n          if (ele.offsetHeight > tempHeight) {\r\n            tempHeight = ele.offsetHeight\r\n          }\r\n        }\r\n        that.tempWidth = tempWidth\r\n        that.tempHeight = tempHeight\r\n      })\r\n    }\r\n  }\r\n  @Emit('updateModel')\r\n  updateDataModel (updateData: IupdateDataModel) {\r\n    return updateData\r\n  }\r\n  focusPage () {\r\n    if (this.extraDatas!.Tabs!.length > 0) {\r\n      const value: number = this.updatedValue;\r\n      (this.controlTabsRef[value].children[0]\r\n        .children[1] as HTMLLabelElement).focus()\r\n    } else {\r\n      (this.$el.children[0] as HTMLDivElement).focus()\r\n    }\r\n  }\r\n  closeMenu () {\r\n    this.viewMenu = false\r\n    this.focusPage()\r\n  }\r\n  eventStoppers () {\r\n    const eventStop = (event: Event) => event.stopPropagation()\r\n    return this.isEditMode === false\r\n      ? null\r\n      : {\r\n        keydown: eventStop\r\n      }\r\n  }\r\n  deleteTabControl (event: KeyboardEvent) {\r\n    if (this.isEditMode) {\r\n      event.stopPropagation()\r\n      const tabControlData = JSON.parse(JSON.stringify(this.extraDatas.Tabs))\r\n      if (tabControlData && tabControlData.length > 0) {\r\n        tabControlData.splice(this.updatedValue, 1)\r\n        this.updateDataModelExtraData({\r\n          propertyName: 'Tabs',\r\n          value: tabControlData\r\n        })\r\n        this.updateTabStripValue(this.updatedValue! - 1)\r\n        Vue.nextTick(() => {\r\n          this.focusPage()\r\n        })\r\n      }\r\n    }\r\n  }\r\n  updateTabStripValue (index: number) {\r\n    const userData = this.userformData[this.userFormId]\r\n    const tabs = userData[this.controlId].extraDatas!.Tabs!\r\n    const tabIndex = tabs.findIndex((val, key) => key === index + 1)\r\n    if (tabIndex !== -1) {\r\n      const value = index + 1\r\n      this.updateDataModel({ propertyName: 'Value', value: value })\r\n    } else if (tabIndex === -1 && index !== -1) {\r\n      const value = index\r\n      this.updateDataModel({ propertyName: 'Value', value: value })\r\n    } else {\r\n      this.updateDataModel({ propertyName: 'Value', value: -1 })\r\n    }\r\n  }\r\n  created () {\r\n    EventBus.$on('focusTabStrip', () => {\r\n      this.focusPage()\r\n    })\r\n  }\r\n  destroyed () {\r\n    EventBus.$off('focusTabStrip')\r\n  }\r\n  tabStripClick (event: MouseEvent) {\r\n    if (this.toolBoxSelectControl === 'Select') {\r\n      event.stopPropagation()\r\n      this.selectedItem(event)\r\n    }\r\n  }\r\n\r\n  @Watch('tempWidth')\r\n  tempWidthValidate () {\r\n    if (this.tempWidth < 30) {\r\n      this.tempWidth = 30\r\n    }\r\n  }\r\n\r\n  @Watch('properties.Value')\r\n  valueValidate () {\r\n    this.focusPage()\r\n    let sum = 0\r\n    Vue.nextTick(() => {\r\n      if (this.properties.TabOrientation === 0 || this.properties.TabOrientation === 1) {\r\n        for (let i = 0; i < this.properties.Value!; i++) {\r\n          sum += this.controlTabsRef[i].clientWidth\r\n        }\r\n        if (this.properties.Width! - this.scrolling.offsetWidth > sum) {\r\n          this.scrolling.scrollLeft = sum\r\n        } else {\r\n          const valueAsNumber = this.properties.Value! as number\r\n          if (sum > this.controlTabsRef[valueAsNumber].clientWidth) {\r\n            const sL = sum - this.controlTabsRef[valueAsNumber].clientWidth\r\n            this.scrolling.scrollLeft = sL\r\n          } else {\r\n            this.scrolling.scrollLeft = sum\r\n          }\r\n        }\r\n        if (this.scrolling) {\r\n          const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n          const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n          if (this.scrolling.scrollLeft >= (this.scrolling.scrollWidth - this.scrolling.clientWidth - 30)) {\r\n            rightButton.style.opacity = '0.4'\r\n            leftButton.style.opacity = '1'\r\n          } else if (this.scrolling.scrollLeft === 0) {\r\n            leftButton.style.opacity = '0.4'\r\n            rightButton.style.opacity = '1'\r\n          } else {\r\n            leftButton.style.opacity = '1'\r\n            rightButton.style.opacity = '1'\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < this.properties.Value!; i++) {\r\n          sum += this.controlTabsRef[i].clientHeight\r\n        }\r\n        if (this.properties.Height! - this.scrolling.offsetHeight > sum) {\r\n          this.scrolling.scrollTop = sum\r\n        } else {\r\n          const valueAsNumber = this.properties.Value! as number\r\n          if (sum > this.controlTabsRef[valueAsNumber].clientHeight) {\r\n            const sL = sum - this.controlTabsRef[valueAsNumber].clientHeight\r\n            this.scrolling.scrollTop = sL\r\n          } else {\r\n            this.scrolling.scrollTop = sum\r\n          }\r\n        }\r\n        if (this.scrolling) {\r\n          const rightButton = this.buttonStyleRef.children[1] as HTMLButtonElement\r\n          const leftButton = this.buttonStyleRef.children[0] as HTMLButtonElement\r\n          if (this.scrolling.scrollTop >= (this.scrolling.scrollHeight - this.scrolling.clientHeight)) {\r\n            rightButton.style.opacity = '0.4'\r\n            leftButton.style.opacity = '1'\r\n          } else if (this.scrolling.scrollTop === 0) {\r\n            leftButton.style.opacity = '0.4'\r\n            rightButton.style.opacity = '1'\r\n          } else {\r\n            leftButton.style.opacity = '1'\r\n            rightButton.style.opacity = '1'\r\n          }\r\n        }\r\n      }\r\n      this.focusPage()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.outer-page {\r\n  background-color: rgb(238, 238, 238);\r\n  overflow-y: hidden;\r\n  overflow-x: hidden;\r\n  box-sizing: border-box;\r\n  width: 0px;\r\n  height: 0px;\r\n  left: 0px;\r\n  top: 0px;\r\n}\r\n.pages {\r\n  margin: 0;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n}\r\n.left-button {\r\n  position: relative;\r\n  outline: none;\r\n  background-image: url(\"../../../../assets/left-arrow-img.png\");\r\n  background-size: 30%;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 2px solid white;\r\n  border-right-color: gray;\r\n  border-bottom-color: gray;\r\n  top: 3px;\r\n  right: 15px;\r\n  width: 22px;\r\n  height: 18px;\r\n  padding: 0;\r\n  margin: 0;\r\n  overflow: hidden;\r\n  z-index: 5;\r\n}\r\n.right-button {\r\n  position: relative;\r\n  outline: none;\r\n  background-image: url(\"../../../../assets/right-arrow-img.png\");\r\n  background-size: 30%;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 2px solid white;\r\n  border-right-color: gray;\r\n  border-bottom-color: gray;\r\n  top: 3px;\r\n  right: 15px;\r\n  width: 22px;\r\n  height: 18px;\r\n  padding: 0;\r\n  margin: 0;\r\n  overflow: hidden;\r\n  z-index: 5;\r\n}\r\n.move {\r\n  width: 100%;\r\n  display: grid;\r\n}\r\n\r\n.page {\r\n  vertical-align: top;\r\n  z-index: 1;\r\n  overflow: hidden;\r\n}\r\n.scroll-page {\r\n  z-index: 2;\r\n}\r\n.page label {\r\n  border: 0.1px solid white;\r\n  background-color: rgb(238, 238, 238);\r\n  padding: 5px 5px 5px 5px;\r\n  margin: 0;\r\n  cursor: pointer;\r\n  position: relative;\r\n  top: 0px;\r\n}\r\n.page [type=\"radio\"] {\r\n  display: none;\r\n}\r\n::-webkit-scrollbar {\r\n  display: none;\r\n  width: 0;\r\n  height: 1em;\r\n  background-color: rgb(238, 238, 238);\r\n}\r\n::-webkit-scrollbar.move {\r\n  display: none;\r\n  width: 0;\r\n  height: 1em;\r\n  background-color: rgb(238, 238, 238);\r\n}\r\n\r\n::-webkit-scrollbar-button {\r\n  background: rgb(238, 238, 238);\r\n  height: 20px;\r\n  border: 1px solid lightgray;\r\n  border-right-color: gray;\r\n  border-bottom-color: gray;\r\n}\r\n\r\n/* Up */\r\n::-webkit-scrollbar-button:single-button:horizontal:decrement {\r\n  background-image: url(\"../../../../assets/triangle-up-img.png\");\r\n  transform: rotate(90deg);\r\n  background-size: 10px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n/* Down */\r\n::-webkit-scrollbar-button:single-button:horizontal:increment {\r\n  background-image: url(\"../../../../assets/triangle-down-img.png\");\r\n  background-size: 10px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n::-webkit-scrollbar-track-piece {\r\n  width: 0px;\r\n}\r\n\r\n.page .content {\r\n  position: absolute;\r\n  white-space: normal;\r\n  top: 23px;\r\n  left: 0px;\r\n  background: rgb(238, 238, 238);\r\n  height: 100px;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 20px;\r\n  padding-right: 10px;\r\n  width: calc(100% - 35px);\r\n  height: calc(100% - 65px);\r\n  border: 0.1px solid white;\r\n  box-shadow: 2px 1px gray;\r\n}\r\n.forButton {\r\n  margin: 3px;\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n  border: 2px outset;\r\n}\r\n.page [type=\"radio\"]:checked ~ label.forButton {\r\n  margin: 3px;\r\n  border-right: 2px solid gray;\r\n  border-bottom: none;\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n  background-color: gray;\r\n  border: 2px inset;\r\n}\r\n.forTab {\r\n  border-bottom: none;\r\n  border-radius: 3px;\r\n}\r\n.page [type=\"radio\"]:checked ~ label.forTab {\r\n  border-right: 2px solid gray;\r\n  border-bottom: none;\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n}\r\n.forLeft {\r\n  border-bottom: none;\r\n  border-radius: 3px;\r\n}\r\n.page [type=\"radio\"]:checked ~ label.forLeft {\r\n  border-bottom: 2px solid gray;\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n}\r\n\r\n.fmTabStyleButton {\r\n  border: 1px inset !important;\r\n}\r\n.fmTabStyleButton [type=\"radio\"]:checked {\r\n  border: 1px outset !important;\r\n  background-color: gray !important;\r\n}\r\n.page [type=\"radio\"]:checked ~ label ~ .content {\r\n  z-index: 1;\r\n}\r\n.content {\r\n  overflow: auto;\r\n}\r\n\r\n.spanClass {\r\n  text-decoration: underline;\r\n  text-underline-position: under;\r\n}\r\n:focus {\r\n  outline: none;\r\n}\r\n</style>\r\n"]}]}